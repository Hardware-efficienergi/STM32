ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB127:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "i2c.h"
  25:Src/main.c    **** #include "opamp.h"
  26:Src/main.c    **** #include "spi.h"
  27:Src/main.c    **** #include "usart.h"
  28:Src/main.c    **** #include "usb_device.h"
  29:Src/main.c    **** #include "gpio.h"
  30:Src/main.c    **** 
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 2


  31:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END Includes */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PTD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** char log_buffer[100];
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   * @retval int
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    ****   
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 3


  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_ADC1_Init();
  98:Src/main.c    ****   MX_ADC2_Init();
  99:Src/main.c    ****   MX_ADC3_Init();
 100:Src/main.c    ****   MX_ADC4_Init();
 101:Src/main.c    ****   MX_USART1_UART_Init();
 102:Src/main.c    ****   MX_USART3_UART_Init();
 103:Src/main.c    ****   MX_I2C1_Init();
 104:Src/main.c    ****   MX_OPAMP4_Init();
 105:Src/main.c    ****   MX_USB_DEVICE_Init();
 106:Src/main.c    ****   MX_USART2_UART_Init();
 107:Src/main.c    ****   MX_SPI3_Init();
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 109:Src/main.c    ****   uint8_t echo;
 110:Src/main.c    ****   unsigned long previousMillis = 0;
 111:Src/main.c    ****   const long interval = 1000;
 112:Src/main.c    ****   // Set the ESP SPI3 CS pin to high, to disable possible interaction with ESP. 
 113:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_SET);
 114:Src/main.c    ****   /* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   while (1)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     //HAL_UART_Receive(&huart3, &echo, 1, 100);
 121:Src/main.c    ****     //debug_printf(echo);
 122:Src/main.c    ****     
 123:Src/main.c    ****     unsigned long currentMillis = HAL_GetTick();
 124:Src/main.c    ****     if (currentMillis - previousMillis >= interval) {
 125:Src/main.c    ****     previousMillis = currentMillis;
 126:Src/main.c    ****     // SPI3
 127:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15);
 128:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 129:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_11);
 130:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_12);
 131:Src/main.c    **** 
 132:Src/main.c    ****     // LEDs
 133:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_8);
 134:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_9);
 135:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_10);
 136:Src/main.c    **** 
 137:Src/main.c    **** 
 138:Src/main.c    **** 
 139:Src/main.c    ****     sprintf(log_buffer,"Hello World\r\n");
 140:Src/main.c    ****     debug_printf(log_buffer);
 141:Src/main.c    ****     }
 142:Src/main.c    ****     
 143:Src/main.c    ****     /* USER CODE END WHILE */
 144:Src/main.c    **** 
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 4


 145:Src/main.c    ****     /* USER CODE BEGIN 3 */
 146:Src/main.c    ****   }
 147:Src/main.c    ****   /* USER CODE END 3 */
 148:Src/main.c    **** }
 149:Src/main.c    **** 
 150:Src/main.c    **** /**
 151:Src/main.c    ****   * @brief System Clock Configuration
 152:Src/main.c    ****   * @retval None
 153:Src/main.c    ****   */
 154:Src/main.c    **** void SystemClock_Config(void)
 155:Src/main.c    **** {
  29              		.loc 1 155 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 120
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 9FB0     		sub	sp, sp, #124
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 144
 156:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  44              		.loc 1 156 3 view .LVU1
  45              		.loc 1 156 22 is_stmt 0 view .LVU2
  46 0004 0024     		movs	r4, #0
  47 0006 1694     		str	r4, [sp, #88]
  48 0008 1794     		str	r4, [sp, #92]
  49 000a 1A94     		str	r4, [sp, #104]
 157:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 157 3 is_stmt 1 view .LVU3
  51              		.loc 1 157 22 is_stmt 0 view .LVU4
  52 000c 0F94     		str	r4, [sp, #60]
  53 000e 1094     		str	r4, [sp, #64]
  54 0010 1194     		str	r4, [sp, #68]
  55 0012 1294     		str	r4, [sp, #72]
  56 0014 1394     		str	r4, [sp, #76]
 158:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  57              		.loc 1 158 3 is_stmt 1 view .LVU5
  58              		.loc 1 158 28 is_stmt 0 view .LVU6
  59 0016 3C22     		movs	r2, #60
  60 0018 2146     		mov	r1, r4
  61 001a 6846     		mov	r0, sp
  62 001c FFF7FEFF 		bl	memset
  63              	.LVL0:
 159:Src/main.c    **** 
 160:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  64              		.loc 1 162 3 is_stmt 1 view .LVU7
  65              		.loc 1 162 36 is_stmt 0 view .LVU8
  66 0020 0323     		movs	r3, #3
  67 0022 1493     		str	r3, [sp, #80]
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 5


 163:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  68              		.loc 1 163 3 is_stmt 1 view .LVU9
  69              		.loc 1 163 30 is_stmt 0 view .LVU10
  70 0024 4FF48035 		mov	r5, #65536
  71 0028 1595     		str	r5, [sp, #84]
 164:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  72              		.loc 1 164 3 is_stmt 1 view .LVU11
 165:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  73              		.loc 1 165 3 view .LVU12
  74              		.loc 1 165 30 is_stmt 0 view .LVU13
  75 002a 0126     		movs	r6, #1
  76 002c 1896     		str	r6, [sp, #96]
 166:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  77              		.loc 1 166 3 is_stmt 1 view .LVU14
  78              		.loc 1 166 41 is_stmt 0 view .LVU15
  79 002e 1023     		movs	r3, #16
  80 0030 1993     		str	r3, [sp, #100]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  81              		.loc 1 167 3 is_stmt 1 view .LVU16
  82              		.loc 1 167 34 is_stmt 0 view .LVU17
  83 0032 0227     		movs	r7, #2
  84 0034 1B97     		str	r7, [sp, #108]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  85              		.loc 1 168 3 is_stmt 1 view .LVU18
  86              		.loc 1 168 35 is_stmt 0 view .LVU19
  87 0036 1C95     		str	r5, [sp, #112]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
  88              		.loc 1 169 3 is_stmt 1 view .LVU20
  89              		.loc 1 169 32 is_stmt 0 view .LVU21
  90 0038 4FF48013 		mov	r3, #1048576
  91 003c 1D93     		str	r3, [sp, #116]
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  92              		.loc 1 170 3 is_stmt 1 view .LVU22
  93              		.loc 1 170 7 is_stmt 0 view .LVU23
  94 003e 14A8     		add	r0, sp, #80
  95 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
  96              	.LVL1:
 171:Src/main.c    ****   {
 172:Src/main.c    ****     Error_Handler();
 173:Src/main.c    ****   }
 174:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 175:Src/main.c    ****   */
 176:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  97              		.loc 1 176 3 is_stmt 1 view .LVU24
  98              		.loc 1 176 31 is_stmt 0 view .LVU25
  99 0044 0F23     		movs	r3, #15
 100 0046 0F93     		str	r3, [sp, #60]
 177:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 178:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 101              		.loc 1 178 3 is_stmt 1 view .LVU26
 102              		.loc 1 178 34 is_stmt 0 view .LVU27
 103 0048 1097     		str	r7, [sp, #64]
 179:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 104              		.loc 1 179 3 is_stmt 1 view .LVU28
 105              		.loc 1 179 35 is_stmt 0 view .LVU29
 106 004a 1194     		str	r4, [sp, #68]
 180:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 6


 107              		.loc 1 180 3 is_stmt 1 view .LVU30
 108              		.loc 1 180 36 is_stmt 0 view .LVU31
 109 004c 4FF48063 		mov	r3, #1024
 110 0050 1293     		str	r3, [sp, #72]
 181:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 111              		.loc 1 181 3 is_stmt 1 view .LVU32
 112              		.loc 1 181 36 is_stmt 0 view .LVU33
 113 0052 1394     		str	r4, [sp, #76]
 182:Src/main.c    **** 
 183:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 114              		.loc 1 183 3 is_stmt 1 view .LVU34
 115              		.loc 1 183 7 is_stmt 0 view .LVU35
 116 0054 3146     		mov	r1, r6
 117 0056 0FA8     		add	r0, sp, #60
 118 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 119              	.LVL2:
 184:Src/main.c    ****   {
 185:Src/main.c    ****     Error_Handler();
 186:Src/main.c    ****   }
 187:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_USART1
 120              		.loc 1 187 3 is_stmt 1 view .LVU36
 121              		.loc 1 187 38 is_stmt 0 view .LVU37
 122 005c 0A4B     		ldr	r3, .L3
 123 005e 0093     		str	r3, [sp]
 188:Src/main.c    ****                               |RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_USART3
 189:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_ADC12
 190:Src/main.c    ****                               |RCC_PERIPHCLK_ADC34;
 191:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_SYSCLK;
 124              		.loc 1 191 3 is_stmt 1 view .LVU38
 125              		.loc 1 191 38 is_stmt 0 view .LVU39
 126 0060 0296     		str	r6, [sp, #8]
 192:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_SYSCLK;
 127              		.loc 1 192 3 is_stmt 1 view .LVU40
 128              		.loc 1 192 38 is_stmt 0 view .LVU41
 129 0062 0395     		str	r5, [sp, #12]
 193:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_SYSCLK;
 130              		.loc 1 193 3 is_stmt 1 view .LVU42
 131              		.loc 1 193 38 is_stmt 0 view .LVU43
 132 0064 4FF48023 		mov	r3, #262144
 133 0068 0493     		str	r3, [sp, #16]
 194:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV4;
 134              		.loc 1 194 3 is_stmt 1 view .LVU44
 135              		.loc 1 194 37 is_stmt 0 view .LVU45
 136 006a 4FF49073 		mov	r3, #288
 137 006e 0993     		str	r3, [sp, #36]
 195:Src/main.c    ****   PeriphClkInit.Adc34ClockSelection = RCC_ADC34PLLCLK_DIV4;
 138              		.loc 1 195 3 is_stmt 1 view .LVU46
 139              		.loc 1 195 37 is_stmt 0 view .LVU47
 140 0070 4FF41053 		mov	r3, #9216
 141 0074 0A93     		str	r3, [sp, #40]
 196:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 142              		.loc 1 196 3 is_stmt 1 view .LVU48
 143              		.loc 1 196 36 is_stmt 0 view .LVU49
 144 0076 0794     		str	r4, [sp, #28]
 197:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL;
 145              		.loc 1 197 3 is_stmt 1 view .LVU50
 146              		.loc 1 197 35 is_stmt 0 view .LVU51
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 7


 147 0078 4FF48003 		mov	r3, #4194304
 148 007c 0E93     		str	r3, [sp, #56]
 198:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 149              		.loc 1 198 3 is_stmt 1 view .LVU52
 150              		.loc 1 198 7 is_stmt 0 view .LVU53
 151 007e 6846     		mov	r0, sp
 152 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 153              	.LVL3:
 199:Src/main.c    ****   {
 200:Src/main.c    ****     Error_Handler();
 201:Src/main.c    ****   }
 202:Src/main.c    **** }
 154              		.loc 1 202 1 view .LVU54
 155 0084 1FB0     		add	sp, sp, #124
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 20
 158              		@ sp needed
 159 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 160              	.L4:
 161              		.align	2
 162              	.L3:
 163 0088 A7010200 		.word	131495
 164              		.cfi_endproc
 165              	.LFE127:
 167              		.section	.text.main,"ax",%progbits
 168              		.align	1
 169              		.global	main
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	main:
 176              	.LFB126:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 177              		.loc 1 73 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 38B5     		push	{r3, r4, r5, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 188              		.loc 1 82 3 view .LVU56
 189 0002 FFF7FEFF 		bl	HAL_Init
 190              	.LVL4:
  89:Src/main.c    **** 
 191              		.loc 1 89 3 view .LVU57
 192 0006 FFF7FEFF 		bl	SystemClock_Config
 193              	.LVL5:
  96:Src/main.c    ****   MX_ADC1_Init();
 194              		.loc 1 96 3 view .LVU58
 195 000a FFF7FEFF 		bl	MX_GPIO_Init
 196              	.LVL6:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 8


  97:Src/main.c    ****   MX_ADC2_Init();
 197              		.loc 1 97 3 view .LVU59
 198 000e FFF7FEFF 		bl	MX_ADC1_Init
 199              	.LVL7:
  98:Src/main.c    ****   MX_ADC3_Init();
 200              		.loc 1 98 3 view .LVU60
 201 0012 FFF7FEFF 		bl	MX_ADC2_Init
 202              	.LVL8:
  99:Src/main.c    ****   MX_ADC4_Init();
 203              		.loc 1 99 3 view .LVU61
 204 0016 FFF7FEFF 		bl	MX_ADC3_Init
 205              	.LVL9:
 100:Src/main.c    ****   MX_USART1_UART_Init();
 206              		.loc 1 100 3 view .LVU62
 207 001a FFF7FEFF 		bl	MX_ADC4_Init
 208              	.LVL10:
 101:Src/main.c    ****   MX_USART3_UART_Init();
 209              		.loc 1 101 3 view .LVU63
 210 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 211              	.LVL11:
 102:Src/main.c    ****   MX_I2C1_Init();
 212              		.loc 1 102 3 view .LVU64
 213 0022 FFF7FEFF 		bl	MX_USART3_UART_Init
 214              	.LVL12:
 103:Src/main.c    ****   MX_OPAMP4_Init();
 215              		.loc 1 103 3 view .LVU65
 216 0026 FFF7FEFF 		bl	MX_I2C1_Init
 217              	.LVL13:
 104:Src/main.c    ****   MX_USB_DEVICE_Init();
 218              		.loc 1 104 3 view .LVU66
 219 002a FFF7FEFF 		bl	MX_OPAMP4_Init
 220              	.LVL14:
 105:Src/main.c    ****   MX_USART2_UART_Init();
 221              		.loc 1 105 3 view .LVU67
 222 002e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 223              	.LVL15:
 106:Src/main.c    ****   MX_SPI3_Init();
 224              		.loc 1 106 3 view .LVU68
 225 0032 FFF7FEFF 		bl	MX_USART2_UART_Init
 226              	.LVL16:
 107:Src/main.c    ****   /* USER CODE BEGIN 2 */
 227              		.loc 1 107 3 view .LVU69
 228 0036 FFF7FEFF 		bl	MX_SPI3_Init
 229              	.LVL17:
 109:Src/main.c    ****   unsigned long previousMillis = 0;
 230              		.loc 1 109 3 view .LVU70
 110:Src/main.c    ****   const long interval = 1000;
 231              		.loc 1 110 3 view .LVU71
 111:Src/main.c    ****   // Set the ESP SPI3 CS pin to high, to disable possible interaction with ESP. 
 232              		.loc 1 111 3 view .LVU72
 113:Src/main.c    ****   /* USER CODE END 2 */
 233              		.loc 1 113 3 view .LVU73
 234 003a 0122     		movs	r2, #1
 235 003c 0821     		movs	r1, #8
 236 003e 2048     		ldr	r0, .L10
 237 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL18:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 9


 110:Src/main.c    ****   const long interval = 1000;
 239              		.loc 1 110 17 is_stmt 0 view .LVU74
 240 0044 0025     		movs	r5, #0
 241 0046 32E0     		b	.L6
 242              	.LVL19:
 243              	.L9:
 244              	.LBB2:
 245              	.LBB3:
 125:Src/main.c    ****     // SPI3
 246              		.loc 1 125 5 is_stmt 1 view .LVU75
 127:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 247              		.loc 1 127 5 view .LVU76
 248 0048 4FF40041 		mov	r1, #32768
 249 004c 4FF09040 		mov	r0, #1207959552
 250              	.LVL20:
 127:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 251              		.loc 1 127 5 is_stmt 0 view .LVU77
 252 0050 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 253              	.LVL21:
 128:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_11);
 254              		.loc 1 128 5 is_stmt 1 view .LVU78
 255 0054 1B4D     		ldr	r5, .L10+4
 256 0056 4FF48061 		mov	r1, #1024
 257 005a 2846     		mov	r0, r5
 258 005c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 259              	.LVL22:
 129:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_12);
 260              		.loc 1 129 5 view .LVU79
 261 0060 4FF40061 		mov	r1, #2048
 262 0064 2846     		mov	r0, r5
 263 0066 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 264              	.LVL23:
 130:Src/main.c    **** 
 265              		.loc 1 130 5 view .LVU80
 266 006a 4FF48051 		mov	r1, #4096
 267 006e 2846     		mov	r0, r5
 268 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 269              	.LVL24:
 133:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_9);
 270              		.loc 1 133 5 view .LVU81
 271 0074 05F58065 		add	r5, r5, #1024
 272 0078 4FF48071 		mov	r1, #256
 273 007c 2846     		mov	r0, r5
 274 007e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 275              	.LVL25:
 134:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_10);
 276              		.loc 1 134 5 view .LVU82
 277 0082 4FF40071 		mov	r1, #512
 278 0086 2846     		mov	r0, r5
 279 0088 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 280              	.LVL26:
 135:Src/main.c    **** 
 281              		.loc 1 135 5 view .LVU83
 282 008c 4FF48061 		mov	r1, #1024
 283 0090 2846     		mov	r0, r5
 284 0092 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 285              	.LVL27:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 10


 139:Src/main.c    ****     debug_printf(log_buffer);
 286              		.loc 1 139 5 view .LVU84
 287 0096 0C4D     		ldr	r5, .L10+8
 288 0098 0C4B     		ldr	r3, .L10+12
 289 009a 07CB     		ldmia	r3!, {r0, r1, r2}
 290 009c 2860     		str	r0, [r5]	@ unaligned
 291 009e 6960     		str	r1, [r5, #4]	@ unaligned
 292 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 293 00a2 1B88     		ldrh	r3, [r3]	@ unaligned
 294 00a4 AB81     		strh	r3, [r5, #12]	@ unaligned
 140:Src/main.c    ****     }
 295              		.loc 1 140 5 view .LVU85
 296 00a6 2846     		mov	r0, r5
 297 00a8 FFF7FEFF 		bl	debug_printf
 298              	.LVL28:
 125:Src/main.c    ****     // SPI3
 299              		.loc 1 125 20 is_stmt 0 view .LVU86
 300 00ac 2546     		mov	r5, r4
 301              	.LVL29:
 302              	.L6:
 125:Src/main.c    ****     // SPI3
 303              		.loc 1 125 20 view .LVU87
 304              	.LBE3:
 305              	.LBE2:
 118:Src/main.c    ****   {
 306              		.loc 1 118 3 is_stmt 1 view .LVU88
 307              	.LBB4:
 123:Src/main.c    ****     if (currentMillis - previousMillis >= interval) {
 308              		.loc 1 123 5 view .LVU89
 123:Src/main.c    ****     if (currentMillis - previousMillis >= interval) {
 309              		.loc 1 123 35 is_stmt 0 view .LVU90
 310 00ae FFF7FEFF 		bl	HAL_GetTick
 311              	.LVL30:
 312 00b2 0446     		mov	r4, r0
 313              	.LVL31:
 124:Src/main.c    ****     previousMillis = currentMillis;
 314              		.loc 1 124 5 is_stmt 1 view .LVU91
 124:Src/main.c    ****     previousMillis = currentMillis;
 315              		.loc 1 124 23 is_stmt 0 view .LVU92
 316 00b4 431B     		subs	r3, r0, r5
 124:Src/main.c    ****     previousMillis = currentMillis;
 317              		.loc 1 124 8 view .LVU93
 318 00b6 B3F57A7F 		cmp	r3, #1000
 319 00ba F8D3     		bcc	.L6
 320 00bc C4E7     		b	.L9
 321              	.L11:
 322 00be 00BF     		.align	2
 323              	.L10:
 324 00c0 000C0048 		.word	1207962624
 325 00c4 00080048 		.word	1207961600
 326 00c8 00000000 		.word	log_buffer
 327 00cc 00000000 		.word	.LC0
 328              	.LBE4:
 329              		.cfi_endproc
 330              	.LFE126:
 332              		.section	.text.Error_Handler,"ax",%progbits
 333              		.align	1
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 11


 334              		.global	Error_Handler
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv4-sp-d16
 340              	Error_Handler:
 341              	.LFB128:
 203:Src/main.c    **** 
 204:Src/main.c    **** /* USER CODE BEGIN 4 */
 205:Src/main.c    **** 
 206:Src/main.c    **** /* USER CODE END 4 */
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** void Error_Handler(void)
 213:Src/main.c    **** {
 342              		.loc 1 213 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 214:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 215:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 218:Src/main.c    **** }
 347              		.loc 1 218 1 view .LVU95
 348 0000 7047     		bx	lr
 349              		.cfi_endproc
 350              	.LFE128:
 352              		.comm	log_buffer,100,4
 353              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 354              		.align	2
 355              	.LC0:
 356 0000 48656C6C 		.ascii	"Hello World\015\012\000"
 356      6F20576F 
 356      726C640D 
 356      0A00
 357              		.text
 358              	.Letext0:
 359              		.file 2 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_
 360              		.file 3 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 361              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 362              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 363              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 364              		.file 7 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/std
 365              		.file 8 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 366              		.file 9 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 367              		.file 10 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 368              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 369              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 370              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 371              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 372              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 373              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 12


 374              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 375              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 376              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_opamp.h"
 377              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 378              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 379              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 380              		.file 23 "Inc/adc.h"
 381              		.file 24 "Inc/i2c.h"
 382              		.file 25 "Inc/opamp.h"
 383              		.file 26 "Inc/spi.h"
 384              		.file 27 "Inc/usart.h"
 385              		.file 28 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdlib.h"
 386              		.file 29 "Inc/gpio.h"
 387              		.file 30 "Inc/usb_device.h"
 388              		.file 31 "<built-in>"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:18     .text.SystemClock_Config:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:163    .text.SystemClock_Config:0000000000000088 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:168    .text.main:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:175    .text.main:0000000000000000 main
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:324    .text.main:00000000000000c0 $d
                            *COM*:0000000000000064 log_buffer
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:333    .text.Error_Handler:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:340    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccB4IdeW.s:354    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_ADC3_Init
MX_ADC4_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_I2C1_Init
MX_OPAMP4_Init
MX_USB_DEVICE_Init
MX_USART2_UART_Init
MX_SPI3_Init
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
debug_printf
HAL_GetTick
