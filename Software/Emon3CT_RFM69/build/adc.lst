ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RunReceive,"ax",%progbits
  18              		.align	1
  19              		.global	RunReceive
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	RunReceive:
  27              	.LFB126:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 2


  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** #define true 1
  48:Src/adc.c     **** #define false 0
  49:Src/adc.c     **** volatile uint16_t adc1_dma_buff[ADC_DMA_BUFFSIZE];
  50:Src/adc.c     **** volatile uint16_t adc2_dma_buff[ADC_DMA_BUFFSIZE];
  51:Src/adc.c     **** 
  52:Src/adc.c     **** #include "RFM69.h"
  53:Src/adc.c     **** #include "RFM69_ext.h"
  54:Src/adc.c     **** 
  55:Src/adc.c     **** 
  56:Src/adc.c     **** typedef struct {
  57:Src/adc.c     ****   unsigned long nodeId; //store this nodeId
  58:Src/adc.c     ****   unsigned long uptime; //uptime in ms
  59:Src/adc.c     ****   //float         temp;   //temperature maybe?
  60:Src/adc.c     **** } Payload;
  61:Src/adc.c     **** Payload theData;
  62:Src/adc.c     **** uint8_t toAddress = 1;
  63:Src/adc.c     **** bool requestACK = false;
  64:Src/adc.c     **** 
  65:Src/adc.c     **** void RunReceive(void); //prototype
  66:Src/adc.c     **** void RunTransmit(void);
  67:Src/adc.c     **** 
  68:Src/adc.c     **** void RunReceive(void) {
  29              		.loc 1 68 23 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  69:Src/adc.c     ****   // SAMPLE RECEIVE CODE
  70:Src/adc.c     ****   if (RFM69_ReadDIO0Pin()) {
  38              		.loc 1 70 3 view .LVU1
  39              		.loc 1 70 7 is_stmt 0 view .LVU2
  40 0002 FFF7FEFF 		bl	RFM69_ReadDIO0Pin
  41              	.LVL0:
  42              		.loc 1 70 6 view .LVU3
  43 0006 18B9     		cbnz	r0, .L5
  44              	.L2:
  71:Src/adc.c     ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1); // turn on LED
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 3


  72:Src/adc.c     ****     RFM69_interruptHandler();
  73:Src/adc.c     ****   }
  74:Src/adc.c     ****   if (RFM69_receiveDone()) {
  45              		.loc 1 74 3 is_stmt 1 view .LVU4
  46              		.loc 1 74 7 is_stmt 0 view .LVU5
  47 0008 FFF7FEFF 		bl	RFM69_receiveDone
  48              	.LVL1:
  49              		.loc 1 74 6 view .LVU6
  50 000c 48B9     		cbnz	r0, .L6
  51              	.L1:
  75:Src/adc.c     ****     debug_printf("\r\n");
  76:Src/adc.c     ****     debug_printf("Payload Received!\r\n");
  77:Src/adc.c     ****     PrintRawBytes();
  78:Src/adc.c     ****     PrintStruct();
  79:Src/adc.c     ****     PrintByteByByte();
  80:Src/adc.c     ****     debug_printf("\r\n");
  81:Src/adc.c     ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0); // turn off LED
  82:Src/adc.c     ****   }
  83:Src/adc.c     **** }
  52              		.loc 1 83 1 view .LVU7
  53 000e 10BD     		pop	{r4, pc}
  54              	.L5:
  71:Src/adc.c     ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1); // turn on LED
  55              		.loc 1 71 5 is_stmt 1 view .LVU8
  56 0010 0122     		movs	r2, #1
  57 0012 2021     		movs	r1, #32
  58 0014 4FF09040 		mov	r0, #1207959552
  59 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  60              	.LVL2:
  72:Src/adc.c     ****   }
  61              		.loc 1 72 5 view .LVU9
  62 001c FFF7FEFF 		bl	RFM69_interruptHandler
  63              	.LVL3:
  64 0020 F2E7     		b	.L2
  65              	.L6:
  75:Src/adc.c     ****     debug_printf("\r\n");
  66              		.loc 1 75 5 view .LVU10
  67 0022 0B4C     		ldr	r4, .L7
  68 0024 2046     		mov	r0, r4
  69 0026 FFF7FEFF 		bl	debug_printf
  70              	.LVL4:
  76:Src/adc.c     ****     PrintRawBytes();
  71              		.loc 1 76 5 view .LVU11
  72 002a 0A48     		ldr	r0, .L7+4
  73 002c FFF7FEFF 		bl	debug_printf
  74              	.LVL5:
  77:Src/adc.c     ****     PrintStruct();
  75              		.loc 1 77 5 view .LVU12
  76 0030 FFF7FEFF 		bl	PrintRawBytes
  77              	.LVL6:
  78:Src/adc.c     ****     PrintByteByByte();
  78              		.loc 1 78 5 view .LVU13
  79 0034 FFF7FEFF 		bl	PrintStruct
  80              	.LVL7:
  79:Src/adc.c     ****     debug_printf("\r\n");
  81              		.loc 1 79 5 view .LVU14
  82 0038 FFF7FEFF 		bl	PrintByteByByte
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 4


  83              	.LVL8:
  80:Src/adc.c     ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0); // turn off LED
  84              		.loc 1 80 5 view .LVU15
  85 003c 2046     		mov	r0, r4
  86 003e FFF7FEFF 		bl	debug_printf
  87              	.LVL9:
  81:Src/adc.c     ****   }
  88              		.loc 1 81 5 view .LVU16
  89 0042 0022     		movs	r2, #0
  90 0044 2021     		movs	r1, #32
  91 0046 4FF09040 		mov	r0, #1207959552
  92 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL10:
  94              		.loc 1 83 1 is_stmt 0 view .LVU17
  95 004e DEE7     		b	.L1
  96              	.L8:
  97              		.align	2
  98              	.L7:
  99 0050 00000000 		.word	.LC0
 100 0054 04000000 		.word	.LC1
 101              		.cfi_endproc
 102              	.LFE126:
 104              		.section	.text.RunTransmit,"ax",%progbits
 105              		.align	1
 106              		.global	RunTransmit
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	RunTransmit:
 113              	.LFB127:
  84:Src/adc.c     **** 
  85:Src/adc.c     **** void RunTransmit(void) {
 114              		.loc 1 85 24 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
  86:Src/adc.c     ****   // SAMPLE TRANSMIT CODE
  87:Src/adc.c     ****   theData.nodeId = 20;
 123              		.loc 1 87 3 view .LVU19
 124              		.loc 1 87 18 is_stmt 0 view .LVU20
 125 0002 124C     		ldr	r4, .L11
 126 0004 1423     		movs	r3, #20
 127 0006 2360     		str	r3, [r4]
  88:Src/adc.c     ****   theData.uptime = HAL_GetTick();
 128              		.loc 1 88 3 is_stmt 1 view .LVU21
 129              		.loc 1 88 20 is_stmt 0 view .LVU22
 130 0008 FFF7FEFF 		bl	HAL_GetTick
 131              	.LVL11:
 132              		.loc 1 88 18 view .LVU23
 133 000c 6060     		str	r0, [r4, #4]
  89:Src/adc.c     ****   RFM69_send(toAddress, (const void *)(&theData), sizeof(theData), requestACK);
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 5


 134              		.loc 1 89 3 is_stmt 1 view .LVU24
 135 000e 104B     		ldr	r3, .L11+4
 136 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 137 0012 0822     		movs	r2, #8
 138 0014 2146     		mov	r1, r4
 139 0016 0F48     		ldr	r0, .L11+8
 140 0018 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 141 001a FFF7FEFF 		bl	RFM69_send
 142              	.LVL12:
  90:Src/adc.c     ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1); // turn on LED
 143              		.loc 1 90 3 view .LVU25
 144 001e 0122     		movs	r2, #1
 145 0020 2021     		movs	r1, #32
 146 0022 4FF09040 		mov	r0, #1207959552
 147 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL13:
  91:Src/adc.c     ****   HAL_Delay(1);
 149              		.loc 1 91 3 view .LVU26
 150 002a 0120     		movs	r0, #1
 151 002c FFF7FEFF 		bl	HAL_Delay
 152              	.LVL14:
  92:Src/adc.c     ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0); // turn off LED
 153              		.loc 1 92 3 view .LVU27
 154 0030 0022     		movs	r2, #0
 155 0032 2021     		movs	r1, #32
 156 0034 4FF09040 		mov	r0, #1207959552
 157 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL15:
  93:Src/adc.c     ****   HAL_Delay(2000);                         // send every ____ milliseconds.
 159              		.loc 1 93 3 view .LVU28
 160 003c 4FF4FA60 		mov	r0, #2000
 161 0040 FFF7FEFF 		bl	HAL_Delay
 162              	.LVL16:
  94:Src/adc.c     ****   debug_printf("Payload Sent!\r\n");
 163              		.loc 1 94 3 view .LVU29
 164 0044 0448     		ldr	r0, .L11+12
 165 0046 FFF7FEFF 		bl	debug_printf
 166              	.LVL17:
  95:Src/adc.c     **** }
 167              		.loc 1 95 1 is_stmt 0 view .LVU30
 168 004a 10BD     		pop	{r4, pc}
 169              	.L12:
 170              		.align	2
 171              	.L11:
 172 004c 00000000 		.word	theData
 173 0050 00000000 		.word	.LANCHOR0
 174 0054 00000000 		.word	.LANCHOR1
 175 0058 00000000 		.word	.LC2
 176              		.cfi_endproc
 177              	.LFE127:
 179              		.section	.text.MX_ADC1_Init,"ax",%progbits
 180              		.align	1
 181              		.global	MX_ADC1_Init
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 6


 187              	MX_ADC1_Init:
 188              	.LFB128:
  96:Src/adc.c     **** 
  97:Src/adc.c     **** 
  98:Src/adc.c     **** /* USER CODE END 0 */
  99:Src/adc.c     **** 
 100:Src/adc.c     **** ADC_HandleTypeDef hadc1;
 101:Src/adc.c     **** ADC_HandleTypeDef hadc2;
 102:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
 103:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
 104:Src/adc.c     **** 
 105:Src/adc.c     **** /* ADC1 init function */
 106:Src/adc.c     **** void MX_ADC1_Init(void)
 107:Src/adc.c     **** {
 189              		.loc 1 107 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 40
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 00B5     		push	{lr}
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 8BB0     		sub	sp, sp, #44
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 48
 108:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
 200              		.loc 1 108 3 view .LVU32
 109:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 201              		.loc 1 109 3 view .LVU33
 110:Src/adc.c     **** 
 111:Src/adc.c     ****     /**Common config
 112:Src/adc.c     ****     */
 113:Src/adc.c     ****   hadc1.Instance = ADC1;
 202              		.loc 1 113 3 view .LVU34
 203              		.loc 1 113 18 is_stmt 0 view .LVU35
 204 0004 2148     		ldr	r0, .L21
 205 0006 4FF0A043 		mov	r3, #1342177280
 206 000a 0360     		str	r3, [r0]
 114:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 207              		.loc 1 114 3 is_stmt 1 view .LVU36
 208              		.loc 1 114 29 is_stmt 0 view .LVU37
 209 000c 4FF40033 		mov	r3, #131072
 210 0010 4360     		str	r3, [r0, #4]
 115:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 211              		.loc 1 115 3 is_stmt 1 view .LVU38
 212              		.loc 1 115 25 is_stmt 0 view .LVU39
 213 0012 0023     		movs	r3, #0
 214 0014 8360     		str	r3, [r0, #8]
 116:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 215              		.loc 1 116 3 is_stmt 1 view .LVU40
 216              		.loc 1 116 27 is_stmt 0 view .LVU41
 217 0016 0361     		str	r3, [r0, #16]
 117:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
 218              		.loc 1 117 3 is_stmt 1 view .LVU42
 219              		.loc 1 117 33 is_stmt 0 view .LVU43
 220 0018 0122     		movs	r2, #1
 221 001a C261     		str	r2, [r0, #28]
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 7


 118:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 222              		.loc 1 118 3 is_stmt 1 view .LVU44
 223              		.loc 1 118 36 is_stmt 0 view .LVU45
 224 001c 4362     		str	r3, [r0, #36]
 119:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 225              		.loc 1 119 3 is_stmt 1 view .LVU46
 226              		.loc 1 119 35 is_stmt 0 view .LVU47
 227 001e 4FF48061 		mov	r1, #1024
 228 0022 0163     		str	r1, [r0, #48]
 120:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 229              		.loc 1 120 3 is_stmt 1 view .LVU48
 230              		.loc 1 120 31 is_stmt 0 view .LVU49
 231 0024 4FF40071 		mov	r1, #512
 232 0028 C162     		str	r1, [r0, #44]
 121:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 233              		.loc 1 121 3 is_stmt 1 view .LVU50
 234              		.loc 1 121 24 is_stmt 0 view .LVU51
 235 002a C360     		str	r3, [r0, #12]
 122:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
 236              		.loc 1 122 3 is_stmt 1 view .LVU52
 237              		.loc 1 122 30 is_stmt 0 view .LVU53
 238 002c 0262     		str	r2, [r0, #32]
 123:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 239              		.loc 1 123 3 is_stmt 1 view .LVU54
 240              		.loc 1 123 36 is_stmt 0 view .LVU55
 241 002e 4263     		str	r2, [r0, #52]
 124:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 242              		.loc 1 124 3 is_stmt 1 view .LVU56
 243              		.loc 1 124 27 is_stmt 0 view .LVU57
 244 0030 0822     		movs	r2, #8
 245 0032 4261     		str	r2, [r0, #20]
 125:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 246              		.loc 1 125 3 is_stmt 1 view .LVU58
 247              		.loc 1 125 31 is_stmt 0 view .LVU59
 248 0034 8361     		str	r3, [r0, #24]
 126:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 249              		.loc 1 126 3 is_stmt 1 view .LVU60
 250              		.loc 1 126 22 is_stmt 0 view .LVU61
 251 0036 8363     		str	r3, [r0, #56]
 127:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 252              		.loc 1 127 3 is_stmt 1 view .LVU62
 253              		.loc 1 127 7 is_stmt 0 view .LVU63
 254 0038 FFF7FEFF 		bl	HAL_ADC_Init
 255              	.LVL18:
 256              		.loc 1 127 6 view .LVU64
 257 003c B8B9     		cbnz	r0, .L18
 258              	.L14:
 128:Src/adc.c     ****   {
 129:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 130:Src/adc.c     ****   }
 131:Src/adc.c     **** 
 132:Src/adc.c     ****     /**Configure the ADC multi-mode
 133:Src/adc.c     ****     */
 134:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 259              		.loc 1 134 3 is_stmt 1 view .LVU65
 260              		.loc 1 134 18 is_stmt 0 view .LVU66
 261 003e 0023     		movs	r3, #0
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 8


 262 0040 0793     		str	r3, [sp, #28]
 135:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 263              		.loc 1 135 3 is_stmt 1 view .LVU67
 264              		.loc 1 135 7 is_stmt 0 view .LVU68
 265 0042 07A9     		add	r1, sp, #28
 266 0044 1148     		ldr	r0, .L21
 267 0046 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 268              	.LVL19:
 269              		.loc 1 135 6 view .LVU69
 270 004a A8B9     		cbnz	r0, .L19
 271              	.L15:
 136:Src/adc.c     ****   {
 137:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 138:Src/adc.c     ****   }
 139:Src/adc.c     **** 
 140:Src/adc.c     ****     /**Configure Regular Channel
 141:Src/adc.c     ****     */
 142:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 272              		.loc 1 142 3 is_stmt 1 view .LVU70
 273              		.loc 1 142 19 is_stmt 0 view .LVU71
 274 004c 0123     		movs	r3, #1
 275 004e 0193     		str	r3, [sp, #4]
 143:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 276              		.loc 1 143 3 is_stmt 1 view .LVU72
 277              		.loc 1 143 16 is_stmt 0 view .LVU73
 278 0050 0293     		str	r3, [sp, #8]
 144:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 279              		.loc 1 144 3 is_stmt 1 view .LVU74
 280              		.loc 1 144 22 is_stmt 0 view .LVU75
 281 0052 0023     		movs	r3, #0
 282 0054 0493     		str	r3, [sp, #16]
 145:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 283              		.loc 1 145 3 is_stmt 1 view .LVU76
 284              		.loc 1 145 24 is_stmt 0 view .LVU77
 285 0056 0722     		movs	r2, #7
 286 0058 0392     		str	r2, [sp, #12]
 146:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 287              		.loc 1 146 3 is_stmt 1 view .LVU78
 288              		.loc 1 146 24 is_stmt 0 view .LVU79
 289 005a 0593     		str	r3, [sp, #20]
 147:Src/adc.c     ****   sConfig.Offset = 0;
 290              		.loc 1 147 3 is_stmt 1 view .LVU80
 291              		.loc 1 147 18 is_stmt 0 view .LVU81
 292 005c 0693     		str	r3, [sp, #24]
 148:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 293              		.loc 1 148 3 is_stmt 1 view .LVU82
 294              		.loc 1 148 7 is_stmt 0 view .LVU83
 295 005e 01A9     		add	r1, sp, #4
 296 0060 0A48     		ldr	r0, .L21
 297 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 298              	.LVL20:
 299              		.loc 1 148 6 view .LVU84
 300 0066 60B9     		cbnz	r0, .L20
 301              	.L13:
 149:Src/adc.c     ****   {
 150:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 151:Src/adc.c     ****   }
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 9


 152:Src/adc.c     **** 
 153:Src/adc.c     **** }
 302              		.loc 1 153 1 view .LVU85
 303 0068 0BB0     		add	sp, sp, #44
 304              	.LCFI4:
 305              		.cfi_remember_state
 306              		.cfi_def_cfa_offset 4
 307              		@ sp needed
 308 006a 5DF804FB 		ldr	pc, [sp], #4
 309              	.L18:
 310              	.LCFI5:
 311              		.cfi_restore_state
 129:Src/adc.c     ****   }
 312              		.loc 1 129 5 is_stmt 1 view .LVU86
 313 006e 8121     		movs	r1, #129
 314 0070 0748     		ldr	r0, .L21+4
 315 0072 FFF7FEFF 		bl	_Error_Handler
 316              	.LVL21:
 317 0076 E2E7     		b	.L14
 318              	.L19:
 137:Src/adc.c     ****   }
 319              		.loc 1 137 5 view .LVU87
 320 0078 8921     		movs	r1, #137
 321 007a 0548     		ldr	r0, .L21+4
 322 007c FFF7FEFF 		bl	_Error_Handler
 323              	.LVL22:
 324 0080 E4E7     		b	.L15
 325              	.L20:
 150:Src/adc.c     ****   }
 326              		.loc 1 150 5 view .LVU88
 327 0082 9621     		movs	r1, #150
 328 0084 0248     		ldr	r0, .L21+4
 329 0086 FFF7FEFF 		bl	_Error_Handler
 330              	.LVL23:
 331              		.loc 1 153 1 is_stmt 0 view .LVU89
 332 008a EDE7     		b	.L13
 333              	.L22:
 334              		.align	2
 335              	.L21:
 336 008c 00000000 		.word	hadc1
 337 0090 00000000 		.word	.LC3
 338              		.cfi_endproc
 339              	.LFE128:
 341              		.section	.text.MX_ADC2_Init,"ax",%progbits
 342              		.align	1
 343              		.global	MX_ADC2_Init
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	MX_ADC2_Init:
 350              	.LFB129:
 154:Src/adc.c     **** /* ADC2 init function */
 155:Src/adc.c     **** void MX_ADC2_Init(void)
 156:Src/adc.c     **** {
 351              		.loc 1 156 1 is_stmt 1 view -0
 352              		.cfi_startproc
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 10


 353              		@ args = 0, pretend = 0, frame = 24
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 00B5     		push	{lr}
 356              	.LCFI6:
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 14, -4
 359 0002 87B0     		sub	sp, sp, #28
 360              	.LCFI7:
 361              		.cfi_def_cfa_offset 32
 157:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 362              		.loc 1 157 3 view .LVU91
 158:Src/adc.c     **** 
 159:Src/adc.c     ****     /**Common config
 160:Src/adc.c     ****     */
 161:Src/adc.c     ****   hadc2.Instance = ADC2;
 363              		.loc 1 161 3 view .LVU92
 364              		.loc 1 161 18 is_stmt 0 view .LVU93
 365 0004 2948     		ldr	r0, .L33
 366 0006 2A4B     		ldr	r3, .L33+4
 367 0008 0360     		str	r3, [r0]
 162:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 368              		.loc 1 162 3 is_stmt 1 view .LVU94
 369              		.loc 1 162 29 is_stmt 0 view .LVU95
 370 000a 4FF40033 		mov	r3, #131072
 371 000e 4360     		str	r3, [r0, #4]
 163:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 372              		.loc 1 163 3 is_stmt 1 view .LVU96
 373              		.loc 1 163 25 is_stmt 0 view .LVU97
 374 0010 0023     		movs	r3, #0
 375 0012 8360     		str	r3, [r0, #8]
 164:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 376              		.loc 1 164 3 is_stmt 1 view .LVU98
 377              		.loc 1 164 27 is_stmt 0 view .LVU99
 378 0014 0122     		movs	r2, #1
 379 0016 0261     		str	r2, [r0, #16]
 165:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 380              		.loc 1 165 3 is_stmt 1 view .LVU100
 381              		.loc 1 165 33 is_stmt 0 view .LVU101
 382 0018 C261     		str	r2, [r0, #28]
 166:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 383              		.loc 1 166 3 is_stmt 1 view .LVU102
 384              		.loc 1 166 36 is_stmt 0 view .LVU103
 385 001a 4362     		str	r3, [r0, #36]
 167:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 386              		.loc 1 167 3 is_stmt 1 view .LVU104
 387              		.loc 1 167 35 is_stmt 0 view .LVU105
 388 001c 4FF48061 		mov	r1, #1024
 389 0020 0163     		str	r1, [r0, #48]
 168:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 390              		.loc 1 168 3 is_stmt 1 view .LVU106
 391              		.loc 1 168 31 is_stmt 0 view .LVU107
 392 0022 4FF40071 		mov	r1, #512
 393 0026 C162     		str	r1, [r0, #44]
 169:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 394              		.loc 1 169 3 is_stmt 1 view .LVU108
 395              		.loc 1 169 24 is_stmt 0 view .LVU109
 396 0028 C360     		str	r3, [r0, #12]
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 11


 170:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 3;
 397              		.loc 1 170 3 is_stmt 1 view .LVU110
 398              		.loc 1 170 30 is_stmt 0 view .LVU111
 399 002a 0321     		movs	r1, #3
 400 002c 0162     		str	r1, [r0, #32]
 171:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 401              		.loc 1 171 3 is_stmt 1 view .LVU112
 402              		.loc 1 171 36 is_stmt 0 view .LVU113
 403 002e 4263     		str	r2, [r0, #52]
 172:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 404              		.loc 1 172 3 is_stmt 1 view .LVU114
 405              		.loc 1 172 27 is_stmt 0 view .LVU115
 406 0030 0822     		movs	r2, #8
 407 0032 4261     		str	r2, [r0, #20]
 173:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 408              		.loc 1 173 3 is_stmt 1 view .LVU116
 409              		.loc 1 173 31 is_stmt 0 view .LVU117
 410 0034 8361     		str	r3, [r0, #24]
 174:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 411              		.loc 1 174 3 is_stmt 1 view .LVU118
 412              		.loc 1 174 22 is_stmt 0 view .LVU119
 413 0036 8363     		str	r3, [r0, #56]
 175:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 414              		.loc 1 175 3 is_stmt 1 view .LVU120
 415              		.loc 1 175 7 is_stmt 0 view .LVU121
 416 0038 FFF7FEFF 		bl	HAL_ADC_Init
 417              	.LVL24:
 418              		.loc 1 175 6 view .LVU122
 419 003c 10BB     		cbnz	r0, .L29
 420              	.L24:
 176:Src/adc.c     ****   {
 177:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 178:Src/adc.c     ****   }
 179:Src/adc.c     **** 
 180:Src/adc.c     ****     /**Configure Regular Channel
 181:Src/adc.c     ****     */
 182:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 421              		.loc 1 182 3 is_stmt 1 view .LVU123
 422              		.loc 1 182 19 is_stmt 0 view .LVU124
 423 003e 0123     		movs	r3, #1
 424 0040 0093     		str	r3, [sp]
 183:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 425              		.loc 1 183 3 is_stmt 1 view .LVU125
 426              		.loc 1 183 16 is_stmt 0 view .LVU126
 427 0042 0193     		str	r3, [sp, #4]
 184:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 428              		.loc 1 184 3 is_stmt 1 view .LVU127
 429              		.loc 1 184 22 is_stmt 0 view .LVU128
 430 0044 0023     		movs	r3, #0
 431 0046 0393     		str	r3, [sp, #12]
 185:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 432              		.loc 1 185 3 is_stmt 1 view .LVU129
 433              		.loc 1 185 24 is_stmt 0 view .LVU130
 434 0048 0722     		movs	r2, #7
 435 004a 0292     		str	r2, [sp, #8]
 186:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 436              		.loc 1 186 3 is_stmt 1 view .LVU131
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 12


 437              		.loc 1 186 24 is_stmt 0 view .LVU132
 438 004c 0493     		str	r3, [sp, #16]
 187:Src/adc.c     ****   sConfig.Offset = 0;
 439              		.loc 1 187 3 is_stmt 1 view .LVU133
 440              		.loc 1 187 18 is_stmt 0 view .LVU134
 441 004e 0593     		str	r3, [sp, #20]
 188:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 442              		.loc 1 188 3 is_stmt 1 view .LVU135
 443              		.loc 1 188 7 is_stmt 0 view .LVU136
 444 0050 6946     		mov	r1, sp
 445 0052 1648     		ldr	r0, .L33
 446 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 447              	.LVL25:
 448              		.loc 1 188 6 view .LVU137
 449 0058 C8B9     		cbnz	r0, .L30
 450              	.L25:
 189:Src/adc.c     ****   {
 190:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 191:Src/adc.c     ****   }
 192:Src/adc.c     **** 
 193:Src/adc.c     ****     /**Configure Regular Channel
 194:Src/adc.c     ****     */
 195:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_6;
 451              		.loc 1 195 3 is_stmt 1 view .LVU138
 452              		.loc 1 195 19 is_stmt 0 view .LVU139
 453 005a 0623     		movs	r3, #6
 454 005c 0093     		str	r3, [sp]
 196:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 455              		.loc 1 196 3 is_stmt 1 view .LVU140
 456              		.loc 1 196 16 is_stmt 0 view .LVU141
 457 005e 0223     		movs	r3, #2
 458 0060 0193     		str	r3, [sp, #4]
 197:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 459              		.loc 1 197 3 is_stmt 1 view .LVU142
 460              		.loc 1 197 7 is_stmt 0 view .LVU143
 461 0062 6946     		mov	r1, sp
 462 0064 1148     		ldr	r0, .L33
 463 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 464              	.LVL26:
 465              		.loc 1 197 6 view .LVU144
 466 006a A8B9     		cbnz	r0, .L31
 467              	.L26:
 198:Src/adc.c     ****   {
 199:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 200:Src/adc.c     ****   }
 201:Src/adc.c     **** 
 202:Src/adc.c     ****     /**Configure Regular Channel
 203:Src/adc.c     ****     */
 204:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_7;
 468              		.loc 1 204 3 is_stmt 1 view .LVU145
 469              		.loc 1 204 19 is_stmt 0 view .LVU146
 470 006c 0723     		movs	r3, #7
 471 006e 0093     		str	r3, [sp]
 205:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 472              		.loc 1 205 3 is_stmt 1 view .LVU147
 473              		.loc 1 205 16 is_stmt 0 view .LVU148
 474 0070 0323     		movs	r3, #3
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 13


 475 0072 0193     		str	r3, [sp, #4]
 206:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 476              		.loc 1 206 3 is_stmt 1 view .LVU149
 477              		.loc 1 206 7 is_stmt 0 view .LVU150
 478 0074 6946     		mov	r1, sp
 479 0076 0D48     		ldr	r0, .L33
 480 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 481              	.LVL27:
 482              		.loc 1 206 6 view .LVU151
 483 007c 88B9     		cbnz	r0, .L32
 484              	.L23:
 207:Src/adc.c     ****   {
 208:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/adc.c     ****   }
 210:Src/adc.c     **** 
 211:Src/adc.c     **** }
 485              		.loc 1 211 1 view .LVU152
 486 007e 07B0     		add	sp, sp, #28
 487              	.LCFI8:
 488              		.cfi_remember_state
 489              		.cfi_def_cfa_offset 4
 490              		@ sp needed
 491 0080 5DF804FB 		ldr	pc, [sp], #4
 492              	.L29:
 493              	.LCFI9:
 494              		.cfi_restore_state
 177:Src/adc.c     ****   }
 495              		.loc 1 177 5 is_stmt 1 view .LVU153
 496 0084 B121     		movs	r1, #177
 497 0086 0B48     		ldr	r0, .L33+8
 498 0088 FFF7FEFF 		bl	_Error_Handler
 499              	.LVL28:
 500 008c D7E7     		b	.L24
 501              	.L30:
 190:Src/adc.c     ****   }
 502              		.loc 1 190 5 view .LVU154
 503 008e BE21     		movs	r1, #190
 504 0090 0848     		ldr	r0, .L33+8
 505 0092 FFF7FEFF 		bl	_Error_Handler
 506              	.LVL29:
 507 0096 E0E7     		b	.L25
 508              	.L31:
 199:Src/adc.c     ****   }
 509              		.loc 1 199 5 view .LVU155
 510 0098 C721     		movs	r1, #199
 511 009a 0648     		ldr	r0, .L33+8
 512 009c FFF7FEFF 		bl	_Error_Handler
 513              	.LVL30:
 514 00a0 E4E7     		b	.L26
 515              	.L32:
 208:Src/adc.c     ****   }
 516              		.loc 1 208 5 view .LVU156
 517 00a2 D021     		movs	r1, #208
 518 00a4 0348     		ldr	r0, .L33+8
 519 00a6 FFF7FEFF 		bl	_Error_Handler
 520              	.LVL31:
 521              		.loc 1 211 1 is_stmt 0 view .LVU157
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 14


 522 00aa E8E7     		b	.L23
 523              	.L34:
 524              		.align	2
 525              	.L33:
 526 00ac 00000000 		.word	hadc2
 527 00b0 00010050 		.word	1342177536
 528 00b4 00000000 		.word	.LC3
 529              		.cfi_endproc
 530              	.LFE129:
 532              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 533              		.align	1
 534              		.global	HAL_ADC_MspInit
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv4-sp-d16
 540              	HAL_ADC_MspInit:
 541              	.LVL32:
 542              	.LFB130:
 212:Src/adc.c     **** 
 213:Src/adc.c     **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
 214:Src/adc.c     **** 
 215:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 216:Src/adc.c     **** {
 543              		.loc 1 216 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 32
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		.loc 1 216 1 is_stmt 0 view .LVU159
 548 0000 70B5     		push	{r4, r5, r6, lr}
 549              	.LCFI10:
 550              		.cfi_def_cfa_offset 16
 551              		.cfi_offset 4, -16
 552              		.cfi_offset 5, -12
 553              		.cfi_offset 6, -8
 554              		.cfi_offset 14, -4
 555 0002 88B0     		sub	sp, sp, #32
 556              	.LCFI11:
 557              		.cfi_def_cfa_offset 48
 558 0004 0446     		mov	r4, r0
 217:Src/adc.c     **** 
 218:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 559              		.loc 1 218 3 is_stmt 1 view .LVU160
 219:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 560              		.loc 1 219 3 view .LVU161
 561              		.loc 1 219 15 is_stmt 0 view .LVU162
 562 0006 0368     		ldr	r3, [r0]
 563              		.loc 1 219 5 view .LVU163
 564 0008 B3F1A04F 		cmp	r3, #1342177280
 565 000c 04D0     		beq	.L43
 220:Src/adc.c     ****   {
 221:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 222:Src/adc.c     **** 
 223:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 224:Src/adc.c     ****     /* ADC1 clock enable */
 225:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 226:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 15


 227:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 228:Src/adc.c     ****     }
 229:Src/adc.c     **** 
 230:Src/adc.c     ****     /**ADC1 GPIO Configuration
 231:Src/adc.c     ****     PA0     ------> ADC1_IN1
 232:Src/adc.c     ****     */
 233:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 234:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 235:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 236:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237:Src/adc.c     **** 
 238:Src/adc.c     ****     /* ADC1 DMA Init */
 239:Src/adc.c     ****     /* ADC1 Init */
 240:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 241:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 242:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 243:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 244:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 245:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 246:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 247:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 248:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 249:Src/adc.c     ****     {
 250:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 251:Src/adc.c     ****     }
 252:Src/adc.c     **** 
 253:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 254:Src/adc.c     **** 
 255:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 256:Src/adc.c     **** 
 257:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 258:Src/adc.c     ****   }
 259:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 566              		.loc 1 259 8 is_stmt 1 view .LVU164
 567              		.loc 1 259 10 is_stmt 0 view .LVU165
 568 000e 404A     		ldr	r2, .L49
 569 0010 9342     		cmp	r3, r2
 570 0012 3BD0     		beq	.L44
 571              	.LVL33:
 572              	.L35:
 260:Src/adc.c     ****   {
 261:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 262:Src/adc.c     **** 
 263:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 264:Src/adc.c     ****     /* ADC2 clock enable */
 265:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 266:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 267:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 268:Src/adc.c     ****     }
 269:Src/adc.c     **** 
 270:Src/adc.c     ****     /**ADC2 GPIO Configuration
 271:Src/adc.c     ****     PC0     ------> ADC2_IN6
 272:Src/adc.c     ****     PC1     ------> ADC2_IN7
 273:Src/adc.c     ****     PA4     ------> ADC2_IN1
 274:Src/adc.c     ****     */
 275:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 276:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 16


 277:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 278:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 279:Src/adc.c     **** 
 280:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_4;
 281:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 282:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 283:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 284:Src/adc.c     **** 
 285:Src/adc.c     ****     /* ADC2 DMA Init */
 286:Src/adc.c     ****     /* ADC2 Init */
 287:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Channel1;
 288:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 289:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 290:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 291:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 292:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 293:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 294:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
 295:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 296:Src/adc.c     ****     {
 297:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 298:Src/adc.c     ****     }
 299:Src/adc.c     **** 
 300:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
 301:Src/adc.c     **** 
 302:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 303:Src/adc.c     **** 
 304:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 305:Src/adc.c     ****   }
 306:Src/adc.c     **** }
 573              		.loc 1 306 1 view .LVU166
 574 0014 08B0     		add	sp, sp, #32
 575              	.LCFI12:
 576              		.cfi_remember_state
 577              		.cfi_def_cfa_offset 16
 578              		@ sp needed
 579 0016 70BD     		pop	{r4, r5, r6, pc}
 580              	.LVL34:
 581              	.L43:
 582              	.LCFI13:
 583              		.cfi_restore_state
 225:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 584              		.loc 1 225 5 is_stmt 1 view .LVU167
 225:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 585              		.loc 1 225 30 is_stmt 0 view .LVU168
 586 0018 3E4A     		ldr	r2, .L49+4
 587 001a 1368     		ldr	r3, [r2]
 588 001c 0133     		adds	r3, r3, #1
 589 001e 1360     		str	r3, [r2]
 226:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 590              		.loc 1 226 5 is_stmt 1 view .LVU169
 226:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 591              		.loc 1 226 7 is_stmt 0 view .LVU170
 592 0020 012B     		cmp	r3, #1
 593 0022 23D0     		beq	.L45
 594              	.L37:
 233:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 17


 595              		.loc 1 233 5 is_stmt 1 view .LVU171
 233:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 596              		.loc 1 233 25 is_stmt 0 view .LVU172
 597 0024 0123     		movs	r3, #1
 598 0026 0393     		str	r3, [sp, #12]
 234:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 599              		.loc 1 234 5 is_stmt 1 view .LVU173
 234:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 600              		.loc 1 234 26 is_stmt 0 view .LVU174
 601 0028 0323     		movs	r3, #3
 602 002a 0493     		str	r3, [sp, #16]
 235:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 603              		.loc 1 235 5 is_stmt 1 view .LVU175
 235:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 604              		.loc 1 235 26 is_stmt 0 view .LVU176
 605 002c 0025     		movs	r5, #0
 606 002e 0595     		str	r5, [sp, #20]
 236:Src/adc.c     **** 
 607              		.loc 1 236 5 is_stmt 1 view .LVU177
 608 0030 03A9     		add	r1, sp, #12
 609 0032 4FF09040 		mov	r0, #1207959552
 610              	.LVL35:
 236:Src/adc.c     **** 
 611              		.loc 1 236 5 is_stmt 0 view .LVU178
 612 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 613              	.LVL36:
 240:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 614              		.loc 1 240 5 is_stmt 1 view .LVU179
 240:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 615              		.loc 1 240 24 is_stmt 0 view .LVU180
 616 003a 3748     		ldr	r0, .L49+8
 617 003c 374B     		ldr	r3, .L49+12
 618 003e 0360     		str	r3, [r0]
 241:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 619              		.loc 1 241 5 is_stmt 1 view .LVU181
 241:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 620              		.loc 1 241 30 is_stmt 0 view .LVU182
 621 0040 4560     		str	r5, [r0, #4]
 242:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 622              		.loc 1 242 5 is_stmt 1 view .LVU183
 242:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 623              		.loc 1 242 30 is_stmt 0 view .LVU184
 624 0042 8560     		str	r5, [r0, #8]
 243:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 625              		.loc 1 243 5 is_stmt 1 view .LVU185
 243:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 626              		.loc 1 243 27 is_stmt 0 view .LVU186
 627 0044 8023     		movs	r3, #128
 628 0046 C360     		str	r3, [r0, #12]
 244:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 629              		.loc 1 244 5 is_stmt 1 view .LVU187
 244:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 630              		.loc 1 244 40 is_stmt 0 view .LVU188
 631 0048 4FF48073 		mov	r3, #256
 632 004c 0361     		str	r3, [r0, #16]
 245:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 633              		.loc 1 245 5 is_stmt 1 view .LVU189
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 18


 245:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 634              		.loc 1 245 37 is_stmt 0 view .LVU190
 635 004e 4FF48063 		mov	r3, #1024
 636 0052 4361     		str	r3, [r0, #20]
 246:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 637              		.loc 1 246 5 is_stmt 1 view .LVU191
 246:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 638              		.loc 1 246 25 is_stmt 0 view .LVU192
 639 0054 2023     		movs	r3, #32
 640 0056 8361     		str	r3, [r0, #24]
 247:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 641              		.loc 1 247 5 is_stmt 1 view .LVU193
 247:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 642              		.loc 1 247 29 is_stmt 0 view .LVU194
 643 0058 4FF40053 		mov	r3, #8192
 644 005c C361     		str	r3, [r0, #28]
 248:Src/adc.c     ****     {
 645              		.loc 1 248 5 is_stmt 1 view .LVU195
 248:Src/adc.c     ****     {
 646              		.loc 1 248 9 is_stmt 0 view .LVU196
 647 005e FFF7FEFF 		bl	HAL_DMA_Init
 648              	.LVL37:
 248:Src/adc.c     ****     {
 649              		.loc 1 248 8 view .LVU197
 650 0062 70B9     		cbnz	r0, .L46
 651              	.L38:
 253:Src/adc.c     **** 
 652              		.loc 1 253 5 is_stmt 1 view .LVU198
 253:Src/adc.c     **** 
 653              		.loc 1 253 5 view .LVU199
 654 0064 2C4B     		ldr	r3, .L49+8
 655 0066 E363     		str	r3, [r4, #60]
 253:Src/adc.c     **** 
 656              		.loc 1 253 5 view .LVU200
 657 0068 5C62     		str	r4, [r3, #36]
 658 006a D3E7     		b	.L35
 659              	.LVL38:
 660              	.L45:
 227:Src/adc.c     ****     }
 661              		.loc 1 227 7 view .LVU201
 662              	.LBB2:
 227:Src/adc.c     ****     }
 663              		.loc 1 227 7 view .LVU202
 227:Src/adc.c     ****     }
 664              		.loc 1 227 7 view .LVU203
 665 006c 2C4B     		ldr	r3, .L49+16
 666 006e 5A69     		ldr	r2, [r3, #20]
 667 0070 42F08052 		orr	r2, r2, #268435456
 668 0074 5A61     		str	r2, [r3, #20]
 227:Src/adc.c     ****     }
 669              		.loc 1 227 7 view .LVU204
 670 0076 5B69     		ldr	r3, [r3, #20]
 671 0078 03F08053 		and	r3, r3, #268435456
 672 007c 0193     		str	r3, [sp, #4]
 227:Src/adc.c     ****     }
 673              		.loc 1 227 7 view .LVU205
 674 007e 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 19


 675 0080 D0E7     		b	.L37
 676              	.LVL39:
 677              	.L46:
 227:Src/adc.c     ****     }
 678              		.loc 1 227 7 is_stmt 0 view .LVU206
 679              	.LBE2:
 250:Src/adc.c     ****     }
 680              		.loc 1 250 7 is_stmt 1 view .LVU207
 681 0082 FA21     		movs	r1, #250
 682 0084 2748     		ldr	r0, .L49+20
 683 0086 FFF7FEFF 		bl	_Error_Handler
 684              	.LVL40:
 685 008a EBE7     		b	.L38
 686              	.LVL41:
 687              	.L44:
 265:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 688              		.loc 1 265 5 view .LVU208
 265:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 689              		.loc 1 265 30 is_stmt 0 view .LVU209
 690 008c 214A     		ldr	r2, .L49+4
 691 008e 1368     		ldr	r3, [r2]
 692 0090 0133     		adds	r3, r3, #1
 693 0092 1360     		str	r3, [r2]
 266:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 694              		.loc 1 266 5 is_stmt 1 view .LVU210
 266:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 695              		.loc 1 266 7 is_stmt 0 view .LVU211
 696 0094 012B     		cmp	r3, #1
 697 0096 2AD0     		beq	.L47
 698              	.L40:
 275:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 699              		.loc 1 275 5 is_stmt 1 view .LVU212
 275:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 700              		.loc 1 275 25 is_stmt 0 view .LVU213
 701 0098 0326     		movs	r6, #3
 702 009a 0396     		str	r6, [sp, #12]
 276:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 703              		.loc 1 276 5 is_stmt 1 view .LVU214
 276:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 704              		.loc 1 276 26 is_stmt 0 view .LVU215
 705 009c 0496     		str	r6, [sp, #16]
 277:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 706              		.loc 1 277 5 is_stmt 1 view .LVU216
 277:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 707              		.loc 1 277 26 is_stmt 0 view .LVU217
 708 009e 0025     		movs	r5, #0
 709 00a0 0595     		str	r5, [sp, #20]
 278:Src/adc.c     **** 
 710              		.loc 1 278 5 is_stmt 1 view .LVU218
 711 00a2 03A9     		add	r1, sp, #12
 712 00a4 2048     		ldr	r0, .L49+24
 713              	.LVL42:
 278:Src/adc.c     **** 
 714              		.loc 1 278 5 is_stmt 0 view .LVU219
 715 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 716              	.LVL43:
 280:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 20


 717              		.loc 1 280 5 is_stmt 1 view .LVU220
 280:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 718              		.loc 1 280 25 is_stmt 0 view .LVU221
 719 00aa 1023     		movs	r3, #16
 720 00ac 0393     		str	r3, [sp, #12]
 281:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 721              		.loc 1 281 5 is_stmt 1 view .LVU222
 281:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 722              		.loc 1 281 26 is_stmt 0 view .LVU223
 723 00ae 0496     		str	r6, [sp, #16]
 282:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 724              		.loc 1 282 5 is_stmt 1 view .LVU224
 282:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 725              		.loc 1 282 26 is_stmt 0 view .LVU225
 726 00b0 0595     		str	r5, [sp, #20]
 283:Src/adc.c     **** 
 727              		.loc 1 283 5 is_stmt 1 view .LVU226
 728 00b2 03A9     		add	r1, sp, #12
 729 00b4 4FF09040 		mov	r0, #1207959552
 730 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 731              	.LVL44:
 287:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 732              		.loc 1 287 5 view .LVU227
 287:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 733              		.loc 1 287 24 is_stmt 0 view .LVU228
 734 00bc 1B48     		ldr	r0, .L49+28
 735 00be 1C4B     		ldr	r3, .L49+32
 736 00c0 0360     		str	r3, [r0]
 288:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 737              		.loc 1 288 5 is_stmt 1 view .LVU229
 288:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 738              		.loc 1 288 30 is_stmt 0 view .LVU230
 739 00c2 4560     		str	r5, [r0, #4]
 289:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 740              		.loc 1 289 5 is_stmt 1 view .LVU231
 289:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 741              		.loc 1 289 30 is_stmt 0 view .LVU232
 742 00c4 8560     		str	r5, [r0, #8]
 290:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 743              		.loc 1 290 5 is_stmt 1 view .LVU233
 290:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 744              		.loc 1 290 27 is_stmt 0 view .LVU234
 745 00c6 8023     		movs	r3, #128
 746 00c8 C360     		str	r3, [r0, #12]
 291:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 747              		.loc 1 291 5 is_stmt 1 view .LVU235
 291:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 748              		.loc 1 291 40 is_stmt 0 view .LVU236
 749 00ca 4FF48073 		mov	r3, #256
 750 00ce 0361     		str	r3, [r0, #16]
 292:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 751              		.loc 1 292 5 is_stmt 1 view .LVU237
 292:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 752              		.loc 1 292 37 is_stmt 0 view .LVU238
 753 00d0 4FF48063 		mov	r3, #1024
 754 00d4 4361     		str	r3, [r0, #20]
 293:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 21


 755              		.loc 1 293 5 is_stmt 1 view .LVU239
 293:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
 756              		.loc 1 293 25 is_stmt 0 view .LVU240
 757 00d6 2023     		movs	r3, #32
 758 00d8 8361     		str	r3, [r0, #24]
 294:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 759              		.loc 1 294 5 is_stmt 1 view .LVU241
 294:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 760              		.loc 1 294 29 is_stmt 0 view .LVU242
 761 00da 4FF40053 		mov	r3, #8192
 762 00de C361     		str	r3, [r0, #28]
 295:Src/adc.c     ****     {
 763              		.loc 1 295 5 is_stmt 1 view .LVU243
 295:Src/adc.c     ****     {
 764              		.loc 1 295 9 is_stmt 0 view .LVU244
 765 00e0 FFF7FEFF 		bl	HAL_DMA_Init
 766              	.LVL45:
 295:Src/adc.c     ****     {
 767              		.loc 1 295 8 view .LVU245
 768 00e4 70B9     		cbnz	r0, .L48
 769              	.L41:
 300:Src/adc.c     **** 
 770              		.loc 1 300 5 is_stmt 1 view .LVU246
 300:Src/adc.c     **** 
 771              		.loc 1 300 5 view .LVU247
 772 00e6 114B     		ldr	r3, .L49+28
 773 00e8 E363     		str	r3, [r4, #60]
 300:Src/adc.c     **** 
 774              		.loc 1 300 5 view .LVU248
 775 00ea 5C62     		str	r4, [r3, #36]
 776              		.loc 1 306 1 is_stmt 0 view .LVU249
 777 00ec 92E7     		b	.L35
 778              	.LVL46:
 779              	.L47:
 267:Src/adc.c     ****     }
 780              		.loc 1 267 7 is_stmt 1 view .LVU250
 781              	.LBB3:
 267:Src/adc.c     ****     }
 782              		.loc 1 267 7 view .LVU251
 267:Src/adc.c     ****     }
 783              		.loc 1 267 7 view .LVU252
 784 00ee 0C4B     		ldr	r3, .L49+16
 785 00f0 5A69     		ldr	r2, [r3, #20]
 786 00f2 42F08052 		orr	r2, r2, #268435456
 787 00f6 5A61     		str	r2, [r3, #20]
 267:Src/adc.c     ****     }
 788              		.loc 1 267 7 view .LVU253
 789 00f8 5B69     		ldr	r3, [r3, #20]
 790 00fa 03F08053 		and	r3, r3, #268435456
 791 00fe 0293     		str	r3, [sp, #8]
 267:Src/adc.c     ****     }
 792              		.loc 1 267 7 view .LVU254
 793 0100 029B     		ldr	r3, [sp, #8]
 794 0102 C9E7     		b	.L40
 795              	.LVL47:
 796              	.L48:
 267:Src/adc.c     ****     }
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 22


 797              		.loc 1 267 7 is_stmt 0 view .LVU255
 798              	.LBE3:
 297:Src/adc.c     ****     }
 799              		.loc 1 297 7 is_stmt 1 view .LVU256
 800 0104 40F22911 		movw	r1, #297
 801 0108 0648     		ldr	r0, .L49+20
 802 010a FFF7FEFF 		bl	_Error_Handler
 803              	.LVL48:
 804 010e EAE7     		b	.L41
 805              	.L50:
 806              		.align	2
 807              	.L49:
 808 0110 00010050 		.word	1342177536
 809 0114 00000000 		.word	.LANCHOR2
 810 0118 00000000 		.word	hdma_adc1
 811 011c 08000240 		.word	1073872904
 812 0120 00100240 		.word	1073876992
 813 0124 00000000 		.word	.LC3
 814 0128 00080048 		.word	1207961600
 815 012c 00000000 		.word	hdma_adc2
 816 0130 08040240 		.word	1073873928
 817              		.cfi_endproc
 818              	.LFE130:
 820              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 821              		.align	1
 822              		.global	HAL_ADC_MspDeInit
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu fpv4-sp-d16
 828              	HAL_ADC_MspDeInit:
 829              	.LVL49:
 830              	.LFB131:
 307:Src/adc.c     **** 
 308:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 309:Src/adc.c     **** {
 831              		.loc 1 309 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		.loc 1 309 1 is_stmt 0 view .LVU258
 836 0000 10B5     		push	{r4, lr}
 837              	.LCFI14:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 841 0002 0446     		mov	r4, r0
 310:Src/adc.c     **** 
 311:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 842              		.loc 1 311 3 is_stmt 1 view .LVU259
 843              		.loc 1 311 15 is_stmt 0 view .LVU260
 844 0004 0368     		ldr	r3, [r0]
 845              		.loc 1 311 5 view .LVU261
 846 0006 B3F1A04F 		cmp	r3, #1342177280
 847 000a 03D0     		beq	.L57
 312:Src/adc.c     ****   {
 313:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 23


 314:Src/adc.c     **** 
 315:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 316:Src/adc.c     ****     /* Peripheral clock disable */
 317:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 318:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED--;
 319:Src/adc.c     ****      if(HAL_RCC_ADC12_CLK_ENABLED==0){
 320:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 321:Src/adc.c     **** 
 322:Src/adc.c     ****   }
 323:Src/adc.c     ****     /**ADC1 GPIO Configuration
 324:Src/adc.c     ****     PA0     ------> ADC1_IN1
 325:Src/adc.c     ****     */
 326:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 327:Src/adc.c     **** 
 328:Src/adc.c     ****     /* ADC1 DMA DeInit */
 329:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 330:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 331:Src/adc.c     **** 
 332:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 333:Src/adc.c     ****   }
 334:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 848              		.loc 1 334 8 is_stmt 1 view .LVU262
 849              		.loc 1 334 10 is_stmt 0 view .LVU263
 850 000c 164A     		ldr	r2, .L59
 851 000e 9342     		cmp	r3, r2
 852 0010 13D0     		beq	.L58
 853              	.LVL50:
 854              	.L51:
 335:Src/adc.c     ****   {
 336:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 337:Src/adc.c     **** 
 338:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 339:Src/adc.c     ****     /* Peripheral clock disable */
 340:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 341:Src/adc.c     ****       HAL_RCC_ADC12_CLK_ENABLED--;
 342:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 343:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 344:Src/adc.c     **** 
 345:Src/adc.c     ****   }
 346:Src/adc.c     ****     /**ADC2 GPIO Configuration
 347:Src/adc.c     ****     PC0     ------> ADC2_IN6
 348:Src/adc.c     ****     PC1     ------> ADC2_IN7
 349:Src/adc.c     ****     PA4     ------> ADC2_IN1
 350:Src/adc.c     ****     */
 351:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_1);
 352:Src/adc.c     **** 
 353:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4);
 354:Src/adc.c     **** 
 355:Src/adc.c     ****     /* ADC2 DMA DeInit */
 356:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 357:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 358:Src/adc.c     **** 
 359:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 360:Src/adc.c     ****   }
 361:Src/adc.c     **** }
 855              		.loc 1 361 1 view .LVU264
 856 0012 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 24


 857              	.LVL51:
 858              	.L57:
 318:Src/adc.c     ****      if(HAL_RCC_ADC12_CLK_ENABLED==0){
 859              		.loc 1 318 5 is_stmt 1 view .LVU265
 318:Src/adc.c     ****      if(HAL_RCC_ADC12_CLK_ENABLED==0){
 860              		.loc 1 318 30 is_stmt 0 view .LVU266
 861 0014 154A     		ldr	r2, .L59+4
 862 0016 1368     		ldr	r3, [r2]
 863 0018 013B     		subs	r3, r3, #1
 864 001a 1360     		str	r3, [r2]
 319:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 865              		.loc 1 319 6 is_stmt 1 view .LVU267
 319:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 866              		.loc 1 319 8 is_stmt 0 view .LVU268
 867 001c 23B9     		cbnz	r3, .L53
 320:Src/adc.c     **** 
 868              		.loc 1 320 9 is_stmt 1 view .LVU269
 869 001e 144A     		ldr	r2, .L59+8
 870 0020 5369     		ldr	r3, [r2, #20]
 871 0022 23F08053 		bic	r3, r3, #268435456
 872 0026 5361     		str	r3, [r2, #20]
 873              	.L53:
 326:Src/adc.c     **** 
 874              		.loc 1 326 5 view .LVU270
 875 0028 0121     		movs	r1, #1
 876 002a 4FF09040 		mov	r0, #1207959552
 877              	.LVL52:
 326:Src/adc.c     **** 
 878              		.loc 1 326 5 is_stmt 0 view .LVU271
 879 002e FFF7FEFF 		bl	HAL_GPIO_DeInit
 880              	.LVL53:
 329:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 881              		.loc 1 329 5 is_stmt 1 view .LVU272
 882 0032 E06B     		ldr	r0, [r4, #60]
 883 0034 FFF7FEFF 		bl	HAL_DMA_DeInit
 884              	.LVL54:
 885 0038 EBE7     		b	.L51
 886              	.LVL55:
 887              	.L58:
 341:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 888              		.loc 1 341 7 view .LVU273
 341:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 889              		.loc 1 341 32 is_stmt 0 view .LVU274
 890 003a 0C4A     		ldr	r2, .L59+4
 891 003c 1368     		ldr	r3, [r2]
 892 003e 013B     		subs	r3, r3, #1
 893 0040 1360     		str	r3, [r2]
 342:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 894              		.loc 1 342 5 is_stmt 1 view .LVU275
 342:Src/adc.c     ****         __HAL_RCC_ADC12_CLK_DISABLE();
 895              		.loc 1 342 7 is_stmt 0 view .LVU276
 896 0042 23B9     		cbnz	r3, .L55
 343:Src/adc.c     **** 
 897              		.loc 1 343 9 is_stmt 1 view .LVU277
 898 0044 0A4A     		ldr	r2, .L59+8
 899 0046 5369     		ldr	r3, [r2, #20]
 900 0048 23F08053 		bic	r3, r3, #268435456
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 25


 901 004c 5361     		str	r3, [r2, #20]
 902              	.L55:
 351:Src/adc.c     **** 
 903              		.loc 1 351 5 view .LVU278
 904 004e 0321     		movs	r1, #3
 905 0050 0848     		ldr	r0, .L59+12
 906              	.LVL56:
 351:Src/adc.c     **** 
 907              		.loc 1 351 5 is_stmt 0 view .LVU279
 908 0052 FFF7FEFF 		bl	HAL_GPIO_DeInit
 909              	.LVL57:
 353:Src/adc.c     **** 
 910              		.loc 1 353 5 is_stmt 1 view .LVU280
 911 0056 1021     		movs	r1, #16
 912 0058 4FF09040 		mov	r0, #1207959552
 913 005c FFF7FEFF 		bl	HAL_GPIO_DeInit
 914              	.LVL58:
 356:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 915              		.loc 1 356 5 view .LVU281
 916 0060 E06B     		ldr	r0, [r4, #60]
 917 0062 FFF7FEFF 		bl	HAL_DMA_DeInit
 918              	.LVL59:
 919              		.loc 1 361 1 is_stmt 0 view .LVU282
 920 0066 D4E7     		b	.L51
 921              	.L60:
 922              		.align	2
 923              	.L59:
 924 0068 00010050 		.word	1342177536
 925 006c 00000000 		.word	.LANCHOR2
 926 0070 00100240 		.word	1073876992
 927 0074 00080048 		.word	1207961600
 928              		.cfi_endproc
 929              	.LFE131:
 931              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 932              		.align	1
 933              		.global	HAL_ADC_ConvHalfCpltCallback
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	HAL_ADC_ConvHalfCpltCallback:
 940              	.LVL60:
 941              	.LFB132:
 362:Src/adc.c     **** 
 363:Src/adc.c     **** /* USER CODE BEGIN 1 */
 364:Src/adc.c     **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 365:Src/adc.c     **** {
 942              		.loc 1 365 1 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		.loc 1 365 1 is_stmt 0 view .LVU284
 947 0000 08B5     		push	{r3, lr}
 948              	.LCFI15:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 3, -8
 951              		.cfi_offset 14, -4
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 26


 366:Src/adc.c     ****   if (hadc==&hadc2) process_frame(0);
 952              		.loc 1 366 3 is_stmt 1 view .LVU285
 953              		.loc 1 366 6 is_stmt 0 view .LVU286
 954 0002 054B     		ldr	r3, .L65
 955 0004 8342     		cmp	r3, r0
 956 0006 02D0     		beq	.L64
 957              	.LVL61:
 958              	.L62:
 367:Src/adc.c     ****   RunReceive();
 959              		.loc 1 367 3 is_stmt 1 view .LVU287
 960 0008 FFF7FEFF 		bl	RunReceive
 961              	.LVL62:
 368:Src/adc.c     **** }
 962              		.loc 1 368 1 is_stmt 0 view .LVU288
 963 000c 08BD     		pop	{r3, pc}
 964              	.LVL63:
 965              	.L64:
 966              	.LBB4:
 366:Src/adc.c     ****   if (hadc==&hadc2) process_frame(0);
 967              		.loc 1 366 21 is_stmt 1 discriminator 1 view .LVU289
 968 000e 0020     		movs	r0, #0
 969              	.LVL64:
 366:Src/adc.c     ****   if (hadc==&hadc2) process_frame(0);
 970              		.loc 1 366 21 is_stmt 0 discriminator 1 view .LVU290
 971 0010 FFF7FEFF 		bl	process_frame
 972              	.LVL65:
 973 0014 F8E7     		b	.L62
 974              	.L66:
 975 0016 00BF     		.align	2
 976              	.L65:
 977 0018 00000000 		.word	hadc2
 978              	.LBE4:
 979              		.cfi_endproc
 980              	.LFE132:
 982              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 983              		.align	1
 984              		.global	HAL_ADC_ConvCpltCallback
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	HAL_ADC_ConvCpltCallback:
 991              	.LVL66:
 992              	.LFB133:
 369:Src/adc.c     **** 
 370:Src/adc.c     **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 371:Src/adc.c     **** {
 993              		.loc 1 371 1 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              		.loc 1 371 1 is_stmt 0 view .LVU292
 998 0000 08B5     		push	{r3, lr}
 999              	.LCFI16:
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 3, -8
 1002              		.cfi_offset 14, -4
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 27


 372:Src/adc.c     ****   if (hadc==&hadc2) process_frame(3000);
 1003              		.loc 1 372 3 is_stmt 1 view .LVU293
 1004              		.loc 1 372 6 is_stmt 0 view .LVU294
 1005 0002 054B     		ldr	r3, .L71
 1006 0004 8342     		cmp	r3, r0
 1007 0006 02D0     		beq	.L70
 1008              	.LVL67:
 1009              	.L68:
 373:Src/adc.c     ****   RunReceive();
 1010              		.loc 1 373 3 is_stmt 1 view .LVU295
 1011 0008 FFF7FEFF 		bl	RunReceive
 1012              	.LVL68:
 374:Src/adc.c     **** }
 1013              		.loc 1 374 1 is_stmt 0 view .LVU296
 1014 000c 08BD     		pop	{r3, pc}
 1015              	.LVL69:
 1016              	.L70:
 1017              	.LBB5:
 372:Src/adc.c     ****   if (hadc==&hadc2) process_frame(3000);
 1018              		.loc 1 372 21 is_stmt 1 discriminator 1 view .LVU297
 1019 000e 40F6B830 		movw	r0, #3000
 1020              	.LVL70:
 372:Src/adc.c     ****   if (hadc==&hadc2) process_frame(3000);
 1021              		.loc 1 372 21 is_stmt 0 discriminator 1 view .LVU298
 1022 0012 FFF7FEFF 		bl	process_frame
 1023              	.LVL71:
 1024 0016 F7E7     		b	.L68
 1025              	.L72:
 1026              		.align	2
 1027              	.L71:
 1028 0018 00000000 		.word	hadc2
 1029              	.LBE5:
 1030              		.cfi_endproc
 1031              	.LFE133:
 1033              		.section	.text.start_ADCs,"ax",%progbits
 1034              		.align	1
 1035              		.global	start_ADCs
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu fpv4-sp-d16
 1041              	start_ADCs:
 1042              	.LFB134:
 375:Src/adc.c     **** 
 376:Src/adc.c     **** void start_ADCs (void) {
 1043              		.loc 1 376 24 is_stmt 1 view -0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047 0000 38B5     		push	{r3, r4, r5, lr}
 1048              	.LCFI17:
 1049              		.cfi_def_cfa_offset 16
 1050              		.cfi_offset 3, -16
 1051              		.cfi_offset 4, -12
 1052              		.cfi_offset 5, -8
 1053              		.cfi_offset 14, -4
 377:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc1);
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 28


 1054              		.loc 1 377 3 view .LVU300
 1055 0002 0F4D     		ldr	r5, .L75
 1056 0004 2846     		mov	r0, r5
 1057 0006 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 1058              	.LVL72:
 378:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc2);
 1059              		.loc 1 378 3 view .LVU301
 1060 000a 0E4C     		ldr	r4, .L75+4
 1061 000c 2046     		mov	r0, r4
 1062 000e FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 1063              	.LVL73:
 379:Src/adc.c     **** 
 380:Src/adc.c     ****   pulse_tim8_ch2(1);
 1064              		.loc 1 380 3 view .LVU302
 1065 0012 0120     		movs	r0, #1
 1066 0014 FFF7FEFF 		bl	pulse_tim8_ch2
 1067              	.LVL74:
 381:Src/adc.c     ****   HAL_Delay(20);
 1068              		.loc 1 381 3 view .LVU303
 1069 0018 1420     		movs	r0, #20
 1070 001a FFF7FEFF 		bl	HAL_Delay
 1071              	.LVL75:
 382:Src/adc.c     **** 
 383:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc1_dma_buff, ADC_DMA_BUFFSIZE);
 1072              		.loc 1 383 3 view .LVU304
 1073 001e 41F27072 		movw	r2, #6000
 1074 0022 0949     		ldr	r1, .L75+8
 1075 0024 2846     		mov	r0, r5
 1076 0026 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1077              	.LVL76:
 384:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t*)adc2_dma_buff, ADC_DMA_BUFFSIZE);
 1078              		.loc 1 384 3 view .LVU305
 1079 002a 41F27072 		movw	r2, #6000
 1080 002e 0749     		ldr	r1, .L75+12
 1081 0030 2046     		mov	r0, r4
 1082 0032 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1083              	.LVL77:
 385:Src/adc.c     **** 
 386:Src/adc.c     ****   pulse_tim8_ch2(1);
 1084              		.loc 1 386 3 view .LVU306
 1085 0036 0120     		movs	r0, #1
 1086 0038 FFF7FEFF 		bl	pulse_tim8_ch2
 1087              	.LVL78:
 387:Src/adc.c     **** }
 1088              		.loc 1 387 1 is_stmt 0 view .LVU307
 1089 003c 38BD     		pop	{r3, r4, r5, pc}
 1090              	.L76:
 1091 003e 00BF     		.align	2
 1092              	.L75:
 1093 0040 00000000 		.word	hadc1
 1094 0044 00000000 		.word	hadc2
 1095 0048 00000000 		.word	adc1_dma_buff
 1096 004c 00000000 		.word	adc2_dma_buff
 1097              		.cfi_endproc
 1098              	.LFE134:
 1100              		.comm	hdma_adc2,68,4
 1101              		.comm	hdma_adc1,68,4
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 29


 1102              		.comm	hadc2,84,4
 1103              		.comm	hadc1,84,4
 1104              		.global	requestACK
 1105              		.global	toAddress
 1106              		.comm	theData,8,4
 1107              		.comm	adc2_dma_buff,12000,4
 1108              		.comm	adc1_dma_buff,12000,4
 1109              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 1110              		.align	2
 1111              		.set	.LANCHOR2,. + 0
 1114              	HAL_RCC_ADC12_CLK_ENABLED:
 1115 0000 00000000 		.space	4
 1116              		.section	.bss.requestACK,"aw",%nobits
 1117              		.set	.LANCHOR0,. + 0
 1120              	requestACK:
 1121 0000 00       		.space	1
 1122              		.section	.data.toAddress,"aw"
 1123              		.set	.LANCHOR1,. + 0
 1126              	toAddress:
 1127 0000 01       		.byte	1
 1128              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 1129              		.align	2
 1130              	.LC3:
 1131 0000 5372632F 		.ascii	"Src/adc.c\000"
 1131      6164632E 
 1131      6300
 1132              		.section	.rodata.RunReceive.str1.4,"aMS",%progbits,1
 1133              		.align	2
 1134              	.LC0:
 1135 0000 0D0A00   		.ascii	"\015\012\000"
 1136 0003 00       		.space	1
 1137              	.LC1:
 1138 0004 5061796C 		.ascii	"Payload Received!\015\012\000"
 1138      6F616420 
 1138      52656365 
 1138      69766564 
 1138      210D0A00 
 1139              		.section	.rodata.RunTransmit.str1.4,"aMS",%progbits,1
 1140              		.align	2
 1141              	.LC2:
 1142 0000 5061796C 		.ascii	"Payload Sent!\015\012\000"
 1142      6F616420 
 1142      53656E74 
 1142      210D0A00 
 1143              		.text
 1144              	.Letext0:
 1145              		.file 2 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_
 1146              		.file 3 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1147              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1148              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1149              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1150              		.file 7 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/std
 1151              		.file 8 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 1152              		.file 9 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 1153              		.file 10 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 1154              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1155              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 30


 1156              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1157              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1158              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1159              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1160              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1161              		.file 18 "Inc/adc.h"
 1162              		.file 19 "Inc/usart.h"
 1163              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1164              		.file 21 "Inc/RFM69.h"
 1165              		.file 22 "Inc/RFM69_ext.h"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:18     .text.RunReceive:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:26     .text.RunReceive:0000000000000000 RunReceive
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:99     .text.RunReceive:0000000000000050 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:105    .text.RunTransmit:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:112    .text.RunTransmit:0000000000000000 RunTransmit
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:172    .text.RunTransmit:000000000000004c $d
                            *COM*:0000000000000008 theData
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:180    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:187    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:336    .text.MX_ADC1_Init:000000000000008c $d
                            *COM*:0000000000000054 hadc1
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:342    .text.MX_ADC2_Init:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:349    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:526    .text.MX_ADC2_Init:00000000000000ac $d
                            *COM*:0000000000000054 hadc2
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:533    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:540    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:808    .text.HAL_ADC_MspInit:0000000000000110 $d
                            *COM*:0000000000000044 hdma_adc1
                            *COM*:0000000000000044 hdma_adc2
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:821    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:828    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:924    .text.HAL_ADC_MspDeInit:0000000000000068 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:932    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:939    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:977    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000018 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:983    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:990    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1028   .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1034   .text.start_ADCs:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1041   .text.start_ADCs:0000000000000000 start_ADCs
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1093   .text.start_ADCs:0000000000000040 $d
                            *COM*:0000000000002ee0 adc1_dma_buff
                            *COM*:0000000000002ee0 adc2_dma_buff
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1120   .bss.requestACK:0000000000000000 requestACK
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1126   .data.toAddress:0000000000000000 toAddress
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1110   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1114   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 HAL_RCC_ADC12_CLK_ENABLED
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1121   .bss.requestACK:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1129   .rodata.MX_ADC1_Init.str1.4:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1133   .rodata.RunReceive.str1.4:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s:1140   .rodata.RunTransmit.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
RFM69_ReadDIO0Pin
RFM69_receiveDone
HAL_GPIO_WritePin
RFM69_interruptHandler
debug_printf
PrintRawBytes
PrintStruct
PrintByteByByte
HAL_GetTick
RFM69_send
HAL_Delay
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccp8tWxY.s 			page 32


HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
process_frame
HAL_ADC_Stop_DMA
pulse_tim8_ch2
HAL_ADC_Start_DMA
