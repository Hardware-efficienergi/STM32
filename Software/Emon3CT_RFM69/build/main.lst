ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.process_frame,"ax",%progbits
  18              		.align	1
  19              		.global	process_frame
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	process_frame:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 2


  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** #include "adc.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "opamp.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <string.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** #include "RFM69.h"
  54:Src/main.c    **** #include "RFM69_ext.h"
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PV */
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** #define true 1
  63:Src/main.c    **** #define false 0
  64:Src/main.c    **** #define MID_ADC_READING 2048
  65:Src/main.c    **** 
  66:Src/main.c    **** // Serial output buffer
  67:Src/main.c    **** char log_buffer[100];
  68:Src/main.c    **** 
  69:Src/main.c    **** // Flag
  70:Src/main.c    **** int8_t readings_ready = false;
  71:Src/main.c    **** 
  72:Src/main.c    **** // Calibration
  73:Src/main.c    **** double VCAL = 268.97;
  74:Src/main.c    **** double ICAL = 20.0;
  75:Src/main.c    **** 
  76:Src/main.c    **** // ISR accumulators
  77:Src/main.c    **** typedef struct channel_
  78:Src/main.c    **** {
  79:Src/main.c    ****   int64_t sum_P;
  80:Src/main.c    ****   uint64_t sum_V_sq;
  81:Src/main.c    ****   uint64_t sum_I_sq;
  82:Src/main.c    ****   int64_t sum_V;
  83:Src/main.c    ****   int64_t sum_I;
  84:Src/main.c    ****   uint64_t count;
  85:Src/main.c    **** 
  86:Src/main.c    ****   uint8_t positive_V;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 3


  87:Src/main.c    ****   uint8_t last_positive_V;
  88:Src/main.c    ****   uint8_t cycles;
  89:Src/main.c    **** } channel_t;
  90:Src/main.c    **** 
  91:Src/main.c    **** static channel_t channels[3];
  92:Src/main.c    **** static channel_t channels_copy[3];
  93:Src/main.c    **** 
  94:Src/main.c    **** uint16_t networkID = 210; // a.k.a. Network Group
  95:Src/main.c    **** uint8_t nodeID = 1;
  96:Src/main.c    **** uint16_t freqBand = 433;
  97:Src/main.c    **** /* available frequency bands
  98:Src/main.c    ****   #define RF69_315MHZ            315
  99:Src/main.c    ****   #define RF69_433MHZ            433
 100:Src/main.c    ****   #define RF69_868MHZ            868
 101:Src/main.c    ****   #define RF69_915MHZ            915
 102:Src/main.c    ****   see registers.h for even more.
 103:Src/main.c    ****   */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* USER CODE END PV */
 106:Src/main.c    **** 
 107:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 108:Src/main.c    **** void SystemClock_Config(void);
 109:Src/main.c    **** 
 110:Src/main.c    **** /* USER CODE BEGIN PFP */
 111:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 112:Src/main.c    **** 
 113:Src/main.c    **** /* USER CODE END PFP */
 114:Src/main.c    **** 
 115:Src/main.c    **** /* USER CODE BEGIN 0 */
 116:Src/main.c    **** void process_frame(uint16_t offset)
 117:Src/main.c    **** {
  30              		.loc 1 117 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 117 1 is_stmt 0 view .LVU1
  35 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 3, -32
  39              		.cfi_offset 4, -28
  40              		.cfi_offset 5, -24
  41              		.cfi_offset 6, -20
  42              		.cfi_offset 7, -16
  43              		.cfi_offset 8, -12
  44              		.cfi_offset 9, -8
  45              		.cfi_offset 14, -4
  46 0004 0646     		mov	r6, r0
 118:Src/main.c    ****   int32_t sample_V, sample_I, signed_V, signed_I;
  47              		.loc 1 118 3 is_stmt 1 view .LVU2
 119:Src/main.c    **** 
 120:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
  48              		.loc 1 120 3 view .LVU3
  49 0006 0122     		movs	r2, #1
  50 0008 2021     		movs	r1, #32
  51 000a 5E48     		ldr	r0, .L15
  52              	.LVL1:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 4


  53              		.loc 1 120 3 is_stmt 0 view .LVU4
  54 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  55              	.LVL2:
 121:Src/main.c    ****   for (int i = 0; i < 3000; i += 3)
  56              		.loc 1 121 3 is_stmt 1 view .LVU5
  57              	.LBB2:
  58              		.loc 1 121 8 view .LVU6
  59              		.loc 1 121 12 is_stmt 0 view .LVU7
  60 0010 0025     		movs	r5, #0
  61              		.loc 1 121 3 view .LVU8
  62 0012 A9E0     		b	.L2
  63              	.LVL3:
  64              	.L3:
  65              	.LBB3:
  66              	.LBB4:
 122:Src/main.c    ****   {
 123:Src/main.c    ****     // Cycle through channels
 124:Src/main.c    ****     for (int n = 0; n < 3; n++)
 125:Src/main.c    ****     {
 126:Src/main.c    ****       channel_t *channel = &channels[n];
 127:Src/main.c    **** 
 128:Src/main.c    ****       // ----------------------------------------
 129:Src/main.c    ****       // Voltage
 130:Src/main.c    ****       sample_V = adc1_dma_buff[offset + i + n];
 131:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 132:Src/main.c    ****       channel->sum_V += signed_V;
 133:Src/main.c    ****       channel->sum_V_sq += signed_V * signed_V;
 134:Src/main.c    ****       // ----------------------------------------
 135:Src/main.c    ****       // Current
 136:Src/main.c    ****       sample_I = adc2_dma_buff[offset + i + n];
 137:Src/main.c    ****       signed_I = sample_I - MID_ADC_READING;
 138:Src/main.c    ****       channel->sum_I += signed_I;
 139:Src/main.c    ****       channel->sum_I_sq += signed_I * signed_I;
 140:Src/main.c    ****       // ----------------------------------------
 141:Src/main.c    ****       // Power
 142:Src/main.c    ****       channel->sum_P += signed_V * signed_I;
 143:Src/main.c    **** 
 144:Src/main.c    ****       channel->count++;
 145:Src/main.c    **** 
 146:Src/main.c    ****       // Zero crossing detection
 147:Src/main.c    ****       channel->last_positive_V = channel->positive_V;
 148:Src/main.c    ****       if (signed_V > 0)
 149:Src/main.c    ****         channel->positive_V = true;
 150:Src/main.c    ****       else
 151:Src/main.c    ****         channel->positive_V = false;
  67              		.loc 1 151 9 is_stmt 1 view .LVU9
  68              		.loc 1 151 29 is_stmt 0 view .LVU10
  69 0014 C4EBC402 		rsb	r2, r4, r4, lsl #3
  70 0018 D100     		lsls	r1, r2, #3
  71              	.LVL4:
  72              		.loc 1 151 29 view .LVU11
  73 001a 5B4A     		ldr	r2, .L15+4
  74 001c 0A44     		add	r2, r2, r1
  75 001e 0021     		movs	r1, #0
  76 0020 82F83010 		strb	r1, [r2, #48]
  77 0024 5BE0     		b	.L4
  78              	.L5:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 5


 152:Src/main.c    ****       if (!channel->last_positive_V && channel->positive_V)
 153:Src/main.c    ****         channel->cycles++;
 154:Src/main.c    **** 
 155:Src/main.c    ****       // 125 cycles or 2.5 seconds
 156:Src/main.c    ****       if (channel->cycles >= 125)
  79              		.loc 1 156 7 is_stmt 1 view .LVU12
  80              		.loc 1 156 18 is_stmt 0 view .LVU13
  81 0026 C4EBC403 		rsb	r3, r4, r4, lsl #3
  82 002a DA00     		lsls	r2, r3, #3
  83 002c 564B     		ldr	r3, .L15+4
  84 002e 1344     		add	r3, r3, r2
  85 0030 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
  86              		.loc 1 156 10 view .LVU14
  87 0034 7C2B     		cmp	r3, #124
  88 0036 68D8     		bhi	.L12
  89              	.LVL5:
  90              	.L6:
  91              		.loc 1 156 10 view .LVU15
  92              	.LBE4:
 124:Src/main.c    ****     {
  93              		.loc 1 124 29 discriminator 2 view .LVU16
  94 0038 0134     		adds	r4, r4, #1
  95              	.LVL6:
  96              	.L9:
 124:Src/main.c    ****     {
  97              		.loc 1 124 5 discriminator 1 view .LVU17
  98 003a 022C     		cmp	r4, #2
  99 003c 00F39380 		bgt	.L13
 100              	.LBB6:
 126:Src/main.c    **** 
 101              		.loc 1 126 7 is_stmt 1 view .LVU18
 126:Src/main.c    **** 
 102              		.loc 1 126 18 is_stmt 0 view .LVU19
 103 0040 E300     		lsls	r3, r4, #3
 104 0042 1B1B     		subs	r3, r3, r4
 105 0044 D800     		lsls	r0, r3, #3
 106 0046 504B     		ldr	r3, .L15+4
 107 0048 1844     		add	r0, r0, r3
 108              	.LVL7:
 130:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 109              		.loc 1 130 7 is_stmt 1 view .LVU20
 130:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 110              		.loc 1 130 39 is_stmt 0 view .LVU21
 111 004a 7719     		adds	r7, r6, r5
 130:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 112              		.loc 1 130 43 view .LVU22
 113 004c 2744     		add	r7, r7, r4
 130:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 114              		.loc 1 130 31 view .LVU23
 115 004e 4F4B     		ldr	r3, .L15+8
 116 0050 33F81710 		ldrh	r1, [r3, r7, lsl #1]
 117              	.LVL8:
 131:Src/main.c    ****       channel->sum_V += signed_V;
 118              		.loc 1 131 7 is_stmt 1 view .LVU24
 131:Src/main.c    ****       channel->sum_V += signed_V;
 119              		.loc 1 131 16 is_stmt 0 view .LVU25
 120 0054 A1F50061 		sub	r1, r1, #2048
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 6


 121              	.LVL9:
 132:Src/main.c    ****       channel->sum_V_sq += signed_V * signed_V;
 122              		.loc 1 132 7 is_stmt 1 view .LVU26
 132:Src/main.c    ****       channel->sum_V_sq += signed_V * signed_V;
 123              		.loc 1 132 22 is_stmt 0 view .LVU27
 124 0058 D0E90623 		ldrd	r2, [r0, #24]
 125 005c 12EB0108 		adds	r8, r2, r1
 126 0060 43EBE179 		adc	r9, r3, r1, asr #31
 127 0064 C0E90689 		strd	r8, [r0, #24]
 133:Src/main.c    ****       // ----------------------------------------
 128              		.loc 1 133 7 is_stmt 1 view .LVU28
 133:Src/main.c    ****       // ----------------------------------------
 129              		.loc 1 133 37 is_stmt 0 view .LVU29
 130 0068 01FB01FC 		mul	ip, r1, r1
 133:Src/main.c    ****       // ----------------------------------------
 131              		.loc 1 133 25 view .LVU30
 132 006c D0E90223 		ldrd	r2, [r0, #8]
 133 0070 12EB0C08 		adds	r8, r2, ip
 134 0074 43EBEC79 		adc	r9, r3, ip, asr #31
 135 0078 C0E90289 		strd	r8, [r0, #8]
 136:Src/main.c    ****       signed_I = sample_I - MID_ADC_READING;
 136              		.loc 1 136 7 is_stmt 1 view .LVU31
 136:Src/main.c    ****       signed_I = sample_I - MID_ADC_READING;
 137              		.loc 1 136 31 is_stmt 0 view .LVU32
 138 007c 444B     		ldr	r3, .L15+12
 139 007e 33F81770 		ldrh	r7, [r3, r7, lsl #1]
 140              	.LVL10:
 137:Src/main.c    ****       channel->sum_I += signed_I;
 141              		.loc 1 137 7 is_stmt 1 view .LVU33
 137:Src/main.c    ****       channel->sum_I += signed_I;
 142              		.loc 1 137 16 is_stmt 0 view .LVU34
 143 0082 A7F50067 		sub	r7, r7, #2048
 144              	.LVL11:
 138:Src/main.c    ****       channel->sum_I_sq += signed_I * signed_I;
 145              		.loc 1 138 7 is_stmt 1 view .LVU35
 138:Src/main.c    ****       channel->sum_I_sq += signed_I * signed_I;
 146              		.loc 1 138 22 is_stmt 0 view .LVU36
 147 0086 D0E90823 		ldrd	r2, [r0, #32]
 148 008a 12EB0708 		adds	r8, r2, r7
 149 008e 43EBE779 		adc	r9, r3, r7, asr #31
 150 0092 C0E90889 		strd	r8, [r0, #32]
 139:Src/main.c    ****       // ----------------------------------------
 151              		.loc 1 139 7 is_stmt 1 view .LVU37
 139:Src/main.c    ****       // ----------------------------------------
 152              		.loc 1 139 37 is_stmt 0 view .LVU38
 153 0096 07FB07FC 		mul	ip, r7, r7
 139:Src/main.c    ****       // ----------------------------------------
 154              		.loc 1 139 25 view .LVU39
 155 009a D0E90423 		ldrd	r2, [r0, #16]
 156 009e 12EB0C08 		adds	r8, r2, ip
 157 00a2 43EBEC79 		adc	r9, r3, ip, asr #31
 158 00a6 C0E90489 		strd	r8, [r0, #16]
 142:Src/main.c    **** 
 159              		.loc 1 142 7 is_stmt 1 view .LVU40
 142:Src/main.c    **** 
 160              		.loc 1 142 34 is_stmt 0 view .LVU41
 161 00aa 07FB01F7 		mul	r7, r7, r1
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 7


 162              	.LVL12:
 142:Src/main.c    **** 
 163              		.loc 1 142 22 view .LVU42
 164 00ae D0E90023 		ldrd	r2, [r0]
 165 00b2 12EB0708 		adds	r8, r2, r7
 166 00b6 43EBE779 		adc	r9, r3, r7, asr #31
 167 00ba C0E90089 		strd	r8, [r0]
 144:Src/main.c    **** 
 168              		.loc 1 144 7 is_stmt 1 view .LVU43
 144:Src/main.c    **** 
 169              		.loc 1 144 14 is_stmt 0 view .LVU44
 170 00be 836A     		ldr	r3, [r0, #40]
 171 00c0 C26A     		ldr	r2, [r0, #44]
 144:Src/main.c    **** 
 172              		.loc 1 144 21 view .LVU45
 173 00c2 0133     		adds	r3, r3, #1
 174 00c4 42F10002 		adc	r2, r2, #0
 175 00c8 8362     		str	r3, [r0, #40]
 176 00ca C262     		str	r2, [r0, #44]
 147:Src/main.c    ****       if (signed_V > 0)
 177              		.loc 1 147 7 is_stmt 1 view .LVU46
 147:Src/main.c    ****       if (signed_V > 0)
 178              		.loc 1 147 41 is_stmt 0 view .LVU47
 179 00cc 90F83030 		ldrb	r3, [r0, #48]	@ zero_extendqisi2
 147:Src/main.c    ****       if (signed_V > 0)
 180              		.loc 1 147 32 view .LVU48
 181 00d0 80F83130 		strb	r3, [r0, #49]
 148:Src/main.c    ****         channel->positive_V = true;
 182              		.loc 1 148 7 is_stmt 1 view .LVU49
 148:Src/main.c    ****         channel->positive_V = true;
 183              		.loc 1 148 10 is_stmt 0 view .LVU50
 184 00d4 0029     		cmp	r1, #0
 185 00d6 9DDD     		ble	.L3
 149:Src/main.c    ****       else
 186              		.loc 1 149 9 is_stmt 1 view .LVU51
 149:Src/main.c    ****       else
 187              		.loc 1 149 29 is_stmt 0 view .LVU52
 188 00d8 0121     		movs	r1, #1
 189              	.LVL13:
 149:Src/main.c    ****       else
 190              		.loc 1 149 29 view .LVU53
 191 00da 80F83010 		strb	r1, [r0, #48]
 192              	.L4:
 152:Src/main.c    ****         channel->cycles++;
 193              		.loc 1 152 7 is_stmt 1 view .LVU54
 152:Src/main.c    ****         channel->cycles++;
 194              		.loc 1 152 10 is_stmt 0 view .LVU55
 195 00de 002B     		cmp	r3, #0
 196 00e0 A1D1     		bne	.L5
 152:Src/main.c    ****         channel->cycles++;
 197              		.loc 1 152 47 discriminator 1 view .LVU56
 198 00e2 C4EBC403 		rsb	r3, r4, r4, lsl #3
 199 00e6 DA00     		lsls	r2, r3, #3
 200 00e8 274B     		ldr	r3, .L15+4
 201 00ea 1344     		add	r3, r3, r2
 202 00ec 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 152:Src/main.c    ****         channel->cycles++;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 8


 203              		.loc 1 152 37 discriminator 1 view .LVU57
 204 00f0 002B     		cmp	r3, #0
 205 00f2 98D0     		beq	.L5
 153:Src/main.c    **** 
 206              		.loc 1 153 9 is_stmt 1 view .LVU58
 153:Src/main.c    **** 
 207              		.loc 1 153 16 is_stmt 0 view .LVU59
 208 00f4 E200     		lsls	r2, r4, #3
 209 00f6 121B     		subs	r2, r2, r4
 210 00f8 D100     		lsls	r1, r2, #3
 211 00fa 234B     		ldr	r3, .L15+4
 212 00fc 0B44     		add	r3, r3, r1
 213 00fe 93F83220 		ldrb	r2, [r3, #50]	@ zero_extendqisi2
 153:Src/main.c    **** 
 214              		.loc 1 153 24 view .LVU60
 215 0102 0132     		adds	r2, r2, #1
 216 0104 83F83220 		strb	r2, [r3, #50]
 217 0108 8DE7     		b	.L5
 218              	.L12:
 219              	.LBB5:
 157:Src/main.c    ****       {
 158:Src/main.c    ****         channel->cycles = 0;
 220              		.loc 1 158 9 is_stmt 1 view .LVU61
 221              		.loc 1 158 25 is_stmt 0 view .LVU62
 222 010a E300     		lsls	r3, r4, #3
 223 010c 1A1B     		subs	r2, r3, r4
 224 010e D100     		lsls	r1, r2, #3
 225 0110 1D4A     		ldr	r2, .L15+4
 226 0112 0A44     		add	r2, r2, r1
 227 0114 0021     		movs	r1, #0
 228 0116 82F83210 		strb	r1, [r2, #50]
 159:Src/main.c    **** 
 160:Src/main.c    ****         channel_t *channel_copy = &channels_copy[n];
 229              		.loc 1 160 9 is_stmt 1 view .LVU63
 230              		.loc 1 160 20 is_stmt 0 view .LVU64
 231 011a 1B1B     		subs	r3, r3, r4
 232 011c D900     		lsls	r1, r3, #3
 233              	.LVL14:
 161:Src/main.c    ****         // Copy accumulators for use in main loop
 162:Src/main.c    ****         memcpy((void *)channel_copy, (void *)channel, sizeof(channel_t));
 234              		.loc 1 162 9 is_stmt 1 view .LVU65
 235 011e 0346     		mov	r3, r0
 236 0120 1C4A     		ldr	r2, .L15+16
 237 0122 0A44     		add	r2, r2, r1
 238              	.LVL15:
 239              		.loc 1 162 9 is_stmt 0 view .LVU66
 240 0124 00F13008 		add	r8, r0, #48
 241              	.LVL16:
 242              	.L7:
 243              		.loc 1 162 9 view .LVU67
 244 0128 D3F800E0 		ldr	lr, [r3]	@ unaligned
 245 012c D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 246 0130 9F68     		ldr	r7, [r3, #8]	@ unaligned
 247 0132 D968     		ldr	r1, [r3, #12]	@ unaligned
 248 0134 C2F800E0 		str	lr, [r2]	@ unaligned
 249 0138 C2F804C0 		str	ip, [r2, #4]	@ unaligned
 250 013c 9760     		str	r7, [r2, #8]	@ unaligned
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 9


 251 013e D160     		str	r1, [r2, #12]	@ unaligned
 252 0140 1033     		adds	r3, r3, #16
 253 0142 1032     		adds	r2, r2, #16
 254 0144 4345     		cmp	r3, r8
 255 0146 EFD1     		bne	.L7
 256 0148 1968     		ldr	r1, [r3]	@ unaligned
 257 014a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 258 014c 1160     		str	r1, [r2]	@ unaligned
 259 014e 5360     		str	r3, [r2, #4]	@ unaligned
 163:Src/main.c    ****         // Reset accumulators to zero ready for next set of measurements
 164:Src/main.c    ****         memset((void *)channel, 0, sizeof(channel_t));
 260              		.loc 1 164 9 is_stmt 1 view .LVU68
 261 0150 3822     		movs	r2, #56
 262 0152 0021     		movs	r1, #0
 263 0154 FFF7FEFF 		bl	memset
 264              	.LVL17:
 165:Src/main.c    **** 
 166:Src/main.c    ****         if (n == 2)
 265              		.loc 1 166 9 view .LVU69
 266              		.loc 1 166 12 is_stmt 0 view .LVU70
 267 0158 022C     		cmp	r4, #2
 268 015a 7FF46DAF 		bne	.L6
 167:Src/main.c    ****         {
 168:Src/main.c    ****           readings_ready = true;
 269              		.loc 1 168 11 is_stmt 1 view .LVU71
 270              		.loc 1 168 26 is_stmt 0 view .LVU72
 271 015e 0E4B     		ldr	r3, .L15+20
 272 0160 0122     		movs	r2, #1
 273 0162 1A70     		strb	r2, [r3]
 274 0164 68E7     		b	.L6
 275              	.LVL18:
 276              	.L13:
 277              		.loc 1 168 26 view .LVU73
 278              	.LBE5:
 279              	.LBE6:
 280              	.LBE3:
 121:Src/main.c    ****   {
 281              		.loc 1 121 31 discriminator 2 view .LVU74
 282 0166 0335     		adds	r5, r5, #3
 283              	.LVL19:
 284              	.L2:
 121:Src/main.c    ****   {
 285              		.loc 1 121 3 discriminator 1 view .LVU75
 286 0168 40F6B733 		movw	r3, #2999
 287 016c 9D42     		cmp	r5, r3
 288 016e 01DC     		bgt	.L14
 289              	.LBB7:
 124:Src/main.c    ****     {
 290              		.loc 1 124 14 view .LVU76
 291 0170 0024     		movs	r4, #0
 292 0172 62E7     		b	.L9
 293              	.L14:
 294              	.LBE7:
 295              	.LBE2:
 169:Src/main.c    ****         }
 170:Src/main.c    ****       }
 171:Src/main.c    ****     }
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 10


 172:Src/main.c    ****   }
 173:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 296              		.loc 1 173 3 is_stmt 1 view .LVU77
 297 0174 0022     		movs	r2, #0
 298 0176 2021     		movs	r1, #32
 299 0178 0248     		ldr	r0, .L15
 300 017a FFF7FEFF 		bl	HAL_GPIO_WritePin
 301              	.LVL20:
 174:Src/main.c    **** }
 302              		.loc 1 174 1 is_stmt 0 view .LVU78
 303 017e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 304              	.LVL21:
 305              	.L16:
 306              		.loc 1 174 1 view .LVU79
 307 0182 00BF     		.align	2
 308              	.L15:
 309 0184 00040048 		.word	1207960576
 310 0188 00000000 		.word	.LANCHOR0
 311 018c 00000000 		.word	adc1_dma_buff
 312 0190 00000000 		.word	adc2_dma_buff
 313 0194 00000000 		.word	.LANCHOR1
 314 0198 00000000 		.word	.LANCHOR2
 315              		.cfi_endproc
 316              	.LFE126:
 318              		.section	.text._Error_Handler,"ax",%progbits
 319              		.align	1
 320              		.global	_Error_Handler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	_Error_Handler:
 327              	.LFB129:
 175:Src/main.c    **** /*
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE END 0 */
 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief  The application entry point.
 181:Src/main.c    ****   *
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** int main(void)
 185:Src/main.c    **** {
 186:Src/main.c    ****   /* USER CODE BEGIN 1 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END 1 */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 193:Src/main.c    ****   HAL_Init();
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* USER CODE BEGIN Init */
 196:Src/main.c    ****   double V_RATIO = VCAL * (3.3 / 4096.0);
 197:Src/main.c    ****   double I_RATIO = ICAL * (3.3 / 4096.0);
 198:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 11


 199:Src/main.c    **** 
 200:Src/main.c    ****   /* Configure the system clock */
 201:Src/main.c    ****   SystemClock_Config();
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE END SysInit */
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* Initialize all configured peripherals */
 208:Src/main.c    ****   MX_GPIO_Init();
 209:Src/main.c    ****   MX_DMA_Init();
 210:Src/main.c    ****   MX_USART2_UART_Init();
 211:Src/main.c    ****   MX_ADC1_Init();
 212:Src/main.c    ****   MX_ADC2_Init();
 213:Src/main.c    ****   MX_TIM8_Init();
 214:Src/main.c    ****   MX_OPAMP2_Init();
 215:Src/main.c    ****   MX_SPI2_Init();
 216:Src/main.c    ****   /* USER CODE BEGIN 2 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   HAL_OPAMP_Start(&hopamp2);
 219:Src/main.c    **** 
 220:Src/main.c    ****   sprintf(log_buffer, "CH\tVrms\tIrms\tRP\tAP\tPF\tCount\r\n");
 221:Src/main.c    ****   debug_printf(log_buffer);
 222:Src/main.c    **** 
 223:Src/main.c    ****   start_ADCs();
 224:Src/main.c    **** 
 225:Src/main.c    ****   // RFM init
 226:Src/main.c    ****   HAL_Delay(10);
 227:Src/main.c    ****   RFM69_RST();
 228:Src/main.c    ****   HAL_Delay(10);
 229:Src/main.c    ****   if (RFM69_initialize(freqBand, nodeID, networkID))
 230:Src/main.c    ****   {
 231:Src/main.c    ****     sprintf(log_buffer, "RFM69 Initialized. Freq %dMHz. Node %d. Group %d.\r\n", freqBand, nodeID, 
 232:Src/main.c    ****     debug_printf(log_buffer);
 233:Src/main.c    ****   }
 234:Src/main.c    ****   else
 235:Src/main.c    ****   {
 236:Src/main.c    ****     debug_printf("RFM69 not connected.\r\n");
 237:Src/main.c    ****   }
 238:Src/main.c    ****   //RFM69_readAllRegs();
 239:Src/main.c    **** 
 240:Src/main.c    ****   /* USER CODE END 2 */
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* Infinite loop */
 243:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 244:Src/main.c    ****   while (1)
 245:Src/main.c    ****   {
 246:Src/main.c    ****     if (readings_ready)
 247:Src/main.c    ****     {
 248:Src/main.c    ****       readings_ready = false;
 249:Src/main.c    **** 
 250:Src/main.c    ****       for (int n = 0; n < 3; n++)
 251:Src/main.c    ****       {
 252:Src/main.c    ****         channel_t *chn = &channels_copy[n];
 253:Src/main.c    **** 
 254:Src/main.c    ****         double Vmean = chn->sum_V * (1.0 / chn->count);
 255:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 12


 256:Src/main.c    **** 
 257:Src/main.c    ****         chn->sum_V_sq *= (1.0 / chn->count);
 258:Src/main.c    ****         chn->sum_V_sq -= (Vmean * Vmean);
 259:Src/main.c    ****         double Vrms = V_RATIO * sqrt((double)chn->sum_V_sq);
 260:Src/main.c    **** 
 261:Src/main.c    ****         chn->sum_I_sq *= (1.0 / chn->count);
 262:Src/main.c    ****         chn->sum_I_sq -= (Imean * Imean);
 263:Src/main.c    ****         double Irms = I_RATIO * sqrt((double)chn->sum_I_sq);
 264:Src/main.c    **** 
 265:Src/main.c    ****         double mean_P = (chn->sum_P * (1.0 / chn->count)) - (Vmean * Imean);
 266:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 267:Src/main.c    **** 
 268:Src/main.c    ****         double apparentPower = Vrms * Irms;
 269:Src/main.c    ****         double powerFactor = realPower / apparentPower;
 270:Src/main.c    **** 
 271:Src/main.c    ****         sprintf(log_buffer, "CH:%d\t%.2f\t%.3f\t%.1f\t%.1f\t%.3f\t%d\r\n", n, Vrms, Irms, realPower
 272:Src/main.c    ****         debug_printf(log_buffer);
 273:Src/main.c    ****       }
 274:Src/main.c    **** 
 275:Src/main.c    ****       sprintf(log_buffer, "\r\n");
 276:Src/main.c    ****       debug_printf(log_buffer);
 277:Src/main.c    ****     }
 278:Src/main.c    ****   }
 279:Src/main.c    ****   /* USER CODE END WHILE */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE BEGIN 3 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE END 3 */
 284:Src/main.c    **** }
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief System Clock Configuration
 288:Src/main.c    ****   * @retval None
 289:Src/main.c    ****   */
 290:Src/main.c    **** void SystemClock_Config(void)
 291:Src/main.c    **** {
 292:Src/main.c    **** 
 293:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 294:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 295:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 296:Src/main.c    **** 
 297:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 298:Src/main.c    ****     */
 299:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 300:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 301:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 302:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 305:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 306:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 307:Src/main.c    ****   {
 308:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 309:Src/main.c    ****   }
 310:Src/main.c    **** 
 311:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 312:Src/main.c    ****     */
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 13


 313:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 314:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 315:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 316:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 317:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 318:Src/main.c    **** 
 319:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 320:Src/main.c    ****   {
 321:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 322:Src/main.c    ****   }
 323:Src/main.c    **** 
 324:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_TIM8;
 325:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 326:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 327:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 328:Src/main.c    ****   {
 329:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 330:Src/main.c    ****   }
 331:Src/main.c    **** 
 332:Src/main.c    ****   /**Configure the Systick interrupt time
 333:Src/main.c    ****     */
 334:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 335:Src/main.c    **** 
 336:Src/main.c    ****   /**Configure the Systick
 337:Src/main.c    ****     */
 338:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 341:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 342:Src/main.c    **** }
 343:Src/main.c    **** 
 344:Src/main.c    **** /* USER CODE BEGIN 4 */
 345:Src/main.c    **** 
 346:Src/main.c    **** /* USER CODE END 4 */
 347:Src/main.c    **** 
 348:Src/main.c    **** /**
 349:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 350:Src/main.c    ****   * @param  file: The file name as string.
 351:Src/main.c    ****   * @param  line: The line in file as a number.
 352:Src/main.c    ****   * @retval None
 353:Src/main.c    ****   */
 354:Src/main.c    **** void _Error_Handler(char *file, int line)
 355:Src/main.c    **** {
 328              		.loc 1 355 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ Volatile: function does not return.
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL22:
 335              	.L18:
 356:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 357:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 358:Src/main.c    ****   while (1)
 336              		.loc 1 358 3 discriminator 1 view .LVU81
 359:Src/main.c    ****   {
 360:Src/main.c    ****   }
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 14


 337              		.loc 1 360 3 discriminator 1 view .LVU82
 338 0000 FEE7     		b	.L18
 339              		.cfi_endproc
 340              	.LFE129:
 342              		.section	.text.SystemClock_Config,"ax",%progbits
 343              		.align	1
 344              		.global	SystemClock_Config
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv4-sp-d16
 350              	SystemClock_Config:
 351              	.LFB128:
 291:Src/main.c    **** 
 352              		.loc 1 291 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 152
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 00B5     		push	{lr}
 357              	.LCFI1:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 14, -4
 360 0002 A7B0     		sub	sp, sp, #156
 361              	.LCFI2:
 362              		.cfi_def_cfa_offset 160
 293:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 363              		.loc 1 293 3 view .LVU84
 294:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 364              		.loc 1 294 3 view .LVU85
 295:Src/main.c    **** 
 365              		.loc 1 295 3 view .LVU86
 299:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 366              		.loc 1 299 3 view .LVU87
 299:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 367              		.loc 1 299 36 is_stmt 0 view .LVU88
 368 0004 0223     		movs	r3, #2
 369 0006 1C93     		str	r3, [sp, #112]
 300:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 370              		.loc 1 300 3 is_stmt 1 view .LVU89
 300:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 371              		.loc 1 300 30 is_stmt 0 view .LVU90
 372 0008 0122     		movs	r2, #1
 373 000a 1F92     		str	r2, [sp, #124]
 301:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 374              		.loc 1 301 3 is_stmt 1 view .LVU91
 301:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 375              		.loc 1 301 41 is_stmt 0 view .LVU92
 376 000c 1022     		movs	r2, #16
 377 000e 2092     		str	r2, [sp, #128]
 302:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 378              		.loc 1 302 3 is_stmt 1 view .LVU93
 302:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 379              		.loc 1 302 34 is_stmt 0 view .LVU94
 380 0010 2293     		str	r3, [sp, #136]
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 381              		.loc 1 303 3 is_stmt 1 view .LVU95
 303:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 15


 382              		.loc 1 303 35 is_stmt 0 view .LVU96
 383 0012 4FF40043 		mov	r3, #32768
 384 0016 2393     		str	r3, [sp, #140]
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 385              		.loc 1 304 3 is_stmt 1 view .LVU97
 304:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 386              		.loc 1 304 32 is_stmt 0 view .LVU98
 387 0018 4FF4E013 		mov	r3, #1835008
 388 001c 2493     		str	r3, [sp, #144]
 305:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 389              		.loc 1 305 3 is_stmt 1 view .LVU99
 305:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 390              		.loc 1 305 32 is_stmt 0 view .LVU100
 391 001e 0023     		movs	r3, #0
 392 0020 2593     		str	r3, [sp, #148]
 306:Src/main.c    ****   {
 393              		.loc 1 306 3 is_stmt 1 view .LVU101
 306:Src/main.c    ****   {
 394              		.loc 1 306 7 is_stmt 0 view .LVU102
 395 0022 1CA8     		add	r0, sp, #112
 396 0024 FFF7FEFF 		bl	HAL_RCC_OscConfig
 397              	.LVL23:
 306:Src/main.c    ****   {
 398              		.loc 1 306 6 view .LVU103
 399 0028 58BB     		cbnz	r0, .L24
 313:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 400              		.loc 1 313 3 is_stmt 1 view .LVU104
 313:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 401              		.loc 1 313 31 is_stmt 0 view .LVU105
 402 002a 0F23     		movs	r3, #15
 403 002c 1793     		str	r3, [sp, #92]
 314:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 404              		.loc 1 314 3 is_stmt 1 view .LVU106
 314:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 405              		.loc 1 314 34 is_stmt 0 view .LVU107
 406 002e 0221     		movs	r1, #2
 407 0030 1891     		str	r1, [sp, #96]
 315:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 408              		.loc 1 315 3 is_stmt 1 view .LVU108
 315:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 409              		.loc 1 315 35 is_stmt 0 view .LVU109
 410 0032 0023     		movs	r3, #0
 411 0034 1993     		str	r3, [sp, #100]
 316:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 412              		.loc 1 316 3 is_stmt 1 view .LVU110
 316:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 413              		.loc 1 316 36 is_stmt 0 view .LVU111
 414 0036 4FF48062 		mov	r2, #1024
 415 003a 1A92     		str	r2, [sp, #104]
 317:Src/main.c    **** 
 416              		.loc 1 317 3 is_stmt 1 view .LVU112
 317:Src/main.c    **** 
 417              		.loc 1 317 36 is_stmt 0 view .LVU113
 418 003c 1B93     		str	r3, [sp, #108]
 319:Src/main.c    ****   {
 419              		.loc 1 319 3 is_stmt 1 view .LVU114
 319:Src/main.c    ****   {
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 16


 420              		.loc 1 319 7 is_stmt 0 view .LVU115
 421 003e 17A8     		add	r0, sp, #92
 422 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 423              	.LVL24:
 319:Src/main.c    ****   {
 424              		.loc 1 319 6 view .LVU116
 425 0044 10BB     		cbnz	r0, .L25
 324:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 426              		.loc 1 324 3 is_stmt 1 view .LVU117
 324:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 427              		.loc 1 324 38 is_stmt 0 view .LVU118
 428 0046 42F20203 		movw	r3, #8194
 429 004a 0193     		str	r3, [sp, #4]
 325:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 430              		.loc 1 325 3 is_stmt 1 view .LVU119
 325:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 431              		.loc 1 325 38 is_stmt 0 view .LVU120
 432 004c 0023     		movs	r3, #0
 433 004e 0493     		str	r3, [sp, #16]
 326:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 434              		.loc 1 326 3 is_stmt 1 view .LVU121
 326:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 435              		.loc 1 326 36 is_stmt 0 view .LVU122
 436 0050 1193     		str	r3, [sp, #68]
 327:Src/main.c    ****   {
 437              		.loc 1 327 3 is_stmt 1 view .LVU123
 327:Src/main.c    ****   {
 438              		.loc 1 327 7 is_stmt 0 view .LVU124
 439 0052 01A8     		add	r0, sp, #4
 440 0054 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 441              	.LVL25:
 327:Src/main.c    ****   {
 442              		.loc 1 327 6 view .LVU125
 443 0058 E8B9     		cbnz	r0, .L26
 334:Src/main.c    **** 
 444              		.loc 1 334 3 is_stmt 1 view .LVU126
 334:Src/main.c    **** 
 445              		.loc 1 334 22 is_stmt 0 view .LVU127
 446 005a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 447              	.LVL26:
 334:Src/main.c    **** 
 448              		.loc 1 334 3 view .LVU128
 449 005e 104B     		ldr	r3, .L27
 450 0060 A3FB0030 		umull	r3, r0, r3, r0
 451 0064 8009     		lsrs	r0, r0, #6
 452 0066 FFF7FEFF 		bl	HAL_SYSTICK_Config
 453              	.LVL27:
 338:Src/main.c    **** 
 454              		.loc 1 338 3 is_stmt 1 view .LVU129
 455 006a 0420     		movs	r0, #4
 456 006c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 457              	.LVL28:
 341:Src/main.c    **** }
 458              		.loc 1 341 3 view .LVU130
 459 0070 0022     		movs	r2, #0
 460 0072 1146     		mov	r1, r2
 461 0074 4FF0FF30 		mov	r0, #-1
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 17


 462 0078 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 463              	.LVL29:
 342:Src/main.c    **** 
 464              		.loc 1 342 1 is_stmt 0 view .LVU131
 465 007c 27B0     		add	sp, sp, #156
 466              	.LCFI3:
 467              		.cfi_remember_state
 468              		.cfi_def_cfa_offset 4
 469              		@ sp needed
 470 007e 5DF804FB 		ldr	pc, [sp], #4
 471              	.L24:
 472              	.LCFI4:
 473              		.cfi_restore_state
 308:Src/main.c    ****   }
 474              		.loc 1 308 5 is_stmt 1 view .LVU132
 475 0082 4FF49A71 		mov	r1, #308
 476 0086 0748     		ldr	r0, .L27+4
 477 0088 FFF7FEFF 		bl	_Error_Handler
 478              	.LVL30:
 479              	.L25:
 321:Src/main.c    ****   }
 480              		.loc 1 321 5 view .LVU133
 481 008c 40F24111 		movw	r1, #321
 482 0090 0448     		ldr	r0, .L27+4
 483 0092 FFF7FEFF 		bl	_Error_Handler
 484              	.LVL31:
 485              	.L26:
 329:Src/main.c    ****   }
 486              		.loc 1 329 5 view .LVU134
 487 0096 40F24911 		movw	r1, #329
 488 009a 0248     		ldr	r0, .L27+4
 489 009c FFF7FEFF 		bl	_Error_Handler
 490              	.LVL32:
 491              	.L28:
 492              		.align	2
 493              	.L27:
 494 00a0 D34D6210 		.word	274877907
 495 00a4 00000000 		.word	.LC0
 496              		.cfi_endproc
 497              	.LFE128:
 499              		.global	__aeabi_dmul
 500              		.global	__aeabi_l2d
 501              		.global	__aeabi_ul2d
 502              		.global	__aeabi_ddiv
 503              		.global	__aeabi_d2ulz
 504              		.global	__aeabi_dsub
 505              		.section	.text.main,"ax",%progbits
 506              		.align	1
 507              		.global	main
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv4-sp-d16
 513              	main:
 514              	.LFB127:
 185:Src/main.c    ****   /* USER CODE BEGIN 1 */
 515              		.loc 1 185 1 view -0
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 18


 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 32
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 520              	.LCFI5:
 521              		.cfi_def_cfa_offset 36
 522              		.cfi_offset 4, -36
 523              		.cfi_offset 5, -32
 524              		.cfi_offset 6, -28
 525              		.cfi_offset 7, -24
 526              		.cfi_offset 8, -20
 527              		.cfi_offset 9, -16
 528              		.cfi_offset 10, -12
 529              		.cfi_offset 11, -8
 530              		.cfi_offset 14, -4
 531 0004 2DED048B 		vpush.64	{d8, d9}
 532              	.LCFI6:
 533              		.cfi_def_cfa_offset 52
 534              		.cfi_offset 80, -52
 535              		.cfi_offset 81, -48
 536              		.cfi_offset 82, -44
 537              		.cfi_offset 83, -40
 538 0008 95B0     		sub	sp, sp, #84
 539              	.LCFI7:
 540              		.cfi_def_cfa_offset 136
 193:Src/main.c    **** 
 541              		.loc 1 193 3 view .LVU136
 542 000a FFF7FEFF 		bl	HAL_Init
 543              	.LVL33:
 196:Src/main.c    ****   double I_RATIO = ICAL * (3.3 / 4096.0);
 544              		.loc 1 196 3 view .LVU137
 196:Src/main.c    ****   double I_RATIO = ICAL * (3.3 / 4096.0);
 545              		.loc 1 196 10 is_stmt 0 view .LVU138
 546 000e B0A3     		adr	r3, .L37
 547 0010 D3E90023 		ldrd	r2, [r3]
 548 0014 B049     		ldr	r1, .L37+8
 549 0016 D1E90001 		ldrd	r0, [r1]
 550 001a FFF7FEFF 		bl	__aeabi_dmul
 551              	.LVL34:
 552 001e CDE90E01 		strd	r0, [sp, #56]
 553              	.LVL35:
 197:Src/main.c    ****   /* USER CODE END Init */
 554              		.loc 1 197 3 is_stmt 1 view .LVU139
 197:Src/main.c    ****   /* USER CODE END Init */
 555              		.loc 1 197 10 is_stmt 0 view .LVU140
 556 0022 ABA3     		adr	r3, .L37
 557 0024 D3E90023 		ldrd	r2, [r3]
 558 0028 AC49     		ldr	r1, .L37+12
 559 002a D1E90001 		ldrd	r0, [r1]
 560              	.LVL36:
 197:Src/main.c    ****   /* USER CODE END Init */
 561              		.loc 1 197 10 view .LVU141
 562 002e FFF7FEFF 		bl	__aeabi_dmul
 563              	.LVL37:
 564 0032 CDE91001 		strd	r0, [sp, #64]
 565              	.LVL38:
 201:Src/main.c    **** 
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 19


 566              		.loc 1 201 3 is_stmt 1 view .LVU142
 567 0036 FFF7FEFF 		bl	SystemClock_Config
 568              	.LVL39:
 208:Src/main.c    ****   MX_DMA_Init();
 569              		.loc 1 208 3 view .LVU143
 570 003a FFF7FEFF 		bl	MX_GPIO_Init
 571              	.LVL40:
 209:Src/main.c    ****   MX_USART2_UART_Init();
 572              		.loc 1 209 3 view .LVU144
 573 003e FFF7FEFF 		bl	MX_DMA_Init
 574              	.LVL41:
 210:Src/main.c    ****   MX_ADC1_Init();
 575              		.loc 1 210 3 view .LVU145
 576 0042 FFF7FEFF 		bl	MX_USART2_UART_Init
 577              	.LVL42:
 211:Src/main.c    ****   MX_ADC2_Init();
 578              		.loc 1 211 3 view .LVU146
 579 0046 FFF7FEFF 		bl	MX_ADC1_Init
 580              	.LVL43:
 212:Src/main.c    ****   MX_TIM8_Init();
 581              		.loc 1 212 3 view .LVU147
 582 004a FFF7FEFF 		bl	MX_ADC2_Init
 583              	.LVL44:
 213:Src/main.c    ****   MX_OPAMP2_Init();
 584              		.loc 1 213 3 view .LVU148
 585 004e FFF7FEFF 		bl	MX_TIM8_Init
 586              	.LVL45:
 214:Src/main.c    ****   MX_SPI2_Init();
 587              		.loc 1 214 3 view .LVU149
 588 0052 FFF7FEFF 		bl	MX_OPAMP2_Init
 589              	.LVL46:
 215:Src/main.c    ****   /* USER CODE BEGIN 2 */
 590              		.loc 1 215 3 view .LVU150
 591 0056 FFF7FEFF 		bl	MX_SPI2_Init
 592              	.LVL47:
 218:Src/main.c    **** 
 593              		.loc 1 218 3 view .LVU151
 594 005a A148     		ldr	r0, .L37+16
 595 005c FFF7FEFF 		bl	HAL_OPAMP_Start
 596              	.LVL48:
 220:Src/main.c    ****   debug_printf(log_buffer);
 597              		.loc 1 220 3 view .LVU152
 598 0060 A04D     		ldr	r5, .L37+20
 599 0062 A14C     		ldr	r4, .L37+24
 600 0064 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 601 0066 2860     		str	r0, [r5]	@ unaligned
 602 0068 6960     		str	r1, [r5, #4]	@ unaligned
 603 006a AA60     		str	r2, [r5, #8]	@ unaligned
 604 006c EB60     		str	r3, [r5, #12]	@ unaligned
 605 006e 07CC     		ldmia	r4!, {r0, r1, r2}
 606 0070 2861     		str	r0, [r5, #16]	@ unaligned
 607 0072 6961     		str	r1, [r5, #20]	@ unaligned
 608 0074 AA61     		str	r2, [r5, #24]	@ unaligned
 609 0076 2388     		ldrh	r3, [r4]	@ unaligned
 610 0078 AB83     		strh	r3, [r5, #28]	@ unaligned
 221:Src/main.c    **** 
 611              		.loc 1 221 3 view .LVU153
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 20


 612 007a 2846     		mov	r0, r5
 613 007c FFF7FEFF 		bl	debug_printf
 614              	.LVL49:
 223:Src/main.c    **** 
 615              		.loc 1 223 3 view .LVU154
 616 0080 FFF7FEFF 		bl	start_ADCs
 617              	.LVL50:
 226:Src/main.c    ****   RFM69_RST();
 618              		.loc 1 226 3 view .LVU155
 619 0084 0A20     		movs	r0, #10
 620 0086 FFF7FEFF 		bl	HAL_Delay
 621              	.LVL51:
 227:Src/main.c    ****   HAL_Delay(10);
 622              		.loc 1 227 3 view .LVU156
 623 008a FFF7FEFF 		bl	RFM69_RST
 624              	.LVL52:
 228:Src/main.c    ****   if (RFM69_initialize(freqBand, nodeID, networkID))
 625              		.loc 1 228 3 view .LVU157
 626 008e 0A20     		movs	r0, #10
 627 0090 FFF7FEFF 		bl	HAL_Delay
 628              	.LVL53:
 229:Src/main.c    ****   {
 629              		.loc 1 229 3 view .LVU158
 229:Src/main.c    ****   {
 630              		.loc 1 229 7 is_stmt 0 view .LVU159
 631 0094 954B     		ldr	r3, .L37+28
 632 0096 1A88     		ldrh	r2, [r3]
 633 0098 954B     		ldr	r3, .L37+32
 634 009a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 635 009c 954B     		ldr	r3, .L37+36
 636 009e 1888     		ldrh	r0, [r3]
 637 00a0 FFF7FEFF 		bl	RFM69_initialize
 638              	.LVL54:
 229:Src/main.c    ****   {
 639              		.loc 1 229 6 view .LVU160
 640 00a4 70B1     		cbz	r0, .L30
 231:Src/main.c    ****     debug_printf(log_buffer);
 641              		.loc 1 231 5 is_stmt 1 view .LVU161
 642 00a6 914B     		ldr	r3, .L37+28
 643 00a8 1B88     		ldrh	r3, [r3]
 644 00aa 0093     		str	r3, [sp]
 645 00ac 904B     		ldr	r3, .L37+32
 646 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 00b0 904A     		ldr	r2, .L37+36
 648 00b2 1288     		ldrh	r2, [r2]
 649 00b4 9049     		ldr	r1, .L37+40
 650 00b6 2846     		mov	r0, r5
 651 00b8 FFF7FEFF 		bl	sprintf
 652              	.LVL55:
 232:Src/main.c    ****   }
 653              		.loc 1 232 5 view .LVU162
 654 00bc 2846     		mov	r0, r5
 655 00be FFF7FEFF 		bl	debug_printf
 656              	.LVL56:
 657 00c2 FBE0     		b	.L32
 658              	.L30:
 236:Src/main.c    ****   }
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 21


 659              		.loc 1 236 5 view .LVU163
 660 00c4 8D48     		ldr	r0, .L37+44
 661 00c6 FFF7FEFF 		bl	debug_printf
 662              	.LVL57:
 663 00ca F7E0     		b	.L32
 664              	.LVL58:
 665              	.L34:
 666              	.LBB8:
 667              	.LBB9:
 252:Src/main.c    **** 
 668              		.loc 1 252 9 discriminator 3 view .LVU164
 254:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
 669              		.loc 1 254 9 discriminator 3 view .LVU165
 254:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
 670              		.loc 1 254 27 is_stmt 0 discriminator 3 view .LVU166
 671 00cc EB00     		lsls	r3, r5, #3
 672 00ce 5B1B     		subs	r3, r3, r5
 673 00d0 DA00     		lsls	r2, r3, #3
 674 00d2 8B4C     		ldr	r4, .L37+48
 675 00d4 1444     		add	r4, r4, r2
 254:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
 676              		.loc 1 254 35 discriminator 3 view .LVU167
 677 00d6 D4E90601 		ldrd	r0, [r4, #24]
 678 00da FFF7FEFF 		bl	__aeabi_l2d
 679              	.LVL59:
 680 00de 8046     		mov	r8, r0
 681 00e0 8946     		mov	r9, r1
 254:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
 682              		.loc 1 254 42 discriminator 3 view .LVU168
 683 00e2 D4E90A01 		ldrd	r0, [r4, #40]
 684 00e6 FFF7FEFF 		bl	__aeabi_ul2d
 685              	.LVL60:
 686 00ea 0246     		mov	r2, r0
 687 00ec 0B46     		mov	r3, r1
 688 00ee 0020     		movs	r0, #0
 689 00f0 8449     		ldr	r1, .L37+52
 690 00f2 FFF7FEFF 		bl	__aeabi_ddiv
 691              	.LVL61:
 692 00f6 0646     		mov	r6, r0
 693 00f8 0F46     		mov	r7, r1
 254:Src/main.c    ****         double Imean = chn->sum_I * (1.0 / chn->count);
 694              		.loc 1 254 16 discriminator 3 view .LVU169
 695 00fa 0246     		mov	r2, r0
 696 00fc 0B46     		mov	r3, r1
 697 00fe 4046     		mov	r0, r8
 698 0100 4946     		mov	r1, r9
 699 0102 FFF7FEFF 		bl	__aeabi_dmul
 700              	.LVL62:
 701 0106 CDE90C01 		strd	r0, [sp, #48]
 702              	.LVL63:
 255:Src/main.c    **** 
 703              		.loc 1 255 9 is_stmt 1 discriminator 3 view .LVU170
 255:Src/main.c    **** 
 704              		.loc 1 255 35 is_stmt 0 discriminator 3 view .LVU171
 705 010a D4E90801 		ldrd	r0, [r4, #32]
 706              	.LVL64:
 255:Src/main.c    **** 
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 22


 707              		.loc 1 255 35 discriminator 3 view .LVU172
 708 010e FFF7FEFF 		bl	__aeabi_l2d
 709              	.LVL65:
 255:Src/main.c    **** 
 710              		.loc 1 255 16 discriminator 3 view .LVU173
 711 0112 0246     		mov	r2, r0
 712 0114 0B46     		mov	r3, r1
 713 0116 3046     		mov	r0, r6
 714 0118 3946     		mov	r1, r7
 715 011a FFF7FEFF 		bl	__aeabi_dmul
 716              	.LVL66:
 717 011e 8246     		mov	r10, r0
 718 0120 8B46     		mov	fp, r1
 719              	.LVL67:
 257:Src/main.c    ****         chn->sum_V_sq -= (Vmean * Vmean);
 720              		.loc 1 257 9 is_stmt 1 discriminator 3 view .LVU174
 257:Src/main.c    ****         chn->sum_V_sq -= (Vmean * Vmean);
 721              		.loc 1 257 23 is_stmt 0 discriminator 3 view .LVU175
 722 0122 D4E90201 		ldrd	r0, [r4, #8]
 723 0126 FFF7FEFF 		bl	__aeabi_ul2d
 724              	.LVL68:
 725 012a 3246     		mov	r2, r6
 726 012c 3B46     		mov	r3, r7
 727 012e FFF7FEFF 		bl	__aeabi_dmul
 728              	.LVL69:
 729 0132 FFF7FEFF 		bl	__aeabi_d2ulz
 730              	.LVL70:
 731 0136 8046     		mov	r8, r0
 732 0138 8946     		mov	r9, r1
 258:Src/main.c    ****         double Vrms = V_RATIO * sqrt((double)chn->sum_V_sq);
 733              		.loc 1 258 9 is_stmt 1 discriminator 3 view .LVU176
 258:Src/main.c    ****         double Vrms = V_RATIO * sqrt((double)chn->sum_V_sq);
 734              		.loc 1 258 33 is_stmt 0 discriminator 3 view .LVU177
 735 013a DDE90C01 		ldrd	r0, [sp, #48]
 736 013e 0246     		mov	r2, r0
 737 0140 0B46     		mov	r3, r1
 738 0142 FFF7FEFF 		bl	__aeabi_dmul
 739              	.LVL71:
 740 0146 0646     		mov	r6, r0
 741 0148 0F46     		mov	r7, r1
 258:Src/main.c    ****         double Vrms = V_RATIO * sqrt((double)chn->sum_V_sq);
 742              		.loc 1 258 23 discriminator 3 view .LVU178
 743 014a 4046     		mov	r0, r8
 744 014c 4946     		mov	r1, r9
 745 014e FFF7FEFF 		bl	__aeabi_ul2d
 746              	.LVL72:
 747 0152 3246     		mov	r2, r6
 748 0154 3B46     		mov	r3, r7
 749 0156 FFF7FEFF 		bl	__aeabi_dsub
 750              	.LVL73:
 751 015a FFF7FEFF 		bl	__aeabi_d2ulz
 752              	.LVL74:
 753 015e C4E90201 		strd	r0, [r4, #8]
 259:Src/main.c    **** 
 754              		.loc 1 259 9 is_stmt 1 discriminator 3 view .LVU179
 259:Src/main.c    **** 
 755              		.loc 1 259 33 is_stmt 0 discriminator 3 view .LVU180
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 23


 756 0162 FFF7FEFF 		bl	__aeabi_ul2d
 757              	.LVL75:
 758 0166 41EC100B 		vmov	d0, r0, r1
 759 016a FFF7FEFF 		bl	sqrt
 760              	.LVL76:
 259:Src/main.c    **** 
 761              		.loc 1 259 16 discriminator 3 view .LVU181
 762 016e DDE90E23 		ldrd	r2, [sp, #56]
 763 0172 51EC100B 		vmov	r0, r1, d0
 764 0176 FFF7FEFF 		bl	__aeabi_dmul
 765              	.LVL77:
 766 017a 41EC180B 		vmov	d8, r0, r1
 767              	.LVL78:
 261:Src/main.c    ****         chn->sum_I_sq -= (Imean * Imean);
 768              		.loc 1 261 9 is_stmt 1 discriminator 3 view .LVU182
 261:Src/main.c    ****         chn->sum_I_sq -= (Imean * Imean);
 769              		.loc 1 261 31 is_stmt 0 discriminator 3 view .LVU183
 770 017e D4E90A01 		ldrd	r0, [r4, #40]
 771              	.LVL79:
 261:Src/main.c    ****         chn->sum_I_sq -= (Imean * Imean);
 772              		.loc 1 261 31 discriminator 3 view .LVU184
 773 0182 FFF7FEFF 		bl	__aeabi_ul2d
 774              	.LVL80:
 775 0186 0246     		mov	r2, r0
 776 0188 0B46     		mov	r3, r1
 777 018a 0020     		movs	r0, #0
 778 018c 5D49     		ldr	r1, .L37+52
 779 018e FFF7FEFF 		bl	__aeabi_ddiv
 780              	.LVL81:
 781 0192 0646     		mov	r6, r0
 782 0194 0F46     		mov	r7, r1
 261:Src/main.c    ****         chn->sum_I_sq -= (Imean * Imean);
 783              		.loc 1 261 23 discriminator 3 view .LVU185
 784 0196 D4E90401 		ldrd	r0, [r4, #16]
 785 019a FFF7FEFF 		bl	__aeabi_ul2d
 786              	.LVL82:
 787 019e 3246     		mov	r2, r6
 788 01a0 3B46     		mov	r3, r7
 789 01a2 FFF7FEFF 		bl	__aeabi_dmul
 790              	.LVL83:
 791 01a6 FFF7FEFF 		bl	__aeabi_d2ulz
 792              	.LVL84:
 793 01aa 0646     		mov	r6, r0
 794 01ac 0F46     		mov	r7, r1
 262:Src/main.c    ****         double Irms = I_RATIO * sqrt((double)chn->sum_I_sq);
 795              		.loc 1 262 9 is_stmt 1 discriminator 3 view .LVU186
 262:Src/main.c    ****         double Irms = I_RATIO * sqrt((double)chn->sum_I_sq);
 796              		.loc 1 262 33 is_stmt 0 discriminator 3 view .LVU187
 797 01ae 5246     		mov	r2, r10
 798 01b0 5B46     		mov	r3, fp
 799 01b2 CDE912AB 		strd	r10, [sp, #72]
 800 01b6 5046     		mov	r0, r10
 801 01b8 5946     		mov	r1, fp
 802 01ba FFF7FEFF 		bl	__aeabi_dmul
 803              	.LVL85:
 804 01be 8046     		mov	r8, r0
 805 01c0 8946     		mov	r9, r1
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 24


 262:Src/main.c    ****         double Irms = I_RATIO * sqrt((double)chn->sum_I_sq);
 806              		.loc 1 262 23 discriminator 3 view .LVU188
 807 01c2 3046     		mov	r0, r6
 808 01c4 3946     		mov	r1, r7
 809 01c6 FFF7FEFF 		bl	__aeabi_ul2d
 810              	.LVL86:
 811 01ca 4246     		mov	r2, r8
 812 01cc 4B46     		mov	r3, r9
 813 01ce FFF7FEFF 		bl	__aeabi_dsub
 814              	.LVL87:
 815 01d2 FFF7FEFF 		bl	__aeabi_d2ulz
 816              	.LVL88:
 817 01d6 C4E90401 		strd	r0, [r4, #16]
 263:Src/main.c    **** 
 818              		.loc 1 263 9 is_stmt 1 discriminator 3 view .LVU189
 263:Src/main.c    **** 
 819              		.loc 1 263 33 is_stmt 0 discriminator 3 view .LVU190
 820 01da FFF7FEFF 		bl	__aeabi_ul2d
 821              	.LVL89:
 822 01de 41EC100B 		vmov	d0, r0, r1
 823 01e2 FFF7FEFF 		bl	sqrt
 824              	.LVL90:
 263:Src/main.c    **** 
 825              		.loc 1 263 16 discriminator 3 view .LVU191
 826 01e6 DDE91023 		ldrd	r2, [sp, #64]
 827 01ea 51EC100B 		vmov	r0, r1, d0
 828 01ee FFF7FEFF 		bl	__aeabi_dmul
 829              	.LVL91:
 830 01f2 41EC190B 		vmov	d9, r0, r1
 831              	.LVL92:
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 832              		.loc 1 265 9 is_stmt 1 discriminator 3 view .LVU192
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 833              		.loc 1 265 29 is_stmt 0 discriminator 3 view .LVU193
 834 01f6 D4E90067 		ldrd	r6, [r4]
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 835              		.loc 1 265 49 discriminator 3 view .LVU194
 836 01fa D4E90AAB 		ldrd	r10, [r4, #40]
 837              	.LVL93:
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 838              		.loc 1 265 44 discriminator 3 view .LVU195
 839 01fe 5046     		mov	r0, r10
 840              	.LVL94:
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 841              		.loc 1 265 44 discriminator 3 view .LVU196
 842 0200 5946     		mov	r1, fp
 843 0202 FFF7FEFF 		bl	__aeabi_ul2d
 844              	.LVL95:
 845 0206 0246     		mov	r2, r0
 846 0208 0B46     		mov	r3, r1
 847 020a 0020     		movs	r0, #0
 848 020c 3D49     		ldr	r1, .L37+52
 849 020e FFF7FEFF 		bl	__aeabi_ddiv
 850              	.LVL96:
 851 0212 8046     		mov	r8, r0
 852 0214 8946     		mov	r9, r1
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 25


 853              		.loc 1 265 37 discriminator 3 view .LVU197
 854 0216 3046     		mov	r0, r6
 855 0218 3946     		mov	r1, r7
 856 021a FFF7FEFF 		bl	__aeabi_l2d
 857              	.LVL97:
 858 021e 4246     		mov	r2, r8
 859 0220 4B46     		mov	r3, r9
 860 0222 FFF7FEFF 		bl	__aeabi_dmul
 861              	.LVL98:
 862 0226 0646     		mov	r6, r0
 863 0228 0F46     		mov	r7, r1
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 864              		.loc 1 265 68 discriminator 3 view .LVU198
 865 022a DDE91223 		ldrd	r2, [sp, #72]
 866 022e DDE90C01 		ldrd	r0, [sp, #48]
 867 0232 FFF7FEFF 		bl	__aeabi_dmul
 868              	.LVL99:
 265:Src/main.c    ****         double realPower = V_RATIO * I_RATIO * mean_P;
 869              		.loc 1 265 16 discriminator 3 view .LVU199
 870 0236 0246     		mov	r2, r0
 871 0238 0B46     		mov	r3, r1
 872 023a 3046     		mov	r0, r6
 873 023c 3946     		mov	r1, r7
 874 023e FFF7FEFF 		bl	__aeabi_dsub
 875              	.LVL100:
 876 0242 0646     		mov	r6, r0
 877 0244 0F46     		mov	r7, r1
 878              	.LVL101:
 266:Src/main.c    **** 
 879              		.loc 1 266 9 is_stmt 1 discriminator 3 view .LVU200
 266:Src/main.c    **** 
 880              		.loc 1 266 36 is_stmt 0 discriminator 3 view .LVU201
 881 0246 DDE91023 		ldrd	r2, [sp, #64]
 882 024a DDE90E01 		ldrd	r0, [sp, #56]
 883 024e FFF7FEFF 		bl	__aeabi_dmul
 884              	.LVL102:
 266:Src/main.c    **** 
 885              		.loc 1 266 16 discriminator 3 view .LVU202
 886 0252 3246     		mov	r2, r6
 887 0254 3B46     		mov	r3, r7
 888 0256 FFF7FEFF 		bl	__aeabi_dmul
 889              	.LVL103:
 890 025a 0646     		mov	r6, r0
 891              	.LVL104:
 266:Src/main.c    **** 
 892              		.loc 1 266 16 discriminator 3 view .LVU203
 893 025c 0F46     		mov	r7, r1
 894              	.LVL105:
 268:Src/main.c    ****         double powerFactor = realPower / apparentPower;
 895              		.loc 1 268 9 is_stmt 1 discriminator 3 view .LVU204
 268:Src/main.c    ****         double powerFactor = realPower / apparentPower;
 896              		.loc 1 268 16 is_stmt 0 discriminator 3 view .LVU205
 897 025e 53EC192B 		vmov	r2, r3, d9
 898 0262 51EC180B 		vmov	r0, r1, d8
 899 0266 FFF7FEFF 		bl	__aeabi_dmul
 900              	.LVL106:
 901 026a 8046     		mov	r8, r0
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 26


 902 026c 8946     		mov	r9, r1
 903              	.LVL107:
 269:Src/main.c    **** 
 904              		.loc 1 269 9 is_stmt 1 discriminator 3 view .LVU206
 269:Src/main.c    **** 
 905              		.loc 1 269 16 is_stmt 0 discriminator 3 view .LVU207
 906 026e 0246     		mov	r2, r0
 907 0270 0B46     		mov	r3, r1
 908 0272 3046     		mov	r0, r6
 909 0274 3946     		mov	r1, r7
 910 0276 FFF7FEFF 		bl	__aeabi_ddiv
 911              	.LVL108:
 271:Src/main.c    ****         debug_printf(log_buffer);
 912              		.loc 1 271 9 is_stmt 1 discriminator 3 view .LVU208
 913 027a 1A4C     		ldr	r4, .L37+20
 914 027c CDE90AAB 		strd	r10, [sp, #40]
 915 0280 CDE90801 		strd	r0, [sp, #32]
 916 0284 CDE90689 		strd	r8, [sp, #24]
 917 0288 CDE90467 		strd	r6, [sp, #16]
 918 028c 8DED029B 		vstr.64	d9, [sp, #8]
 919 0290 8DED008B 		vstr.64	d8, [sp]
 920 0294 2A46     		mov	r2, r5
 921 0296 1C49     		ldr	r1, .L37+56
 922 0298 2046     		mov	r0, r4
 923              	.LVL109:
 271:Src/main.c    ****         debug_printf(log_buffer);
 924              		.loc 1 271 9 is_stmt 0 discriminator 3 view .LVU209
 925 029a FFF7FEFF 		bl	sprintf
 926              	.LVL110:
 272:Src/main.c    ****       }
 927              		.loc 1 272 9 is_stmt 1 discriminator 3 view .LVU210
 928 029e 2046     		mov	r0, r4
 929 02a0 FFF7FEFF 		bl	debug_printf
 930              	.LVL111:
 931              	.LBE9:
 250:Src/main.c    ****       {
 932              		.loc 1 250 31 is_stmt 0 discriminator 3 view .LVU211
 933 02a4 0135     		adds	r5, r5, #1
 934              	.LVL112:
 935              	.L33:
 250:Src/main.c    ****       {
 936              		.loc 1 250 7 discriminator 1 view .LVU212
 937 02a6 022D     		cmp	r5, #2
 938 02a8 7FF710AF 		ble	.L34
 939              	.LBE8:
 275:Src/main.c    ****       debug_printf(log_buffer);
 940              		.loc 1 275 7 is_stmt 1 view .LVU213
 941 02ac 0D48     		ldr	r0, .L37+20
 942 02ae 174B     		ldr	r3, .L37+60
 943 02b0 1A88     		ldrh	r2, [r3]	@ unaligned
 944 02b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 945 02b4 0280     		strh	r2, [r0]	@ unaligned
 946 02b6 8370     		strb	r3, [r0, #2]
 276:Src/main.c    ****     }
 947              		.loc 1 276 7 view .LVU214
 948 02b8 FFF7FEFF 		bl	debug_printf
 949              	.LVL113:
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 27


 950              	.L32:
 244:Src/main.c    ****   {
 951              		.loc 1 244 3 view .LVU215
 246:Src/main.c    ****     {
 952              		.loc 1 246 5 view .LVU216
 246:Src/main.c    ****     {
 953              		.loc 1 246 9 is_stmt 0 view .LVU217
 954 02bc 144B     		ldr	r3, .L37+64
 955 02be 93F90030 		ldrsb	r3, [r3]
 246:Src/main.c    ****     {
 956              		.loc 1 246 8 view .LVU218
 957 02c2 002B     		cmp	r3, #0
 958 02c4 FAD0     		beq	.L32
 248:Src/main.c    **** 
 959              		.loc 1 248 7 is_stmt 1 view .LVU219
 248:Src/main.c    **** 
 960              		.loc 1 248 22 is_stmt 0 view .LVU220
 961 02c6 0023     		movs	r3, #0
 962 02c8 114A     		ldr	r2, .L37+64
 963 02ca 1370     		strb	r3, [r2]
 250:Src/main.c    ****       {
 964              		.loc 1 250 7 is_stmt 1 view .LVU221
 965              	.LBB10:
 250:Src/main.c    ****       {
 966              		.loc 1 250 12 view .LVU222
 967              	.LVL114:
 250:Src/main.c    ****       {
 968              		.loc 1 250 12 is_stmt 0 view .LVU223
 969 02cc 1D46     		mov	r5, r3
 250:Src/main.c    ****       {
 970              		.loc 1 250 7 view .LVU224
 971 02ce EAE7     		b	.L33
 972              	.L38:
 973              		.align	3
 974              	.L37:
 975 02d0 66666666 		.word	1717986918
 976 02d4 66664A3F 		.word	1061840486
 977 02d8 00000000 		.word	.LANCHOR3
 978 02dc 00000000 		.word	.LANCHOR4
 979 02e0 00000000 		.word	hopamp2
 980 02e4 00000000 		.word	log_buffer
 981 02e8 00000000 		.word	.LC1
 982 02ec 00000000 		.word	.LANCHOR5
 983 02f0 00000000 		.word	.LANCHOR6
 984 02f4 00000000 		.word	.LANCHOR7
 985 02f8 20000000 		.word	.LC2
 986 02fc 54000000 		.word	.LC3
 987 0300 00000000 		.word	.LANCHOR1
 988 0304 0000F03F 		.word	1072693248
 989 0308 6C000000 		.word	.LC4
 990 030c 90000000 		.word	.LC5
 991 0310 00000000 		.word	.LANCHOR2
 992              	.LBE10:
 993              		.cfi_endproc
 994              	.LFE127:
 996              		.global	freqBand
 997              		.global	nodeID
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 28


 998              		.global	networkID
 999              		.global	ICAL
 1000              		.global	VCAL
 1001              		.global	readings_ready
 1002              		.comm	log_buffer,100,4
 1003              		.comm	adc2_dma_buff,12000,4
 1004              		.comm	adc1_dma_buff,12000,4
 1005              		.section	.bss.channels,"aw",%nobits
 1006              		.align	3
 1007              		.set	.LANCHOR0,. + 0
 1010              	channels:
 1011 0000 00000000 		.space	168
 1011      00000000 
 1011      00000000 
 1011      00000000 
 1011      00000000 
 1012              		.section	.bss.channels_copy,"aw",%nobits
 1013              		.align	3
 1014              		.set	.LANCHOR1,. + 0
 1017              	channels_copy:
 1018 0000 00000000 		.space	168
 1018      00000000 
 1018      00000000 
 1018      00000000 
 1018      00000000 
 1019              		.section	.bss.readings_ready,"aw",%nobits
 1020              		.set	.LANCHOR2,. + 0
 1023              	readings_ready:
 1024 0000 00       		.space	1
 1025              		.section	.data.ICAL,"aw"
 1026              		.align	3
 1027              		.set	.LANCHOR4,. + 0
 1030              	ICAL:
 1031 0000 00000000 		.word	0
 1032 0004 00003440 		.word	1077149696
 1033              		.section	.data.VCAL,"aw"
 1034              		.align	3
 1035              		.set	.LANCHOR3,. + 0
 1038              	VCAL:
 1039 0000 EC51B81E 		.word	515396076
 1040 0004 85CF7040 		.word	1081134981
 1041              		.section	.data.freqBand,"aw"
 1042              		.align	1
 1043              		.set	.LANCHOR7,. + 0
 1046              	freqBand:
 1047 0000 B101     		.short	433
 1048              		.section	.data.networkID,"aw"
 1049              		.align	1
 1050              		.set	.LANCHOR5,. + 0
 1053              	networkID:
 1054 0000 D200     		.short	210
 1055              		.section	.data.nodeID,"aw"
 1056              		.set	.LANCHOR6,. + 0
 1059              	nodeID:
 1060 0000 01       		.byte	1
 1061              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1062              		.align	2
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 29


 1063              	.LC0:
 1064 0000 5372632F 		.ascii	"Src/main.c\000"
 1064      6D61696E 
 1064      2E6300
 1065              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1066              		.align	2
 1067              	.LC1:
 1068 0000 43480956 		.ascii	"CH\011Vrms\011Irms\011RP\011AP\011PF\011Count\015\012"
 1068      726D7309 
 1068      49726D73 
 1068      09525009 
 1068      41500950 
 1069 001d 00       		.ascii	"\000"
 1070 001e 0000     		.space	2
 1071              	.LC2:
 1072 0020 52464D36 		.ascii	"RFM69 Initialized. Freq %dMHz. Node %d. Group %d.\015"
 1072      3920496E 
 1072      69746961 
 1072      6C697A65 
 1072      642E2046 
 1073 0052 0A00     		.ascii	"\012\000"
 1074              	.LC3:
 1075 0054 52464D36 		.ascii	"RFM69 not connected.\015\012\000"
 1075      39206E6F 
 1075      7420636F 
 1075      6E6E6563 
 1075      7465642E 
 1076 006b 00       		.space	1
 1077              	.LC4:
 1078 006c 43483A25 		.ascii	"CH:%d\011%.2f\011%.3f\011%.1f\011%.1f\011%.3f\011%d"
 1078      6409252E 
 1078      32660925 
 1078      2E336609 
 1078      252E3166 
 1079 008d 0D0A00   		.ascii	"\015\012\000"
 1080              	.LC5:
 1081 0090 0D0A00   		.ascii	"\015\012\000"
 1082              		.text
 1083              	.Letext0:
 1084              		.file 2 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_
 1085              		.file 3 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1086              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1087              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1088              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1089              		.file 7 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/std
 1090              		.file 8 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 1091              		.file 9 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 1092              		.file 10 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 1093              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1094              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1095              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1096              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1097              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1098              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1099              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1100              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_opamp.h"
 1101              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 30


 1102              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1103              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1104              		.file 22 "Inc/adc.h"
 1105              		.file 23 "Inc/opamp.h"
 1106              		.file 24 "Inc/spi.h"
 1107              		.file 25 "Inc/tim.h"
 1108              		.file 26 "Inc/usart.h"
 1109              		.file 27 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/math.h"
 1110              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1111              		.file 29 "/usr/local/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdio.h"
 1112              		.file 30 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1113              		.file 31 "Inc/gpio.h"
 1114              		.file 32 "Inc/dma.h"
 1115              		.file 33 "Inc/RFM69_ext.h"
 1116              		.file 34 "Inc/RFM69.h"
 1117              		.file 35 "<built-in>"
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:18     .text.process_frame:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:26     .text.process_frame:0000000000000000 process_frame
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:309    .text.process_frame:0000000000000184 $d
                            *COM*:0000000000002ee0 adc1_dma_buff
                            *COM*:0000000000002ee0 adc2_dma_buff
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:319    .text._Error_Handler:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:326    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:343    .text.SystemClock_Config:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:350    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:494    .text.SystemClock_Config:00000000000000a0 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:506    .text.main:0000000000000000 $t
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:513    .text.main:0000000000000000 main
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:975    .text.main:00000000000002d0 $d
                            *COM*:0000000000000064 log_buffer
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1046   .data.freqBand:0000000000000000 freqBand
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1059   .data.nodeID:0000000000000000 nodeID
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1053   .data.networkID:0000000000000000 networkID
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1030   .data.ICAL:0000000000000000 ICAL
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1038   .data.VCAL:0000000000000000 VCAL
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1023   .bss.readings_ready:0000000000000000 readings_ready
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1006   .bss.channels:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1010   .bss.channels:0000000000000000 channels
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1013   .bss.channels_copy:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1017   .bss.channels_copy:0000000000000000 channels_copy
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1024   .bss.readings_ready:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1026   .data.ICAL:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1034   .data.VCAL:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1042   .data.freqBand:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1049   .data.networkID:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1062   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s:1066   .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_l2d
__aeabi_ul2d
__aeabi_ddiv
__aeabi_d2ulz
__aeabi_dsub
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_ADC1_Init
MX_ADC2_Init
MX_TIM8_Init
ARM GAS  /var/folders/_1/sgnj6dm57r56n1x62bwb5w5h0000gn/T//ccic0Ba0.s 			page 32


MX_OPAMP2_Init
MX_SPI2_Init
HAL_OPAMP_Start
debug_printf
start_ADCs
HAL_Delay
RFM69_RST
RFM69_initialize
sprintf
sqrt
hopamp2
