ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_ADC1_Init
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	MX_ADC1_Init:
  28              	.LFB297:
  29              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 2


  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** 
  48:Src/adc.c     **** #include "stm32f3xx_ll_adc.h"
  49:Src/adc.c     **** #include "power.h"
  50:Src/adc.c     **** #include "tim.h"
  51:Src/adc.c     **** #include "usart.h"
  52:Src/adc.c     **** 
  53:Src/adc.c     **** //
  54:Src/adc.c     **** // Tells us which ISR we're interested in, i.e. which is coming in late.
  55:Src/adc.c     **** // 3 for ADC4 (Voltage), 0-2 for any of the others (which one doesn't matter)
  56:Src/adc.c     **** //
  57:Src/adc.c     **** static int isr_index;
  58:Src/adc.c     **** 
  59:Src/adc.c     **** //
  60:Src/adc.c     **** // The DMA controller is constantly writing to this buffer so only read half of it when
  61:Src/adc.c     **** // you know the DMA controller is busy working in the other half (see callback routines
  62:Src/adc.c     **** // below).
  63:Src/adc.c     **** //
  64:Src/adc.c     **** static volatile uint16_t adc_dma_buff[MAX_ADC][ADC_DMA_BUFFSIZE];
  65:Src/adc.c     **** 
  66:Src/adc.c     **** /* USER CODE END 0 */
  67:Src/adc.c     **** 
  68:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  69:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  70:Src/adc.c     **** ADC_HandleTypeDef hadc3;
  71:Src/adc.c     **** ADC_HandleTypeDef hadc4;
  72:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  73:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
  74:Src/adc.c     **** DMA_HandleTypeDef hdma_adc3;
  75:Src/adc.c     **** DMA_HandleTypeDef hdma_adc4;
  76:Src/adc.c     **** 
  77:Src/adc.c     **** /* ADC1 init function */
  78:Src/adc.c     **** void MX_ADC1_Init(void)
  79:Src/adc.c     **** {
  30              		.loc 1 79 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  34              		.loc 1 80 3 view .LVU1
  81:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 3


  35              		.loc 1 81 3 view .LVU2
  82:Src/adc.c     **** 
  83:Src/adc.c     ****     /**Common config 
  84:Src/adc.c     ****     */
  85:Src/adc.c     ****   hadc1.Instance = ADC1;
  36              		.loc 1 85 3 view .LVU3
  79:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  37              		.loc 1 79 1 is_stmt 0 view .LVU4
  38 0000 30B5     		push	{r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 12
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 85 18 view .LVU5
  45 0002 4F4B     		ldr	r3, .L49
  46 0004 4FF0A044 		mov	r4, #1342177280
  86:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  47              		.loc 1 86 29 view .LVU6
  48 0008 4FF40030 		mov	r0, #131072
  87:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  88:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  89:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  90:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  91:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
  49              		.loc 1 91 35 view .LVU7
  50 000c 4FF40062 		mov	r2, #2048
  92:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
  51              		.loc 1 92 31 view .LVU8
  52 0010 4FF40071 		mov	r1, #512
  79:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  53              		.loc 1 79 1 view .LVU9
  54 0014 8BB0     		sub	sp, sp, #44
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 56
  93:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  94:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 7;
  57              		.loc 1 94 30 view .LVU10
  58 0016 0725     		movs	r5, #7
  85:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  59              		.loc 1 85 18 view .LVU11
  60 0018 1C60     		str	r4, [r3]
  86:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  61              		.loc 1 86 3 is_stmt 1 view .LVU12
  86:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  62              		.loc 1 86 29 is_stmt 0 view .LVU13
  63 001a 5860     		str	r0, [r3, #4]
  87:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  64              		.loc 1 87 3 is_stmt 1 view .LVU14
  95:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  96:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  65              		.loc 1 96 27 is_stmt 0 view .LVU15
  66 001c 0824     		movs	r4, #8
  91:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
  67              		.loc 1 91 35 view .LVU16
  68 001e 1A63     		str	r2, [r3, #48]
  92:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 4


  69              		.loc 1 92 31 view .LVU17
  70 0020 D962     		str	r1, [r3, #44]
  87:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  71              		.loc 1 87 25 view .LVU18
  72 0022 0022     		movs	r2, #0
  88:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  73              		.loc 1 88 27 view .LVU19
  74 0024 0121     		movs	r1, #1
  97:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  98:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  99:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  75              		.loc 1 99 7 view .LVU20
  76 0026 1846     		mov	r0, r3
  94:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  77              		.loc 1 94 30 view .LVU21
  78 0028 1D62     		str	r5, [r3, #32]
  96:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  79              		.loc 1 96 27 view .LVU22
  80 002a 5C61     		str	r4, [r3, #20]
  87:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  81              		.loc 1 87 25 view .LVU23
  82 002c 9A60     		str	r2, [r3, #8]
  88:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  83              		.loc 1 88 3 is_stmt 1 view .LVU24
  90:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
  84              		.loc 1 90 36 is_stmt 0 view .LVU25
  85 002e 5A62     		str	r2, [r3, #36]
  93:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 7;
  86              		.loc 1 93 24 view .LVU26
  87 0030 DA60     		str	r2, [r3, #12]
  97:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  88              		.loc 1 97 31 view .LVU27
  89 0032 9A61     		str	r2, [r3, #24]
  98:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  90              		.loc 1 98 22 view .LVU28
  91 0034 9A63     		str	r2, [r3, #56]
  88:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  92              		.loc 1 88 27 view .LVU29
  93 0036 1961     		str	r1, [r3, #16]
  89:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  94              		.loc 1 89 3 is_stmt 1 view .LVU30
  89:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  95              		.loc 1 89 33 is_stmt 0 view .LVU31
  96 0038 D961     		str	r1, [r3, #28]
  90:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
  97              		.loc 1 90 3 is_stmt 1 view .LVU32
  91:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
  98              		.loc 1 91 3 view .LVU33
  92:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  99              		.loc 1 92 3 view .LVU34
  93:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 7;
 100              		.loc 1 93 3 view .LVU35
  94:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 101              		.loc 1 94 3 view .LVU36
  95:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 102              		.loc 1 95 3 view .LVU37
  95:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 5


 103              		.loc 1 95 36 is_stmt 0 view .LVU38
 104 003a 5963     		str	r1, [r3, #52]
  96:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 105              		.loc 1 96 3 is_stmt 1 view .LVU39
  97:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 106              		.loc 1 97 3 view .LVU40
  98:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 107              		.loc 1 98 3 view .LVU41
 108              		.loc 1 99 3 view .LVU42
 109              		.loc 1 99 7 is_stmt 0 view .LVU43
 110 003c FFF7FEFF 		bl	HAL_ADC_Init
 111              	.LVL0:
 112              		.loc 1 99 6 view .LVU44
 113 0040 0028     		cmp	r0, #0
 114 0042 4FD1     		bne	.L40
 115              	.L2:
 100:Src/adc.c     ****   {
 101:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 102:Src/adc.c     ****   }
 103:Src/adc.c     **** 
 104:Src/adc.c     ****     /**Configure the ADC multi-mode 
 105:Src/adc.c     ****     */
 106:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 116              		.loc 1 106 3 is_stmt 1 view .LVU45
 117              		.loc 1 106 18 is_stmt 0 view .LVU46
 118 0044 0023     		movs	r3, #0
 107:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 119              		.loc 1 107 7 view .LVU47
 120 0046 01A9     		add	r1, sp, #4
 121 0048 3D48     		ldr	r0, .L49
 106:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 122              		.loc 1 106 18 view .LVU48
 123 004a 0193     		str	r3, [sp, #4]
 124              		.loc 1 107 3 is_stmt 1 view .LVU49
 125              		.loc 1 107 7 is_stmt 0 view .LVU50
 126 004c FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 127              	.LVL1:
 128              		.loc 1 107 6 view .LVU51
 129 0050 0028     		cmp	r0, #0
 130 0052 70D1     		bne	.L41
 131              	.L3:
 108:Src/adc.c     ****   {
 109:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 110:Src/adc.c     ****   }
 111:Src/adc.c     **** 
 112:Src/adc.c     ****     /**Configure Regular Channel 
 113:Src/adc.c     ****     */
 114:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 132              		.loc 1 114 3 is_stmt 1 view .LVU52
 115:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 116:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 133              		.loc 1 116 22 is_stmt 0 view .LVU53
 134 0054 0023     		movs	r3, #0
 114:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 135              		.loc 1 114 19 view .LVU54
 136 0056 0122     		movs	r2, #1
 117:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 6


 137              		.loc 1 117 24 view .LVU55
 138 0058 0724     		movs	r4, #7
 118:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 119:Src/adc.c     ****   sConfig.Offset = 0;
 120:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 139              		.loc 1 120 7 view .LVU56
 140 005a 04A9     		add	r1, sp, #16
 141 005c 3848     		ldr	r0, .L49
 119:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 142              		.loc 1 119 18 view .LVU57
 143 005e 0993     		str	r3, [sp, #36]
 115:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 144              		.loc 1 115 16 view .LVU58
 145 0060 CDE90422 		strd	r2, r2, [sp, #16]
 116:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 146              		.loc 1 116 3 is_stmt 1 view .LVU59
 118:Src/adc.c     ****   sConfig.Offset = 0;
 147              		.loc 1 118 24 is_stmt 0 view .LVU60
 148 0064 CDE90733 		strd	r3, r3, [sp, #28]
 117:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 149              		.loc 1 117 24 view .LVU61
 150 0068 0694     		str	r4, [sp, #24]
 118:Src/adc.c     ****   sConfig.Offset = 0;
 151              		.loc 1 118 3 is_stmt 1 view .LVU62
 119:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 152              		.loc 1 119 3 view .LVU63
 153              		.loc 1 120 3 view .LVU64
 154              		.loc 1 120 7 is_stmt 0 view .LVU65
 155 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 156              	.LVL2:
 157              		.loc 1 120 6 view .LVU66
 158 006e 0028     		cmp	r0, #0
 159 0070 5CD1     		bne	.L42
 160              	.L4:
 121:Src/adc.c     ****   {
 122:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 123:Src/adc.c     ****   }
 124:Src/adc.c     **** 
 125:Src/adc.c     ****     /**Configure Regular Channel 
 126:Src/adc.c     ****     */
 127:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 161              		.loc 1 127 3 is_stmt 1 view .LVU67
 162              		.loc 1 127 19 is_stmt 0 view .LVU68
 163 0072 0223     		movs	r3, #2
 128:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 129:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 164              		.loc 1 129 7 view .LVU69
 165 0074 04A9     		add	r1, sp, #16
 166 0076 3248     		ldr	r0, .L49
 128:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 167              		.loc 1 128 16 view .LVU70
 168 0078 CDE90433 		strd	r3, r3, [sp, #16]
 169              		.loc 1 129 3 is_stmt 1 view .LVU71
 170              		.loc 1 129 7 is_stmt 0 view .LVU72
 171 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 172              	.LVL3:
 173              		.loc 1 129 6 view .LVU73
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 7


 174 0080 0028     		cmp	r0, #0
 175 0082 4ED1     		bne	.L43
 176              	.L5:
 130:Src/adc.c     ****   {
 131:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 132:Src/adc.c     ****   }
 133:Src/adc.c     **** 
 134:Src/adc.c     ****     /**Configure Regular Channel 
 135:Src/adc.c     ****     */
 136:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_6;
 177              		.loc 1 136 3 is_stmt 1 view .LVU74
 178              		.loc 1 136 19 is_stmt 0 view .LVU75
 179 0084 0622     		movs	r2, #6
 137:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 180              		.loc 1 137 16 view .LVU76
 181 0086 0323     		movs	r3, #3
 138:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 182              		.loc 1 138 7 view .LVU77
 183 0088 04A9     		add	r1, sp, #16
 184 008a 2D48     		ldr	r0, .L49
 137:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 185              		.loc 1 137 16 view .LVU78
 186 008c CDE90423 		strd	r2, r3, [sp, #16]
 187              		.loc 1 138 3 is_stmt 1 view .LVU79
 188              		.loc 1 138 7 is_stmt 0 view .LVU80
 189 0090 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 190              	.LVL4:
 191              		.loc 1 138 6 view .LVU81
 192 0094 0028     		cmp	r0, #0
 193 0096 3FD1     		bne	.L44
 194              	.L6:
 139:Src/adc.c     ****   {
 140:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 141:Src/adc.c     ****   }
 142:Src/adc.c     **** 
 143:Src/adc.c     ****     /**Configure Regular Channel 
 144:Src/adc.c     ****     */
 145:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_8;
 195              		.loc 1 145 3 is_stmt 1 view .LVU82
 196              		.loc 1 145 19 is_stmt 0 view .LVU83
 197 0098 0822     		movs	r2, #8
 146:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 198              		.loc 1 146 16 view .LVU84
 199 009a 0423     		movs	r3, #4
 147:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 200              		.loc 1 147 7 view .LVU85
 201 009c 04A9     		add	r1, sp, #16
 202 009e 2848     		ldr	r0, .L49
 146:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 203              		.loc 1 146 16 view .LVU86
 204 00a0 CDE90423 		strd	r2, r3, [sp, #16]
 205              		.loc 1 147 3 is_stmt 1 view .LVU87
 206              		.loc 1 147 7 is_stmt 0 view .LVU88
 207 00a4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 208              	.LVL5:
 209              		.loc 1 147 6 view .LVU89
 210 00a8 88BB     		cbnz	r0, .L45
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 8


 211              	.L7:
 148:Src/adc.c     ****   {
 149:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 150:Src/adc.c     ****   }
 151:Src/adc.c     **** 
 152:Src/adc.c     ****     /**Configure Regular Channel 
 153:Src/adc.c     ****     */
 154:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_9;
 212              		.loc 1 154 3 is_stmt 1 view .LVU90
 213              		.loc 1 154 19 is_stmt 0 view .LVU91
 214 00aa 0922     		movs	r2, #9
 155:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 215              		.loc 1 155 16 view .LVU92
 216 00ac 0523     		movs	r3, #5
 156:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 217              		.loc 1 156 7 view .LVU93
 218 00ae 04A9     		add	r1, sp, #16
 219 00b0 2348     		ldr	r0, .L49
 155:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 220              		.loc 1 155 16 view .LVU94
 221 00b2 CDE90423 		strd	r2, r3, [sp, #16]
 222              		.loc 1 156 3 is_stmt 1 view .LVU95
 223              		.loc 1 156 7 is_stmt 0 view .LVU96
 224 00b6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 225              	.LVL6:
 226              		.loc 1 156 6 view .LVU97
 227 00ba 18BB     		cbnz	r0, .L46
 228              	.L8:
 157:Src/adc.c     ****   {
 158:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 159:Src/adc.c     ****   }
 160:Src/adc.c     **** 
 161:Src/adc.c     ****     /**Configure Regular Channel 
 162:Src/adc.c     ****     */
 163:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_14;
 229              		.loc 1 163 3 is_stmt 1 view .LVU98
 230              		.loc 1 163 19 is_stmt 0 view .LVU99
 231 00bc 0E22     		movs	r2, #14
 164:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 232              		.loc 1 164 16 view .LVU100
 233 00be 0623     		movs	r3, #6
 165:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 234              		.loc 1 165 7 view .LVU101
 235 00c0 04A9     		add	r1, sp, #16
 236 00c2 1F48     		ldr	r0, .L49
 164:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 237              		.loc 1 164 16 view .LVU102
 238 00c4 CDE90423 		strd	r2, r3, [sp, #16]
 239              		.loc 1 165 3 is_stmt 1 view .LVU103
 240              		.loc 1 165 7 is_stmt 0 view .LVU104
 241 00c8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 242              	.LVL7:
 243              		.loc 1 165 6 view .LVU105
 244 00cc A8B9     		cbnz	r0, .L47
 245              	.L9:
 166:Src/adc.c     ****   {
 167:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 9


 168:Src/adc.c     ****   }
 169:Src/adc.c     **** 
 170:Src/adc.c     ****     /**Configure Regular Channel 
 171:Src/adc.c     ****     */
 172:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 246              		.loc 1 172 3 is_stmt 1 view .LVU106
 247              		.loc 1 172 19 is_stmt 0 view .LVU107
 248 00ce 1022     		movs	r2, #16
 173:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 249              		.loc 1 173 16 view .LVU108
 250 00d0 0723     		movs	r3, #7
 174:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 251              		.loc 1 174 7 view .LVU109
 252 00d2 04A9     		add	r1, sp, #16
 253 00d4 1A48     		ldr	r0, .L49
 173:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 254              		.loc 1 173 16 view .LVU110
 255 00d6 CDE90423 		strd	r2, r3, [sp, #16]
 256              		.loc 1 174 3 is_stmt 1 view .LVU111
 257              		.loc 1 174 7 is_stmt 0 view .LVU112
 258 00da FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 259              	.LVL8:
 260              		.loc 1 174 6 view .LVU113
 261 00de 30B9     		cbnz	r0, .L48
 175:Src/adc.c     ****   {
 176:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 177:Src/adc.c     ****   }
 178:Src/adc.c     **** 
 179:Src/adc.c     **** }
 262              		.loc 1 179 1 view .LVU114
 263 00e0 0BB0     		add	sp, sp, #44
 264              	.LCFI2:
 265              		.cfi_remember_state
 266              		.cfi_def_cfa_offset 12
 267              		@ sp needed
 268 00e2 30BD     		pop	{r4, r5, pc}
 269              	.L40:
 270              	.LCFI3:
 271              		.cfi_restore_state
 101:Src/adc.c     ****   }
 272              		.loc 1 101 5 is_stmt 1 view .LVU115
 273 00e4 6521     		movs	r1, #101
 274 00e6 1748     		ldr	r0, .L49+4
 275 00e8 FFF7FEFF 		bl	_Error_Handler
 276              	.LVL9:
 277 00ec AAE7     		b	.L2
 278              	.L48:
 176:Src/adc.c     ****   }
 279              		.loc 1 176 5 view .LVU116
 280 00ee B021     		movs	r1, #176
 281 00f0 1448     		ldr	r0, .L49+4
 282 00f2 FFF7FEFF 		bl	_Error_Handler
 283              	.LVL10:
 284              		.loc 1 179 1 is_stmt 0 view .LVU117
 285 00f6 0BB0     		add	sp, sp, #44
 286              	.LCFI4:
 287              		.cfi_remember_state
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 10


 288              		.cfi_def_cfa_offset 12
 289              		@ sp needed
 290 00f8 30BD     		pop	{r4, r5, pc}
 291              	.L47:
 292              	.LCFI5:
 293              		.cfi_restore_state
 167:Src/adc.c     ****   }
 294              		.loc 1 167 5 is_stmt 1 view .LVU118
 295 00fa A721     		movs	r1, #167
 296 00fc 1148     		ldr	r0, .L49+4
 297 00fe FFF7FEFF 		bl	_Error_Handler
 298              	.LVL11:
 299 0102 E4E7     		b	.L9
 300              	.L46:
 158:Src/adc.c     ****   }
 301              		.loc 1 158 5 view .LVU119
 302 0104 9E21     		movs	r1, #158
 303 0106 0F48     		ldr	r0, .L49+4
 304 0108 FFF7FEFF 		bl	_Error_Handler
 305              	.LVL12:
 306 010c D6E7     		b	.L8
 307              	.L45:
 149:Src/adc.c     ****   }
 308              		.loc 1 149 5 view .LVU120
 309 010e 9521     		movs	r1, #149
 310 0110 0C48     		ldr	r0, .L49+4
 311 0112 FFF7FEFF 		bl	_Error_Handler
 312              	.LVL13:
 313 0116 C8E7     		b	.L7
 314              	.L44:
 140:Src/adc.c     ****   }
 315              		.loc 1 140 5 view .LVU121
 316 0118 8C21     		movs	r1, #140
 317 011a 0A48     		ldr	r0, .L49+4
 318 011c FFF7FEFF 		bl	_Error_Handler
 319              	.LVL14:
 320 0120 BAE7     		b	.L6
 321              	.L43:
 131:Src/adc.c     ****   }
 322              		.loc 1 131 5 view .LVU122
 323 0122 8321     		movs	r1, #131
 324 0124 0748     		ldr	r0, .L49+4
 325 0126 FFF7FEFF 		bl	_Error_Handler
 326              	.LVL15:
 327 012a ABE7     		b	.L5
 328              	.L42:
 122:Src/adc.c     ****   }
 329              		.loc 1 122 5 view .LVU123
 330 012c 7A21     		movs	r1, #122
 331 012e 0548     		ldr	r0, .L49+4
 332 0130 FFF7FEFF 		bl	_Error_Handler
 333              	.LVL16:
 334 0134 9DE7     		b	.L4
 335              	.L41:
 109:Src/adc.c     ****   }
 336              		.loc 1 109 5 view .LVU124
 337 0136 6D21     		movs	r1, #109
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 11


 338 0138 0248     		ldr	r0, .L49+4
 339 013a FFF7FEFF 		bl	_Error_Handler
 340              	.LVL17:
 341 013e 89E7     		b	.L3
 342              	.L50:
 343              		.align	2
 344              	.L49:
 345 0140 00000000 		.word	hadc1
 346 0144 00000000 		.word	.LC0
 347              		.cfi_endproc
 348              	.LFE297:
 350              		.section	.text.MX_ADC2_Init,"ax",%progbits
 351              		.align	1
 352              		.p2align 2,,3
 353              		.global	MX_ADC2_Init
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	MX_ADC2_Init:
 360              	.LFB298:
 180:Src/adc.c     **** /* ADC2 init function */
 181:Src/adc.c     **** void MX_ADC2_Init(void)
 182:Src/adc.c     **** {
 361              		.loc 1 182 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 24
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 183:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 365              		.loc 1 183 3 view .LVU126
 184:Src/adc.c     **** 
 185:Src/adc.c     ****     /**Common config 
 186:Src/adc.c     ****     */
 187:Src/adc.c     ****   hadc2.Instance = ADC2;
 366              		.loc 1 187 3 view .LVU127
 182:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 367              		.loc 1 182 1 is_stmt 0 view .LVU128
 368 0000 30B5     		push	{r4, r5, lr}
 369              	.LCFI6:
 370              		.cfi_def_cfa_offset 12
 371              		.cfi_offset 4, -12
 372              		.cfi_offset 5, -8
 373              		.cfi_offset 14, -4
 374              		.loc 1 187 18 view .LVU129
 375 0002 494B     		ldr	r3, .L93
 376 0004 494A     		ldr	r2, .L93+4
 377 0006 1A60     		str	r2, [r3]
 188:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 378              		.loc 1 188 3 is_stmt 1 view .LVU130
 379              		.loc 1 188 29 is_stmt 0 view .LVU131
 380 0008 4FF40030 		mov	r0, #131072
 189:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 190:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 191:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 192:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 193:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 381              		.loc 1 193 35 view .LVU132
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 12


 382 000c 4FF40062 		mov	r2, #2048
 194:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 383              		.loc 1 194 31 view .LVU133
 384 0010 4FF40071 		mov	r1, #512
 182:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 385              		.loc 1 182 1 view .LVU134
 386 0014 87B0     		sub	sp, sp, #28
 387              	.LCFI7:
 388              		.cfi_def_cfa_offset 40
 195:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 196:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 7;
 389              		.loc 1 196 30 view .LVU135
 390 0016 0725     		movs	r5, #7
 197:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 198:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 391              		.loc 1 198 27 view .LVU136
 392 0018 0824     		movs	r4, #8
 188:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 393              		.loc 1 188 29 view .LVU137
 394 001a 5860     		str	r0, [r3, #4]
 189:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 395              		.loc 1 189 3 is_stmt 1 view .LVU138
 193:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 396              		.loc 1 193 35 is_stmt 0 view .LVU139
 397 001c 1A63     		str	r2, [r3, #48]
 194:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 398              		.loc 1 194 31 view .LVU140
 399 001e D962     		str	r1, [r3, #44]
 189:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 400              		.loc 1 189 25 view .LVU141
 401 0020 0022     		movs	r2, #0
 190:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 402              		.loc 1 190 27 view .LVU142
 403 0022 0121     		movs	r1, #1
 199:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 200:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 201:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 404              		.loc 1 201 7 view .LVU143
 405 0024 1846     		mov	r0, r3
 196:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 406              		.loc 1 196 30 view .LVU144
 407 0026 1D62     		str	r5, [r3, #32]
 198:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 408              		.loc 1 198 27 view .LVU145
 409 0028 5C61     		str	r4, [r3, #20]
 189:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 410              		.loc 1 189 25 view .LVU146
 411 002a 9A60     		str	r2, [r3, #8]
 190:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 412              		.loc 1 190 3 is_stmt 1 view .LVU147
 192:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 413              		.loc 1 192 36 is_stmt 0 view .LVU148
 414 002c 5A62     		str	r2, [r3, #36]
 195:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 7;
 415              		.loc 1 195 24 view .LVU149
 416 002e DA60     		str	r2, [r3, #12]
 199:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 13


 417              		.loc 1 199 31 view .LVU150
 418 0030 9A61     		str	r2, [r3, #24]
 200:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 419              		.loc 1 200 22 view .LVU151
 420 0032 9A63     		str	r2, [r3, #56]
 190:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 421              		.loc 1 190 27 view .LVU152
 422 0034 1961     		str	r1, [r3, #16]
 191:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 423              		.loc 1 191 3 is_stmt 1 view .LVU153
 191:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 424              		.loc 1 191 33 is_stmt 0 view .LVU154
 425 0036 D961     		str	r1, [r3, #28]
 192:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 426              		.loc 1 192 3 is_stmt 1 view .LVU155
 193:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 427              		.loc 1 193 3 view .LVU156
 194:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 428              		.loc 1 194 3 view .LVU157
 195:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 7;
 429              		.loc 1 195 3 view .LVU158
 196:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 430              		.loc 1 196 3 view .LVU159
 197:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 431              		.loc 1 197 3 view .LVU160
 197:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 432              		.loc 1 197 36 is_stmt 0 view .LVU161
 433 0038 5963     		str	r1, [r3, #52]
 198:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 434              		.loc 1 198 3 is_stmt 1 view .LVU162
 199:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 435              		.loc 1 199 3 view .LVU163
 200:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 436              		.loc 1 200 3 view .LVU164
 437              		.loc 1 201 3 view .LVU165
 438              		.loc 1 201 7 is_stmt 0 view .LVU166
 439 003a FFF7FEFF 		bl	HAL_ADC_Init
 440              	.LVL18:
 441              		.loc 1 201 6 view .LVU167
 442 003e 0028     		cmp	r0, #0
 443 0040 46D1     		bne	.L85
 444              	.L52:
 202:Src/adc.c     ****   {
 203:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 204:Src/adc.c     ****   }
 205:Src/adc.c     **** 
 206:Src/adc.c     ****     /**Configure Regular Channel 
 207:Src/adc.c     ****     */
 208:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 445              		.loc 1 208 3 is_stmt 1 view .LVU168
 446              		.loc 1 208 19 is_stmt 0 view .LVU169
 447 0042 0320     		movs	r0, #3
 209:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 210:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 448              		.loc 1 210 22 view .LVU170
 449 0044 0023     		movs	r3, #0
 209:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 14


 450              		.loc 1 209 16 view .LVU171
 451 0046 0124     		movs	r4, #1
 211:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 452              		.loc 1 211 24 view .LVU172
 453 0048 0722     		movs	r2, #7
 208:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 454              		.loc 1 208 19 view .LVU173
 455 004a 0090     		str	r0, [sp]
 209:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 456              		.loc 1 209 3 is_stmt 1 view .LVU174
 212:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 213:Src/adc.c     ****   sConfig.Offset = 0;
 214:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 457              		.loc 1 214 7 is_stmt 0 view .LVU175
 458 004c 6946     		mov	r1, sp
 459 004e 3648     		ldr	r0, .L93
 209:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 460              		.loc 1 209 16 view .LVU176
 461 0050 0194     		str	r4, [sp, #4]
 210:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 462              		.loc 1 210 3 is_stmt 1 view .LVU177
 212:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 463              		.loc 1 212 24 is_stmt 0 view .LVU178
 464 0052 CDE90333 		strd	r3, r3, [sp, #12]
 213:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 465              		.loc 1 213 18 view .LVU179
 466 0056 0593     		str	r3, [sp, #20]
 211:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 467              		.loc 1 211 24 view .LVU180
 468 0058 0292     		str	r2, [sp, #8]
 212:Src/adc.c     ****   sConfig.Offset = 0;
 469              		.loc 1 212 3 is_stmt 1 view .LVU181
 213:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 470              		.loc 1 213 3 view .LVU182
 471              		.loc 1 214 3 view .LVU183
 472              		.loc 1 214 7 is_stmt 0 view .LVU184
 473 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 474              	.LVL19:
 475              		.loc 1 214 6 view .LVU185
 476 005e 0028     		cmp	r0, #0
 477 0060 5CD1     		bne	.L86
 478              	.L53:
 215:Src/adc.c     ****   {
 216:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 217:Src/adc.c     ****   }
 218:Src/adc.c     **** 
 219:Src/adc.c     ****     /**Configure Regular Channel 
 220:Src/adc.c     ****     */
 221:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 479              		.loc 1 221 3 is_stmt 1 view .LVU186
 480              		.loc 1 221 19 is_stmt 0 view .LVU187
 481 0062 0122     		movs	r2, #1
 222:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 482              		.loc 1 222 16 view .LVU188
 483 0064 0223     		movs	r3, #2
 223:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 484              		.loc 1 223 7 view .LVU189
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 15


 485 0066 6946     		mov	r1, sp
 486 0068 2F48     		ldr	r0, .L93
 222:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 487              		.loc 1 222 16 view .LVU190
 488 006a CDE90023 		strd	r2, r3, [sp]
 489              		.loc 1 223 3 is_stmt 1 view .LVU191
 490              		.loc 1 223 7 is_stmt 0 view .LVU192
 491 006e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 492              	.LVL20:
 493              		.loc 1 223 6 view .LVU193
 494 0072 0028     		cmp	r0, #0
 495 0074 4DD1     		bne	.L87
 496              	.L54:
 224:Src/adc.c     ****   {
 225:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 226:Src/adc.c     ****   }
 227:Src/adc.c     **** 
 228:Src/adc.c     ****     /**Configure Regular Channel 
 229:Src/adc.c     ****     */
 230:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 497              		.loc 1 230 3 is_stmt 1 view .LVU194
 498              		.loc 1 230 19 is_stmt 0 view .LVU195
 499 0076 0323     		movs	r3, #3
 231:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 232:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 500              		.loc 1 232 7 view .LVU196
 501 0078 6946     		mov	r1, sp
 502 007a 2B48     		ldr	r0, .L93
 231:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 503              		.loc 1 231 16 view .LVU197
 504 007c CDE90033 		strd	r3, r3, [sp]
 505              		.loc 1 232 3 is_stmt 1 view .LVU198
 506              		.loc 1 232 7 is_stmt 0 view .LVU199
 507 0080 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 508              	.LVL21:
 509              		.loc 1 232 6 view .LVU200
 510 0084 0028     		cmp	r0, #0
 511 0086 3FD1     		bne	.L88
 512              	.L55:
 233:Src/adc.c     ****   {
 234:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 235:Src/adc.c     ****   }
 236:Src/adc.c     **** 
 237:Src/adc.c     ****     /**Configure Regular Channel 
 238:Src/adc.c     ****     */
 239:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_5;
 513              		.loc 1 239 3 is_stmt 1 view .LVU201
 514              		.loc 1 239 19 is_stmt 0 view .LVU202
 515 0088 0522     		movs	r2, #5
 240:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 516              		.loc 1 240 16 view .LVU203
 517 008a 0423     		movs	r3, #4
 241:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 518              		.loc 1 241 7 view .LVU204
 519 008c 6946     		mov	r1, sp
 520 008e 2648     		ldr	r0, .L93
 240:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 16


 521              		.loc 1 240 16 view .LVU205
 522 0090 CDE90023 		strd	r2, r3, [sp]
 523              		.loc 1 241 3 is_stmt 1 view .LVU206
 524              		.loc 1 241 7 is_stmt 0 view .LVU207
 525 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 526              	.LVL22:
 527              		.loc 1 241 6 view .LVU208
 528 0098 88BB     		cbnz	r0, .L89
 529              	.L56:
 242:Src/adc.c     ****   {
 243:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 244:Src/adc.c     ****   }
 245:Src/adc.c     **** 
 246:Src/adc.c     ****     /**Configure Regular Channel 
 247:Src/adc.c     ****     */
 248:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_7;
 530              		.loc 1 248 3 is_stmt 1 view .LVU209
 531              		.loc 1 248 19 is_stmt 0 view .LVU210
 532 009a 0722     		movs	r2, #7
 249:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 533              		.loc 1 249 16 view .LVU211
 534 009c 0523     		movs	r3, #5
 250:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 535              		.loc 1 250 7 view .LVU212
 536 009e 6946     		mov	r1, sp
 537 00a0 2148     		ldr	r0, .L93
 249:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 538              		.loc 1 249 16 view .LVU213
 539 00a2 CDE90023 		strd	r2, r3, [sp]
 540              		.loc 1 250 3 is_stmt 1 view .LVU214
 541              		.loc 1 250 7 is_stmt 0 view .LVU215
 542 00a6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 543              	.LVL23:
 544              		.loc 1 250 6 view .LVU216
 545 00aa 18BB     		cbnz	r0, .L90
 546              	.L57:
 251:Src/adc.c     ****   {
 252:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 253:Src/adc.c     ****   }
 254:Src/adc.c     **** 
 255:Src/adc.c     ****     /**Configure Regular Channel 
 256:Src/adc.c     ****     */
 257:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_12;
 547              		.loc 1 257 3 is_stmt 1 view .LVU217
 548              		.loc 1 257 19 is_stmt 0 view .LVU218
 549 00ac 0C22     		movs	r2, #12
 258:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 550              		.loc 1 258 16 view .LVU219
 551 00ae 0623     		movs	r3, #6
 259:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 552              		.loc 1 259 7 view .LVU220
 553 00b0 6946     		mov	r1, sp
 554 00b2 1D48     		ldr	r0, .L93
 258:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 555              		.loc 1 258 16 view .LVU221
 556 00b4 CDE90023 		strd	r2, r3, [sp]
 557              		.loc 1 259 3 is_stmt 1 view .LVU222
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 17


 558              		.loc 1 259 7 is_stmt 0 view .LVU223
 559 00b8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 560              	.LVL24:
 561              		.loc 1 259 6 view .LVU224
 562 00bc A0B9     		cbnz	r0, .L91
 563              	.L58:
 260:Src/adc.c     ****   {
 261:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 262:Src/adc.c     ****   }
 263:Src/adc.c     **** 
 264:Src/adc.c     ****     /**Configure Regular Channel 
 265:Src/adc.c     ****     */
 266:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 564              		.loc 1 266 3 is_stmt 1 view .LVU225
 565              		.loc 1 266 16 is_stmt 0 view .LVU226
 566 00be 0723     		movs	r3, #7
 267:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 567              		.loc 1 267 7 view .LVU227
 568 00c0 6946     		mov	r1, sp
 569 00c2 1948     		ldr	r0, .L93
 266:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 570              		.loc 1 266 16 view .LVU228
 571 00c4 0193     		str	r3, [sp, #4]
 572              		.loc 1 267 3 is_stmt 1 view .LVU229
 573              		.loc 1 267 7 is_stmt 0 view .LVU230
 574 00c6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 575              	.LVL25:
 576              		.loc 1 267 6 view .LVU231
 577 00ca 30B9     		cbnz	r0, .L92
 268:Src/adc.c     ****   {
 269:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 270:Src/adc.c     ****   }
 271:Src/adc.c     **** 
 272:Src/adc.c     **** }
 578              		.loc 1 272 1 view .LVU232
 579 00cc 07B0     		add	sp, sp, #28
 580              	.LCFI8:
 581              		.cfi_remember_state
 582              		.cfi_def_cfa_offset 12
 583              		@ sp needed
 584 00ce 30BD     		pop	{r4, r5, pc}
 585              	.L85:
 586              	.LCFI9:
 587              		.cfi_restore_state
 203:Src/adc.c     ****   }
 588              		.loc 1 203 5 is_stmt 1 view .LVU233
 589 00d0 CB21     		movs	r1, #203
 590 00d2 1748     		ldr	r0, .L93+8
 591 00d4 FFF7FEFF 		bl	_Error_Handler
 592              	.LVL26:
 593 00d8 B3E7     		b	.L52
 594              	.L92:
 269:Src/adc.c     ****   }
 595              		.loc 1 269 5 view .LVU234
 596 00da 40F20D11 		movw	r1, #269
 597 00de 1448     		ldr	r0, .L93+8
 598 00e0 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 18


 599              	.LVL27:
 600              		.loc 1 272 1 is_stmt 0 view .LVU235
 601 00e4 07B0     		add	sp, sp, #28
 602              	.LCFI10:
 603              		.cfi_remember_state
 604              		.cfi_def_cfa_offset 12
 605              		@ sp needed
 606 00e6 30BD     		pop	{r4, r5, pc}
 607              	.L91:
 608              	.LCFI11:
 609              		.cfi_restore_state
 261:Src/adc.c     ****   }
 610              		.loc 1 261 5 is_stmt 1 view .LVU236
 611 00e8 40F20511 		movw	r1, #261
 612 00ec 1048     		ldr	r0, .L93+8
 613 00ee FFF7FEFF 		bl	_Error_Handler
 614              	.LVL28:
 615 00f2 E4E7     		b	.L58
 616              	.L90:
 252:Src/adc.c     ****   }
 617              		.loc 1 252 5 view .LVU237
 618 00f4 FC21     		movs	r1, #252
 619 00f6 0E48     		ldr	r0, .L93+8
 620 00f8 FFF7FEFF 		bl	_Error_Handler
 621              	.LVL29:
 622 00fc D6E7     		b	.L57
 623              	.L89:
 243:Src/adc.c     ****   }
 624              		.loc 1 243 5 view .LVU238
 625 00fe F321     		movs	r1, #243
 626 0100 0B48     		ldr	r0, .L93+8
 627 0102 FFF7FEFF 		bl	_Error_Handler
 628              	.LVL30:
 629 0106 C8E7     		b	.L56
 630              	.L88:
 234:Src/adc.c     ****   }
 631              		.loc 1 234 5 view .LVU239
 632 0108 EA21     		movs	r1, #234
 633 010a 0948     		ldr	r0, .L93+8
 634 010c FFF7FEFF 		bl	_Error_Handler
 635              	.LVL31:
 636 0110 BAE7     		b	.L55
 637              	.L87:
 225:Src/adc.c     ****   }
 638              		.loc 1 225 5 view .LVU240
 639 0112 E121     		movs	r1, #225
 640 0114 0648     		ldr	r0, .L93+8
 641 0116 FFF7FEFF 		bl	_Error_Handler
 642              	.LVL32:
 643 011a ACE7     		b	.L54
 644              	.L86:
 216:Src/adc.c     ****   }
 645              		.loc 1 216 5 view .LVU241
 646 011c D821     		movs	r1, #216
 647 011e 0448     		ldr	r0, .L93+8
 648 0120 FFF7FEFF 		bl	_Error_Handler
 649              	.LVL33:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 19


 650 0124 9DE7     		b	.L53
 651              	.L94:
 652 0126 00BF     		.align	2
 653              	.L93:
 654 0128 00000000 		.word	hadc2
 655 012c 00010050 		.word	1342177536
 656 0130 00000000 		.word	.LC0
 657              		.cfi_endproc
 658              	.LFE298:
 660              		.section	.text.MX_ADC3_Init,"ax",%progbits
 661              		.align	1
 662              		.p2align 2,,3
 663              		.global	MX_ADC3_Init
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	MX_ADC3_Init:
 670              	.LFB299:
 273:Src/adc.c     **** /* ADC3 init function */
 274:Src/adc.c     **** void MX_ADC3_Init(void)
 275:Src/adc.c     **** {
 671              		.loc 1 275 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 40
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
 675              		.loc 1 276 3 view .LVU243
 277:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 676              		.loc 1 277 3 view .LVU244
 278:Src/adc.c     **** 
 279:Src/adc.c     ****     /**Common config 
 280:Src/adc.c     ****     */
 281:Src/adc.c     ****   hadc3.Instance = ADC3;
 677              		.loc 1 281 3 view .LVU245
 275:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
 678              		.loc 1 275 1 is_stmt 0 view .LVU246
 679 0000 30B5     		push	{r4, r5, lr}
 680              	.LCFI12:
 681              		.cfi_def_cfa_offset 12
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 5, -8
 684              		.cfi_offset 14, -4
 685              		.loc 1 281 18 view .LVU247
 686 0002 514B     		ldr	r3, .L142
 687 0004 514A     		ldr	r2, .L142+4
 688 0006 1A60     		str	r2, [r3]
 282:Src/adc.c     ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 689              		.loc 1 282 3 is_stmt 1 view .LVU248
 690              		.loc 1 282 29 is_stmt 0 view .LVU249
 691 0008 4FF40030 		mov	r0, #131072
 283:Src/adc.c     ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 284:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 285:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = ENABLE;
 286:Src/adc.c     ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 287:Src/adc.c     ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 692              		.loc 1 287 35 view .LVU250
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 20


 693 000c 4FF40062 		mov	r2, #2048
 288:Src/adc.c     ****   hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 694              		.loc 1 288 31 view .LVU251
 695 0010 4FF40071 		mov	r1, #512
 275:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
 696              		.loc 1 275 1 view .LVU252
 697 0014 8BB0     		sub	sp, sp, #44
 698              	.LCFI13:
 699              		.cfi_def_cfa_offset 56
 289:Src/adc.c     ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 290:Src/adc.c     ****   hadc3.Init.NbrOfConversion = 7;
 700              		.loc 1 290 30 view .LVU253
 701 0016 0725     		movs	r5, #7
 291:Src/adc.c     ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 292:Src/adc.c     ****   hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 702              		.loc 1 292 27 view .LVU254
 703 0018 0824     		movs	r4, #8
 282:Src/adc.c     ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 704              		.loc 1 282 29 view .LVU255
 705 001a 5860     		str	r0, [r3, #4]
 283:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 706              		.loc 1 283 3 is_stmt 1 view .LVU256
 287:Src/adc.c     ****   hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 707              		.loc 1 287 35 is_stmt 0 view .LVU257
 708 001c 1A63     		str	r2, [r3, #48]
 288:Src/adc.c     ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 709              		.loc 1 288 31 view .LVU258
 710 001e D962     		str	r1, [r3, #44]
 283:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 711              		.loc 1 283 25 view .LVU259
 712 0020 0022     		movs	r2, #0
 284:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = ENABLE;
 713              		.loc 1 284 27 view .LVU260
 714 0022 0121     		movs	r1, #1
 293:Src/adc.c     ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 294:Src/adc.c     ****   hadc3.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 295:Src/adc.c     ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 715              		.loc 1 295 7 view .LVU261
 716 0024 1846     		mov	r0, r3
 290:Src/adc.c     ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 717              		.loc 1 290 30 view .LVU262
 718 0026 1D62     		str	r5, [r3, #32]
 292:Src/adc.c     ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 719              		.loc 1 292 27 view .LVU263
 720 0028 5C61     		str	r4, [r3, #20]
 283:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 721              		.loc 1 283 25 view .LVU264
 722 002a 9A60     		str	r2, [r3, #8]
 284:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = ENABLE;
 723              		.loc 1 284 3 is_stmt 1 view .LVU265
 286:Src/adc.c     ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 724              		.loc 1 286 36 is_stmt 0 view .LVU266
 725 002c 5A62     		str	r2, [r3, #36]
 289:Src/adc.c     ****   hadc3.Init.NbrOfConversion = 7;
 726              		.loc 1 289 24 view .LVU267
 727 002e DA60     		str	r2, [r3, #12]
 293:Src/adc.c     ****   hadc3.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 21


 728              		.loc 1 293 31 view .LVU268
 729 0030 9A61     		str	r2, [r3, #24]
 294:Src/adc.c     ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 730              		.loc 1 294 22 view .LVU269
 731 0032 9A63     		str	r2, [r3, #56]
 284:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = ENABLE;
 732              		.loc 1 284 27 view .LVU270
 733 0034 1961     		str	r1, [r3, #16]
 285:Src/adc.c     ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 734              		.loc 1 285 3 is_stmt 1 view .LVU271
 285:Src/adc.c     ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 735              		.loc 1 285 33 is_stmt 0 view .LVU272
 736 0036 D961     		str	r1, [r3, #28]
 286:Src/adc.c     ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_FALLING;
 737              		.loc 1 286 3 is_stmt 1 view .LVU273
 287:Src/adc.c     ****   hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 738              		.loc 1 287 3 view .LVU274
 288:Src/adc.c     ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 739              		.loc 1 288 3 view .LVU275
 289:Src/adc.c     ****   hadc3.Init.NbrOfConversion = 7;
 740              		.loc 1 289 3 view .LVU276
 290:Src/adc.c     ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 741              		.loc 1 290 3 view .LVU277
 291:Src/adc.c     ****   hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 742              		.loc 1 291 3 view .LVU278
 291:Src/adc.c     ****   hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 743              		.loc 1 291 36 is_stmt 0 view .LVU279
 744 0038 5963     		str	r1, [r3, #52]
 292:Src/adc.c     ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 745              		.loc 1 292 3 is_stmt 1 view .LVU280
 293:Src/adc.c     ****   hadc3.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 746              		.loc 1 293 3 view .LVU281
 294:Src/adc.c     ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 747              		.loc 1 294 3 view .LVU282
 748              		.loc 1 295 3 view .LVU283
 749              		.loc 1 295 7 is_stmt 0 view .LVU284
 750 003a FFF7FEFF 		bl	HAL_ADC_Init
 751              	.LVL34:
 752              		.loc 1 295 6 view .LVU285
 753 003e 0028     		cmp	r0, #0
 754 0040 4AD1     		bne	.L133
 755              	.L96:
 296:Src/adc.c     ****   {
 297:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 298:Src/adc.c     ****   }
 299:Src/adc.c     **** 
 300:Src/adc.c     ****     /**Configure the ADC multi-mode 
 301:Src/adc.c     ****     */
 302:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 756              		.loc 1 302 3 is_stmt 1 view .LVU286
 757              		.loc 1 302 18 is_stmt 0 view .LVU287
 758 0042 0023     		movs	r3, #0
 303:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc3, &multimode) != HAL_OK)
 759              		.loc 1 303 7 view .LVU288
 760 0044 01A9     		add	r1, sp, #4
 761 0046 4048     		ldr	r0, .L142
 302:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc3, &multimode) != HAL_OK)
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 22


 762              		.loc 1 302 18 view .LVU289
 763 0048 0193     		str	r3, [sp, #4]
 764              		.loc 1 303 3 is_stmt 1 view .LVU290
 765              		.loc 1 303 7 is_stmt 0 view .LVU291
 766 004a FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 767              	.LVL35:
 768              		.loc 1 303 6 view .LVU292
 769 004e 0028     		cmp	r0, #0
 770 0050 73D1     		bne	.L134
 771              	.L97:
 304:Src/adc.c     ****   {
 305:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 306:Src/adc.c     ****   }
 307:Src/adc.c     **** 
 308:Src/adc.c     ****     /**Configure Regular Channel 
 309:Src/adc.c     ****     */
 310:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 772              		.loc 1 310 3 is_stmt 1 view .LVU293
 311:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 312:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 773              		.loc 1 312 22 is_stmt 0 view .LVU294
 774 0052 0023     		movs	r3, #0
 310:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 775              		.loc 1 310 19 view .LVU295
 776 0054 0122     		movs	r2, #1
 313:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 777              		.loc 1 313 24 view .LVU296
 778 0056 0724     		movs	r4, #7
 314:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 315:Src/adc.c     ****   sConfig.Offset = 0;
 316:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 779              		.loc 1 316 7 view .LVU297
 780 0058 04A9     		add	r1, sp, #16
 781 005a 3B48     		ldr	r0, .L142
 315:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 782              		.loc 1 315 18 view .LVU298
 783 005c 0993     		str	r3, [sp, #36]
 311:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 784              		.loc 1 311 16 view .LVU299
 785 005e CDE90422 		strd	r2, r2, [sp, #16]
 312:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 786              		.loc 1 312 3 is_stmt 1 view .LVU300
 314:Src/adc.c     ****   sConfig.Offset = 0;
 787              		.loc 1 314 24 is_stmt 0 view .LVU301
 788 0062 CDE90733 		strd	r3, r3, [sp, #28]
 313:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 789              		.loc 1 313 24 view .LVU302
 790 0066 0694     		str	r4, [sp, #24]
 314:Src/adc.c     ****   sConfig.Offset = 0;
 791              		.loc 1 314 3 is_stmt 1 view .LVU303
 315:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 792              		.loc 1 315 3 view .LVU304
 793              		.loc 1 316 3 view .LVU305
 794              		.loc 1 316 7 is_stmt 0 view .LVU306
 795 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 796              	.LVL36:
 797              		.loc 1 316 6 view .LVU307
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 23


 798 006c 0028     		cmp	r0, #0
 799 006e 5ED1     		bne	.L135
 800              	.L98:
 317:Src/adc.c     ****   {
 318:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 319:Src/adc.c     ****   }
 320:Src/adc.c     **** 
 321:Src/adc.c     ****     /**Configure Regular Channel 
 322:Src/adc.c     ****     */
 323:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_12;
 801              		.loc 1 323 3 is_stmt 1 view .LVU308
 802              		.loc 1 323 19 is_stmt 0 view .LVU309
 803 0070 0C22     		movs	r2, #12
 324:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 804              		.loc 1 324 16 view .LVU310
 805 0072 0223     		movs	r3, #2
 325:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 806              		.loc 1 325 7 view .LVU311
 807 0074 04A9     		add	r1, sp, #16
 808 0076 3448     		ldr	r0, .L142
 324:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 809              		.loc 1 324 16 view .LVU312
 810 0078 CDE90423 		strd	r2, r3, [sp, #16]
 811              		.loc 1 325 3 is_stmt 1 view .LVU313
 812              		.loc 1 325 7 is_stmt 0 view .LVU314
 813 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 814              	.LVL37:
 815              		.loc 1 325 6 view .LVU315
 816 0080 0028     		cmp	r0, #0
 817 0082 4ED1     		bne	.L136
 818              	.L99:
 326:Src/adc.c     ****   {
 327:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 328:Src/adc.c     ****   }
 329:Src/adc.c     **** 
 330:Src/adc.c     ****     /**Configure Regular Channel 
 331:Src/adc.c     ****     */
 332:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_5;
 819              		.loc 1 332 3 is_stmt 1 view .LVU316
 820              		.loc 1 332 19 is_stmt 0 view .LVU317
 821 0084 0522     		movs	r2, #5
 333:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 822              		.loc 1 333 16 view .LVU318
 823 0086 0323     		movs	r3, #3
 334:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 824              		.loc 1 334 7 view .LVU319
 825 0088 04A9     		add	r1, sp, #16
 826 008a 2F48     		ldr	r0, .L142
 333:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 827              		.loc 1 333 16 view .LVU320
 828 008c CDE90423 		strd	r2, r3, [sp, #16]
 829              		.loc 1 334 3 is_stmt 1 view .LVU321
 830              		.loc 1 334 7 is_stmt 0 view .LVU322
 831 0090 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 832              	.LVL38:
 833              		.loc 1 334 6 view .LVU323
 834 0094 0028     		cmp	r0, #0
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 24


 835 0096 3ED1     		bne	.L137
 836              	.L100:
 335:Src/adc.c     ****   {
 336:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 337:Src/adc.c     ****   }
 338:Src/adc.c     **** 
 339:Src/adc.c     ****     /**Configure Regular Channel 
 340:Src/adc.c     ****     */
 341:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 837              		.loc 1 341 3 is_stmt 1 view .LVU324
 838              		.loc 1 341 19 is_stmt 0 view .LVU325
 839 0098 1222     		movs	r2, #18
 342:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 840              		.loc 1 342 16 view .LVU326
 841 009a 0423     		movs	r3, #4
 343:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 842              		.loc 1 343 7 view .LVU327
 843 009c 04A9     		add	r1, sp, #16
 844 009e 2A48     		ldr	r0, .L142
 342:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 845              		.loc 1 342 16 view .LVU328
 846 00a0 CDE90423 		strd	r2, r3, [sp, #16]
 847              		.loc 1 343 3 is_stmt 1 view .LVU329
 848              		.loc 1 343 7 is_stmt 0 view .LVU330
 849 00a4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 850              	.LVL39:
 851              		.loc 1 343 6 view .LVU331
 852 00a8 78BB     		cbnz	r0, .L138
 853              	.L101:
 344:Src/adc.c     ****   {
 345:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 346:Src/adc.c     ****   }
 347:Src/adc.c     **** 
 348:Src/adc.c     ****     /**Configure Regular Channel 
 349:Src/adc.c     ****     */
 350:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 854              		.loc 1 350 3 is_stmt 1 view .LVU332
 855              		.loc 1 350 16 is_stmt 0 view .LVU333
 856 00aa 0523     		movs	r3, #5
 351:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 857              		.loc 1 351 7 view .LVU334
 858 00ac 04A9     		add	r1, sp, #16
 859 00ae 2648     		ldr	r0, .L142
 350:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 860              		.loc 1 350 16 view .LVU335
 861 00b0 0593     		str	r3, [sp, #20]
 862              		.loc 1 351 3 is_stmt 1 view .LVU336
 863              		.loc 1 351 7 is_stmt 0 view .LVU337
 864 00b2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 865              	.LVL40:
 866              		.loc 1 351 6 view .LVU338
 867 00b6 10BB     		cbnz	r0, .L139
 868              	.L102:
 352:Src/adc.c     ****   {
 353:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 354:Src/adc.c     ****   }
 355:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 25


 356:Src/adc.c     ****     /**Configure Regular Channel 
 357:Src/adc.c     ****     */
 358:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 869              		.loc 1 358 3 is_stmt 1 view .LVU339
 870              		.loc 1 358 16 is_stmt 0 view .LVU340
 871 00b8 0623     		movs	r3, #6
 359:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 872              		.loc 1 359 7 view .LVU341
 873 00ba 04A9     		add	r1, sp, #16
 874 00bc 2248     		ldr	r0, .L142
 358:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 875              		.loc 1 358 16 view .LVU342
 876 00be 0593     		str	r3, [sp, #20]
 877              		.loc 1 359 3 is_stmt 1 view .LVU343
 878              		.loc 1 359 7 is_stmt 0 view .LVU344
 879 00c0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 880              	.LVL41:
 881              		.loc 1 359 6 view .LVU345
 882 00c4 A8B9     		cbnz	r0, .L140
 883              	.L103:
 360:Src/adc.c     ****   {
 361:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 362:Src/adc.c     ****   }
 363:Src/adc.c     **** 
 364:Src/adc.c     ****     /**Configure Regular Channel 
 365:Src/adc.c     ****     */
 366:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 884              		.loc 1 366 3 is_stmt 1 view .LVU346
 885              		.loc 1 366 16 is_stmt 0 view .LVU347
 886 00c6 0723     		movs	r3, #7
 367:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 887              		.loc 1 367 7 view .LVU348
 888 00c8 04A9     		add	r1, sp, #16
 889 00ca 1F48     		ldr	r0, .L142
 366:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 890              		.loc 1 366 16 view .LVU349
 891 00cc 0593     		str	r3, [sp, #20]
 892              		.loc 1 367 3 is_stmt 1 view .LVU350
 893              		.loc 1 367 7 is_stmt 0 view .LVU351
 894 00ce FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 895              	.LVL42:
 896              		.loc 1 367 6 view .LVU352
 897 00d2 38B9     		cbnz	r0, .L141
 368:Src/adc.c     ****   {
 369:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 370:Src/adc.c     ****   }
 371:Src/adc.c     **** 
 372:Src/adc.c     **** }
 898              		.loc 1 372 1 view .LVU353
 899 00d4 0BB0     		add	sp, sp, #44
 900              	.LCFI14:
 901              		.cfi_remember_state
 902              		.cfi_def_cfa_offset 12
 903              		@ sp needed
 904 00d6 30BD     		pop	{r4, r5, pc}
 905              	.L133:
 906              	.LCFI15:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 26


 907              		.cfi_restore_state
 297:Src/adc.c     ****   }
 908              		.loc 1 297 5 is_stmt 1 view .LVU354
 909 00d8 40F22911 		movw	r1, #297
 910 00dc 1C48     		ldr	r0, .L142+8
 911 00de FFF7FEFF 		bl	_Error_Handler
 912              	.LVL43:
 913 00e2 AEE7     		b	.L96
 914              	.L141:
 369:Src/adc.c     ****   }
 915              		.loc 1 369 5 view .LVU355
 916 00e4 40F27111 		movw	r1, #369
 917 00e8 1948     		ldr	r0, .L142+8
 918 00ea FFF7FEFF 		bl	_Error_Handler
 919              	.LVL44:
 920              		.loc 1 372 1 is_stmt 0 view .LVU356
 921 00ee 0BB0     		add	sp, sp, #44
 922              	.LCFI16:
 923              		.cfi_remember_state
 924              		.cfi_def_cfa_offset 12
 925              		@ sp needed
 926 00f0 30BD     		pop	{r4, r5, pc}
 927              	.L140:
 928              	.LCFI17:
 929              		.cfi_restore_state
 361:Src/adc.c     ****   }
 930              		.loc 1 361 5 is_stmt 1 view .LVU357
 931 00f2 40F26911 		movw	r1, #361
 932 00f6 1648     		ldr	r0, .L142+8
 933 00f8 FFF7FEFF 		bl	_Error_Handler
 934              	.LVL45:
 935 00fc E3E7     		b	.L103
 936              	.L139:
 353:Src/adc.c     ****   }
 937              		.loc 1 353 5 view .LVU358
 938 00fe 40F26111 		movw	r1, #353
 939 0102 1348     		ldr	r0, .L142+8
 940 0104 FFF7FEFF 		bl	_Error_Handler
 941              	.LVL46:
 942 0108 D6E7     		b	.L102
 943              	.L138:
 345:Src/adc.c     ****   }
 944              		.loc 1 345 5 view .LVU359
 945 010a 40F25911 		movw	r1, #345
 946 010e 1048     		ldr	r0, .L142+8
 947 0110 FFF7FEFF 		bl	_Error_Handler
 948              	.LVL47:
 949 0114 C9E7     		b	.L101
 950              	.L137:
 336:Src/adc.c     ****   }
 951              		.loc 1 336 5 view .LVU360
 952 0116 4FF4A871 		mov	r1, #336
 953 011a 0D48     		ldr	r0, .L142+8
 954 011c FFF7FEFF 		bl	_Error_Handler
 955              	.LVL48:
 956 0120 BAE7     		b	.L100
 957              	.L136:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 27


 327:Src/adc.c     ****   }
 958              		.loc 1 327 5 view .LVU361
 959 0122 40F24711 		movw	r1, #327
 960 0126 0A48     		ldr	r0, .L142+8
 961 0128 FFF7FEFF 		bl	_Error_Handler
 962              	.LVL49:
 963 012c AAE7     		b	.L99
 964              	.L135:
 318:Src/adc.c     ****   }
 965              		.loc 1 318 5 view .LVU362
 966 012e 4FF49F71 		mov	r1, #318
 967 0132 0748     		ldr	r0, .L142+8
 968 0134 FFF7FEFF 		bl	_Error_Handler
 969              	.LVL50:
 970 0138 9AE7     		b	.L98
 971              	.L134:
 305:Src/adc.c     ****   }
 972              		.loc 1 305 5 view .LVU363
 973 013a 40F23111 		movw	r1, #305
 974 013e 0448     		ldr	r0, .L142+8
 975 0140 FFF7FEFF 		bl	_Error_Handler
 976              	.LVL51:
 977 0144 85E7     		b	.L97
 978              	.L143:
 979 0146 00BF     		.align	2
 980              	.L142:
 981 0148 00000000 		.word	hadc3
 982 014c 00040050 		.word	1342178304
 983 0150 00000000 		.word	.LC0
 984              		.cfi_endproc
 985              	.LFE299:
 987              		.section	.text.MX_ADC4_Init,"ax",%progbits
 988              		.align	1
 989              		.p2align 2,,3
 990              		.global	MX_ADC4_Init
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	MX_ADC4_Init:
 997              	.LFB300:
 373:Src/adc.c     **** /* ADC4 init function */
 374:Src/adc.c     **** void MX_ADC4_Init(void)
 375:Src/adc.c     **** {
 998              		.loc 1 375 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 24
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 376:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 1002              		.loc 1 376 3 view .LVU365
 377:Src/adc.c     **** 
 378:Src/adc.c     ****     /**Common config 
 379:Src/adc.c     ****     */
 380:Src/adc.c     ****   hadc4.Instance = ADC4;
 1003              		.loc 1 380 3 view .LVU366
 375:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 1004              		.loc 1 375 1 is_stmt 0 view .LVU367
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 28


 1005 0000 30B5     		push	{r4, r5, lr}
 1006              	.LCFI18:
 1007              		.cfi_def_cfa_offset 12
 1008              		.cfi_offset 4, -12
 1009              		.cfi_offset 5, -8
 1010              		.cfi_offset 14, -4
 1011              		.loc 1 380 18 view .LVU368
 1012 0002 4D4B     		ldr	r3, .L186
 1013 0004 4D4A     		ldr	r2, .L186+4
 1014 0006 1A60     		str	r2, [r3]
 381:Src/adc.c     ****   hadc4.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1015              		.loc 1 381 3 is_stmt 1 view .LVU369
 1016              		.loc 1 381 29 is_stmt 0 view .LVU370
 1017 0008 4FF40030 		mov	r0, #131072
 382:Src/adc.c     ****   hadc4.Init.Resolution = ADC_RESOLUTION_12B;
 383:Src/adc.c     ****   hadc4.Init.ScanConvMode = ADC_SCAN_ENABLE;
 384:Src/adc.c     ****   hadc4.Init.ContinuousConvMode = ENABLE;
 385:Src/adc.c     ****   hadc4.Init.DiscontinuousConvMode = DISABLE;
 386:Src/adc.c     ****   hadc4.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 1018              		.loc 1 386 35 view .LVU371
 1019 000c 4FF48062 		mov	r2, #1024
 387:Src/adc.c     ****   hadc4.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 1020              		.loc 1 387 31 view .LVU372
 1021 0010 4FF40071 		mov	r1, #512
 375:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 1022              		.loc 1 375 1 view .LVU373
 1023 0014 87B0     		sub	sp, sp, #28
 1024              	.LCFI19:
 1025              		.cfi_def_cfa_offset 40
 388:Src/adc.c     ****   hadc4.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 389:Src/adc.c     ****   hadc4.Init.NbrOfConversion = 7;
 1026              		.loc 1 389 30 view .LVU374
 1027 0016 0725     		movs	r5, #7
 390:Src/adc.c     ****   hadc4.Init.DMAContinuousRequests = ENABLE;
 391:Src/adc.c     ****   hadc4.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 1028              		.loc 1 391 27 view .LVU375
 1029 0018 0824     		movs	r4, #8
 381:Src/adc.c     ****   hadc4.Init.Resolution = ADC_RESOLUTION_12B;
 1030              		.loc 1 381 29 view .LVU376
 1031 001a 5860     		str	r0, [r3, #4]
 382:Src/adc.c     ****   hadc4.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1032              		.loc 1 382 3 is_stmt 1 view .LVU377
 386:Src/adc.c     ****   hadc4.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 1033              		.loc 1 386 35 is_stmt 0 view .LVU378
 1034 001c 1A63     		str	r2, [r3, #48]
 387:Src/adc.c     ****   hadc4.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1035              		.loc 1 387 31 view .LVU379
 1036 001e D962     		str	r1, [r3, #44]
 382:Src/adc.c     ****   hadc4.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1037              		.loc 1 382 25 view .LVU380
 1038 0020 0022     		movs	r2, #0
 383:Src/adc.c     ****   hadc4.Init.ContinuousConvMode = ENABLE;
 1039              		.loc 1 383 27 view .LVU381
 1040 0022 0121     		movs	r1, #1
 392:Src/adc.c     ****   hadc4.Init.LowPowerAutoWait = DISABLE;
 393:Src/adc.c     ****   hadc4.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 394:Src/adc.c     ****   if (HAL_ADC_Init(&hadc4) != HAL_OK)
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 29


 1041              		.loc 1 394 7 view .LVU382
 1042 0024 1846     		mov	r0, r3
 389:Src/adc.c     ****   hadc4.Init.DMAContinuousRequests = ENABLE;
 1043              		.loc 1 389 30 view .LVU383
 1044 0026 1D62     		str	r5, [r3, #32]
 391:Src/adc.c     ****   hadc4.Init.LowPowerAutoWait = DISABLE;
 1045              		.loc 1 391 27 view .LVU384
 1046 0028 5C61     		str	r4, [r3, #20]
 382:Src/adc.c     ****   hadc4.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1047              		.loc 1 382 25 view .LVU385
 1048 002a 9A60     		str	r2, [r3, #8]
 383:Src/adc.c     ****   hadc4.Init.ContinuousConvMode = ENABLE;
 1049              		.loc 1 383 3 is_stmt 1 view .LVU386
 385:Src/adc.c     ****   hadc4.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 1050              		.loc 1 385 36 is_stmt 0 view .LVU387
 1051 002c 5A62     		str	r2, [r3, #36]
 388:Src/adc.c     ****   hadc4.Init.NbrOfConversion = 7;
 1052              		.loc 1 388 24 view .LVU388
 1053 002e DA60     		str	r2, [r3, #12]
 392:Src/adc.c     ****   hadc4.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 1054              		.loc 1 392 31 view .LVU389
 1055 0030 9A61     		str	r2, [r3, #24]
 393:Src/adc.c     ****   if (HAL_ADC_Init(&hadc4) != HAL_OK)
 1056              		.loc 1 393 22 view .LVU390
 1057 0032 9A63     		str	r2, [r3, #56]
 383:Src/adc.c     ****   hadc4.Init.ContinuousConvMode = ENABLE;
 1058              		.loc 1 383 27 view .LVU391
 1059 0034 1961     		str	r1, [r3, #16]
 384:Src/adc.c     ****   hadc4.Init.DiscontinuousConvMode = DISABLE;
 1060              		.loc 1 384 3 is_stmt 1 view .LVU392
 384:Src/adc.c     ****   hadc4.Init.DiscontinuousConvMode = DISABLE;
 1061              		.loc 1 384 33 is_stmt 0 view .LVU393
 1062 0036 D961     		str	r1, [r3, #28]
 385:Src/adc.c     ****   hadc4.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 1063              		.loc 1 385 3 is_stmt 1 view .LVU394
 386:Src/adc.c     ****   hadc4.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO2;
 1064              		.loc 1 386 3 view .LVU395
 387:Src/adc.c     ****   hadc4.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1065              		.loc 1 387 3 view .LVU396
 388:Src/adc.c     ****   hadc4.Init.NbrOfConversion = 7;
 1066              		.loc 1 388 3 view .LVU397
 389:Src/adc.c     ****   hadc4.Init.DMAContinuousRequests = ENABLE;
 1067              		.loc 1 389 3 view .LVU398
 390:Src/adc.c     ****   hadc4.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 1068              		.loc 1 390 3 view .LVU399
 390:Src/adc.c     ****   hadc4.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 1069              		.loc 1 390 36 is_stmt 0 view .LVU400
 1070 0038 5963     		str	r1, [r3, #52]
 391:Src/adc.c     ****   hadc4.Init.LowPowerAutoWait = DISABLE;
 1071              		.loc 1 391 3 is_stmt 1 view .LVU401
 392:Src/adc.c     ****   hadc4.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 1072              		.loc 1 392 3 view .LVU402
 393:Src/adc.c     ****   if (HAL_ADC_Init(&hadc4) != HAL_OK)
 1073              		.loc 1 393 3 view .LVU403
 1074              		.loc 1 394 3 view .LVU404
 1075              		.loc 1 394 7 is_stmt 0 view .LVU405
 1076 003a FFF7FEFF 		bl	HAL_ADC_Init
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 30


 1077              	.LVL52:
 1078              		.loc 1 394 6 view .LVU406
 1079 003e 0028     		cmp	r0, #0
 1080 0040 49D1     		bne	.L178
 1081              	.L145:
 395:Src/adc.c     ****   {
 396:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 397:Src/adc.c     ****   }
 398:Src/adc.c     **** 
 399:Src/adc.c     ****     /**Configure Regular Channel 
 400:Src/adc.c     ****     */
 401:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 1082              		.loc 1 401 3 is_stmt 1 view .LVU407
 1083              		.loc 1 401 19 is_stmt 0 view .LVU408
 1084 0042 0320     		movs	r0, #3
 402:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 403:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1085              		.loc 1 403 22 view .LVU409
 1086 0044 0023     		movs	r3, #0
 402:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1087              		.loc 1 402 16 view .LVU410
 1088 0046 0124     		movs	r4, #1
 404:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 1089              		.loc 1 404 24 view .LVU411
 1090 0048 0722     		movs	r2, #7
 401:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1091              		.loc 1 401 19 view .LVU412
 1092 004a 0090     		str	r0, [sp]
 402:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1093              		.loc 1 402 3 is_stmt 1 view .LVU413
 405:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 406:Src/adc.c     ****   sConfig.Offset = 0;
 407:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1094              		.loc 1 407 7 is_stmt 0 view .LVU414
 1095 004c 6946     		mov	r1, sp
 1096 004e 3A48     		ldr	r0, .L186
 402:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1097              		.loc 1 402 16 view .LVU415
 1098 0050 0194     		str	r4, [sp, #4]
 403:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 1099              		.loc 1 403 3 is_stmt 1 view .LVU416
 405:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1100              		.loc 1 405 24 is_stmt 0 view .LVU417
 1101 0052 CDE90333 		strd	r3, r3, [sp, #12]
 406:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1102              		.loc 1 406 18 view .LVU418
 1103 0056 0593     		str	r3, [sp, #20]
 404:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1104              		.loc 1 404 24 view .LVU419
 1105 0058 0292     		str	r2, [sp, #8]
 405:Src/adc.c     ****   sConfig.Offset = 0;
 1106              		.loc 1 405 3 is_stmt 1 view .LVU420
 406:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1107              		.loc 1 406 3 view .LVU421
 1108              		.loc 1 407 3 view .LVU422
 1109              		.loc 1 407 7 is_stmt 0 view .LVU423
 1110 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 31


 1111              	.LVL53:
 1112              		.loc 1 407 6 view .LVU424
 1113 005e 0028     		cmp	r0, #0
 1114 0060 64D1     		bne	.L179
 1115              	.L146:
 408:Src/adc.c     ****   {
 409:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 410:Src/adc.c     ****   }
 411:Src/adc.c     **** 
 412:Src/adc.c     ****     /**Configure Regular Channel 
 413:Src/adc.c     ****     */
 414:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
 1116              		.loc 1 414 3 is_stmt 1 view .LVU425
 1117              		.loc 1 414 19 is_stmt 0 view .LVU426
 1118 0062 0422     		movs	r2, #4
 415:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1119              		.loc 1 415 16 view .LVU427
 1120 0064 0223     		movs	r3, #2
 416:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1121              		.loc 1 416 7 view .LVU428
 1122 0066 6946     		mov	r1, sp
 1123 0068 3348     		ldr	r0, .L186
 415:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1124              		.loc 1 415 16 view .LVU429
 1125 006a CDE90023 		strd	r2, r3, [sp]
 1126              		.loc 1 416 3 is_stmt 1 view .LVU430
 1127              		.loc 1 416 7 is_stmt 0 view .LVU431
 1128 006e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1129              	.LVL54:
 1130              		.loc 1 416 6 view .LVU432
 1131 0072 0028     		cmp	r0, #0
 1132 0074 54D1     		bne	.L180
 1133              	.L147:
 417:Src/adc.c     ****   {
 418:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 419:Src/adc.c     ****   }
 420:Src/adc.c     **** 
 421:Src/adc.c     ****     /**Configure Regular Channel 
 422:Src/adc.c     ****     */
 423:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_5;
 1134              		.loc 1 423 3 is_stmt 1 view .LVU433
 1135              		.loc 1 423 19 is_stmt 0 view .LVU434
 1136 0076 0522     		movs	r2, #5
 424:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1137              		.loc 1 424 16 view .LVU435
 1138 0078 0323     		movs	r3, #3
 425:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1139              		.loc 1 425 7 view .LVU436
 1140 007a 6946     		mov	r1, sp
 1141 007c 2E48     		ldr	r0, .L186
 424:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1142              		.loc 1 424 16 view .LVU437
 1143 007e CDE90023 		strd	r2, r3, [sp]
 1144              		.loc 1 425 3 is_stmt 1 view .LVU438
 1145              		.loc 1 425 7 is_stmt 0 view .LVU439
 1146 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1147              	.LVL55:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 32


 1148              		.loc 1 425 6 view .LVU440
 1149 0086 0028     		cmp	r0, #0
 1150 0088 44D1     		bne	.L181
 1151              	.L148:
 426:Src/adc.c     ****   {
 427:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 428:Src/adc.c     ****   }
 429:Src/adc.c     **** 
 430:Src/adc.c     ****     /**Configure Regular Channel 
 431:Src/adc.c     ****     */
 432:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 1152              		.loc 1 432 3 is_stmt 1 view .LVU441
 1153              		.loc 1 432 19 is_stmt 0 view .LVU442
 1154 008a 0322     		movs	r2, #3
 433:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1155              		.loc 1 433 16 view .LVU443
 1156 008c 0423     		movs	r3, #4
 434:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1157              		.loc 1 434 7 view .LVU444
 1158 008e 6946     		mov	r1, sp
 1159 0090 2948     		ldr	r0, .L186
 433:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1160              		.loc 1 433 16 view .LVU445
 1161 0092 CDE90023 		strd	r2, r3, [sp]
 1162              		.loc 1 434 3 is_stmt 1 view .LVU446
 1163              		.loc 1 434 7 is_stmt 0 view .LVU447
 1164 0096 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1165              	.LVL56:
 1166              		.loc 1 434 6 view .LVU448
 1167 009a A8BB     		cbnz	r0, .L182
 1168              	.L149:
 435:Src/adc.c     ****   {
 436:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 437:Src/adc.c     ****   }
 438:Src/adc.c     **** 
 439:Src/adc.c     ****     /**Configure Regular Channel 
 440:Src/adc.c     ****     */
 441:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
 1169              		.loc 1 441 3 is_stmt 1 view .LVU449
 1170              		.loc 1 441 19 is_stmt 0 view .LVU450
 1171 009c 0422     		movs	r2, #4
 442:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 1172              		.loc 1 442 16 view .LVU451
 1173 009e 0523     		movs	r3, #5
 443:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1174              		.loc 1 443 7 view .LVU452
 1175 00a0 6946     		mov	r1, sp
 1176 00a2 2548     		ldr	r0, .L186
 442:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 1177              		.loc 1 442 16 view .LVU453
 1178 00a4 CDE90023 		strd	r2, r3, [sp]
 1179              		.loc 1 443 3 is_stmt 1 view .LVU454
 1180              		.loc 1 443 7 is_stmt 0 view .LVU455
 1181 00a8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1182              	.LVL57:
 1183              		.loc 1 443 6 view .LVU456
 1184 00ac 30BB     		cbnz	r0, .L183
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 33


 1185              	.L150:
 444:Src/adc.c     ****   {
 445:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 446:Src/adc.c     ****   }
 447:Src/adc.c     **** 
 448:Src/adc.c     ****     /**Configure Regular Channel 
 449:Src/adc.c     ****     */
 450:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_5;
 1186              		.loc 1 450 3 is_stmt 1 view .LVU457
 1187              		.loc 1 450 19 is_stmt 0 view .LVU458
 1188 00ae 0522     		movs	r2, #5
 451:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 1189              		.loc 1 451 16 view .LVU459
 1190 00b0 0623     		movs	r3, #6
 452:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1191              		.loc 1 452 7 view .LVU460
 1192 00b2 6946     		mov	r1, sp
 1193 00b4 2048     		ldr	r0, .L186
 451:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 1194              		.loc 1 451 16 view .LVU461
 1195 00b6 CDE90023 		strd	r2, r3, [sp]
 1196              		.loc 1 452 3 is_stmt 1 view .LVU462
 1197              		.loc 1 452 7 is_stmt 0 view .LVU463
 1198 00ba FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1199              	.LVL58:
 1200              		.loc 1 452 6 view .LVU464
 1201 00be B8B9     		cbnz	r0, .L184
 1202              	.L151:
 453:Src/adc.c     ****   {
 454:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 455:Src/adc.c     ****   }
 456:Src/adc.c     **** 
 457:Src/adc.c     ****     /**Configure Regular Channel 
 458:Src/adc.c     ****     */
 459:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 1203              		.loc 1 459 3 is_stmt 1 view .LVU465
 1204              		.loc 1 459 19 is_stmt 0 view .LVU466
 1205 00c0 0322     		movs	r2, #3
 460:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 1206              		.loc 1 460 16 view .LVU467
 1207 00c2 0723     		movs	r3, #7
 461:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK)
 1208              		.loc 1 461 7 view .LVU468
 1209 00c4 6946     		mov	r1, sp
 1210 00c6 1C48     		ldr	r0, .L186
 460:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 1211              		.loc 1 460 16 view .LVU469
 1212 00c8 CDE90023 		strd	r2, r3, [sp]
 1213              		.loc 1 461 3 is_stmt 1 view .LVU470
 1214              		.loc 1 461 7 is_stmt 0 view .LVU471
 1215 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1216              	.LVL59:
 1217              		.loc 1 461 6 view .LVU472
 1218 00d0 38B9     		cbnz	r0, .L185
 462:Src/adc.c     ****   {
 463:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 464:Src/adc.c     ****   }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 34


 465:Src/adc.c     **** 
 466:Src/adc.c     **** }
 1219              		.loc 1 466 1 view .LVU473
 1220 00d2 07B0     		add	sp, sp, #28
 1221              	.LCFI20:
 1222              		.cfi_remember_state
 1223              		.cfi_def_cfa_offset 12
 1224              		@ sp needed
 1225 00d4 30BD     		pop	{r4, r5, pc}
 1226              	.L178:
 1227              	.LCFI21:
 1228              		.cfi_restore_state
 396:Src/adc.c     ****   }
 1229              		.loc 1 396 5 is_stmt 1 view .LVU474
 1230 00d6 4FF4C671 		mov	r1, #396
 1231 00da 1948     		ldr	r0, .L186+8
 1232 00dc FFF7FEFF 		bl	_Error_Handler
 1233              	.LVL60:
 1234 00e0 AFE7     		b	.L145
 1235              	.L185:
 463:Src/adc.c     ****   }
 1236              		.loc 1 463 5 view .LVU475
 1237 00e2 40F2CF11 		movw	r1, #463
 1238 00e6 1648     		ldr	r0, .L186+8
 1239 00e8 FFF7FEFF 		bl	_Error_Handler
 1240              	.LVL61:
 1241              		.loc 1 466 1 is_stmt 0 view .LVU476
 1242 00ec 07B0     		add	sp, sp, #28
 1243              	.LCFI22:
 1244              		.cfi_remember_state
 1245              		.cfi_def_cfa_offset 12
 1246              		@ sp needed
 1247 00ee 30BD     		pop	{r4, r5, pc}
 1248              	.L184:
 1249              	.LCFI23:
 1250              		.cfi_restore_state
 454:Src/adc.c     ****   }
 1251              		.loc 1 454 5 is_stmt 1 view .LVU477
 1252 00f0 4FF4E371 		mov	r1, #454
 1253 00f4 1248     		ldr	r0, .L186+8
 1254 00f6 FFF7FEFF 		bl	_Error_Handler
 1255              	.LVL62:
 1256 00fa E1E7     		b	.L151
 1257              	.L183:
 445:Src/adc.c     ****   }
 1258              		.loc 1 445 5 view .LVU478
 1259 00fc 40F2BD11 		movw	r1, #445
 1260 0100 0F48     		ldr	r0, .L186+8
 1261 0102 FFF7FEFF 		bl	_Error_Handler
 1262              	.LVL63:
 1263 0106 D2E7     		b	.L150
 1264              	.L182:
 436:Src/adc.c     ****   }
 1265              		.loc 1 436 5 view .LVU479
 1266 0108 4FF4DA71 		mov	r1, #436
 1267 010c 0C48     		ldr	r0, .L186+8
 1268 010e FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 35


 1269              	.LVL64:
 1270 0112 C3E7     		b	.L149
 1271              	.L181:
 427:Src/adc.c     ****   }
 1272              		.loc 1 427 5 view .LVU480
 1273 0114 40F2AB11 		movw	r1, #427
 1274 0118 0948     		ldr	r0, .L186+8
 1275 011a FFF7FEFF 		bl	_Error_Handler
 1276              	.LVL65:
 1277 011e B4E7     		b	.L148
 1278              	.L180:
 418:Src/adc.c     ****   }
 1279              		.loc 1 418 5 view .LVU481
 1280 0120 4FF4D171 		mov	r1, #418
 1281 0124 0648     		ldr	r0, .L186+8
 1282 0126 FFF7FEFF 		bl	_Error_Handler
 1283              	.LVL66:
 1284 012a A4E7     		b	.L147
 1285              	.L179:
 409:Src/adc.c     ****   }
 1286              		.loc 1 409 5 view .LVU482
 1287 012c 40F29911 		movw	r1, #409
 1288 0130 0348     		ldr	r0, .L186+8
 1289 0132 FFF7FEFF 		bl	_Error_Handler
 1290              	.LVL67:
 1291 0136 94E7     		b	.L146
 1292              	.L187:
 1293              		.align	2
 1294              	.L186:
 1295 0138 00000000 		.word	hadc4
 1296 013c 00050050 		.word	1342178560
 1297 0140 00000000 		.word	.LC0
 1298              		.cfi_endproc
 1299              	.LFE300:
 1301              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 1302              		.align	1
 1303              		.p2align 2,,3
 1304              		.global	HAL_ADC_MspInit
 1305              		.syntax unified
 1306              		.thumb
 1307              		.thumb_func
 1308              		.fpu fpv4-sp-d16
 1310              	HAL_ADC_MspInit:
 1311              	.LVL68:
 1312              	.LFB301:
 467:Src/adc.c     **** 
 468:Src/adc.c     **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
 469:Src/adc.c     **** static uint32_t HAL_RCC_ADC34_CLK_ENABLED=0;
 470:Src/adc.c     **** 
 471:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 472:Src/adc.c     **** {
 1313              		.loc 1 472 1 view -0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 40
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 473:Src/adc.c     **** 
 474:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 36


 1317              		.loc 1 474 3 view .LVU484
 475:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 1318              		.loc 1 475 3 view .LVU485
 472:Src/adc.c     **** 
 1319              		.loc 1 472 1 is_stmt 0 view .LVU486
 1320 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1321              	.LCFI24:
 1322              		.cfi_def_cfa_offset 20
 1323              		.cfi_offset 4, -20
 1324              		.cfi_offset 5, -16
 1325              		.cfi_offset 6, -12
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328              		.loc 1 475 15 view .LVU487
 1329 0002 0368     		ldr	r3, [r0]
 1330              		.loc 1 475 5 view .LVU488
 1331 0004 B3F1A04F 		cmp	r3, #1342177280
 472:Src/adc.c     **** 
 1332              		.loc 1 472 1 view .LVU489
 1333 0008 8BB0     		sub	sp, sp, #44
 1334              	.LCFI25:
 1335              		.cfi_def_cfa_offset 64
 472:Src/adc.c     **** 
 1336              		.loc 1 472 1 view .LVU490
 1337 000a 0546     		mov	r5, r0
 1338              		.loc 1 475 5 view .LVU491
 1339 000c 48D0     		beq	.L214
 476:Src/adc.c     ****   {
 477:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 478:Src/adc.c     **** 
 479:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 480:Src/adc.c     ****     /* ADC1 clock enable */
 481:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 482:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 483:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 484:Src/adc.c     ****     }
 485:Src/adc.c     ****   
 486:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 487:Src/adc.c     ****     PC0     ------> ADC1_IN6
 488:Src/adc.c     ****     PC2     ------> ADC1_IN8
 489:Src/adc.c     ****     PC3     ------> ADC1_IN9
 490:Src/adc.c     ****     PA0     ------> ADC1_IN1
 491:Src/adc.c     ****     PA1     ------> ADC1_IN2
 492:Src/adc.c     ****     PB11     ------> ADC1_IN14 
 493:Src/adc.c     ****     */
 494:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 495:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 496:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 497:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 498:Src/adc.c     **** 
 499:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|ADC1_IN2_Pin;
 500:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 501:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 502:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 503:Src/adc.c     **** 
 504:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 505:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 37


 506:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 507:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 508:Src/adc.c     **** 
 509:Src/adc.c     ****     /* ADC1 DMA Init */
 510:Src/adc.c     ****     /* ADC1 Init */
 511:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 512:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 513:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 514:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 515:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 516:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 517:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 518:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 519:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 520:Src/adc.c     ****     {
 521:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 522:Src/adc.c     ****     }
 523:Src/adc.c     **** 
 524:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 525:Src/adc.c     **** 
 526:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 527:Src/adc.c     **** 
 528:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 529:Src/adc.c     ****   }
 530:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 1340              		.loc 1 530 8 is_stmt 1 view .LVU492
 1341              		.loc 1 530 10 is_stmt 0 view .LVU493
 1342 000e 8A4A     		ldr	r2, .L221
 1343 0010 9342     		cmp	r3, r2
 1344 0012 09D0     		beq	.L215
 531:Src/adc.c     ****   {
 532:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 533:Src/adc.c     **** 
 534:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 535:Src/adc.c     ****     /* ADC2 clock enable */
 536:Src/adc.c     ****     HAL_RCC_ADC12_CLK_ENABLED++;
 537:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 538:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 539:Src/adc.c     ****     }
 540:Src/adc.c     ****   
 541:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 542:Src/adc.c     ****     PC1     ------> ADC2_IN7
 543:Src/adc.c     ****     PA4     ------> ADC2_IN1
 544:Src/adc.c     ****     PC4     ------> ADC2_IN5
 545:Src/adc.c     ****     PB2     ------> ADC2_IN12 
 546:Src/adc.c     ****     */
 547:Src/adc.c     ****     GPIO_InitStruct.Pin = ADC2_IN7_Pin|GPIO_PIN_4;
 548:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 549:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 550:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 551:Src/adc.c     **** 
 552:Src/adc.c     ****     GPIO_InitStruct.Pin = ADC2_IN1_Pin;
 553:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 554:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 555:Src/adc.c     ****     HAL_GPIO_Init(ADC2_IN1_GPIO_Port, &GPIO_InitStruct);
 556:Src/adc.c     **** 
 557:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 38


 558:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 559:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 560:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 561:Src/adc.c     **** 
 562:Src/adc.c     ****     /* ADC2 DMA Init */
 563:Src/adc.c     ****     /* ADC2 Init */
 564:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Channel1;
 565:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 566:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 567:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 568:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 569:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 570:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 571:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
 572:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 573:Src/adc.c     ****     {
 574:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 575:Src/adc.c     ****     }
 576:Src/adc.c     **** 
 577:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
 578:Src/adc.c     **** 
 579:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 580:Src/adc.c     **** 
 581:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 582:Src/adc.c     ****   }
 583:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 1345              		.loc 1 583 8 is_stmt 1 view .LVU494
 1346              		.loc 1 583 10 is_stmt 0 view .LVU495
 1347 0014 894A     		ldr	r2, .L221+4
 1348 0016 9342     		cmp	r3, r2
 1349 0018 00F09C80 		beq	.L216
 584:Src/adc.c     ****   {
 585:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 586:Src/adc.c     **** 
 587:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 0 */
 588:Src/adc.c     ****     /* ADC3 clock enable */
 589:Src/adc.c     ****     HAL_RCC_ADC34_CLK_ENABLED++;
 590:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 591:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 592:Src/adc.c     ****     }
 593:Src/adc.c     ****   
 594:Src/adc.c     ****     /**ADC3 GPIO Configuration    
 595:Src/adc.c     ****     PB0     ------> ADC3_IN12
 596:Src/adc.c     ****     PB1     ------> ADC3_IN1
 597:Src/adc.c     ****     PB13     ------> ADC3_IN5 
 598:Src/adc.c     ****     */
 599:Src/adc.c     ****     GPIO_InitStruct.Pin = ADC3_IN12_Pin|GPIO_PIN_1|GPIO_PIN_13;
 600:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 601:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 602:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 603:Src/adc.c     **** 
 604:Src/adc.c     ****     /* ADC3 DMA Init */
 605:Src/adc.c     ****     /* ADC3 Init */
 606:Src/adc.c     ****     hdma_adc3.Instance = DMA2_Channel5;
 607:Src/adc.c     ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 608:Src/adc.c     ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 609:Src/adc.c     ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 39


 610:Src/adc.c     ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 611:Src/adc.c     ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 612:Src/adc.c     ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 613:Src/adc.c     ****     hdma_adc3.Init.Priority = DMA_PRIORITY_HIGH;
 614:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 615:Src/adc.c     ****     {
 616:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 617:Src/adc.c     ****     }
 618:Src/adc.c     **** 
 619:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc3);
 620:Src/adc.c     **** 
 621:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 622:Src/adc.c     **** 
 623:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 1 */
 624:Src/adc.c     ****   }
 625:Src/adc.c     ****   else if(adcHandle->Instance==ADC4)
 1350              		.loc 1 625 8 is_stmt 1 view .LVU496
 1351              		.loc 1 625 10 is_stmt 0 view .LVU497
 1352 001c 884A     		ldr	r2, .L221+8
 1353 001e 9342     		cmp	r3, r2
 1354 0020 00F0D180 		beq	.L217
 626:Src/adc.c     ****   {
 627:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspInit 0 */
 628:Src/adc.c     **** 
 629:Src/adc.c     ****   /* USER CODE END ADC4_MspInit 0 */
 630:Src/adc.c     ****     /* ADC4 clock enable */
 631:Src/adc.c     ****     HAL_RCC_ADC34_CLK_ENABLED++;
 632:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 633:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 634:Src/adc.c     ****     }
 635:Src/adc.c     ****   
 636:Src/adc.c     ****     /**ADC4 GPIO Configuration    
 637:Src/adc.c     ****     PB12     ------> ADC4_IN3
 638:Src/adc.c     ****     PB14     ------> ADC4_IN4
 639:Src/adc.c     ****     PB15     ------> ADC4_IN5 
 640:Src/adc.c     ****     */
 641:Src/adc.c     ****     GPIO_InitStruct.Pin = VT1_Pin|VT2_Pin|VT3_Pin;
 642:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 643:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 644:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 645:Src/adc.c     **** 
 646:Src/adc.c     ****     /* ADC4 DMA Init */
 647:Src/adc.c     ****     /* ADC4 Init */
 648:Src/adc.c     ****     hdma_adc4.Instance = DMA2_Channel2;
 649:Src/adc.c     ****     hdma_adc4.Init.Direction = DMA_PERIPH_TO_MEMORY;
 650:Src/adc.c     ****     hdma_adc4.Init.PeriphInc = DMA_PINC_DISABLE;
 651:Src/adc.c     ****     hdma_adc4.Init.MemInc = DMA_MINC_ENABLE;
 652:Src/adc.c     ****     hdma_adc4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 653:Src/adc.c     ****     hdma_adc4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 654:Src/adc.c     ****     hdma_adc4.Init.Mode = DMA_CIRCULAR;
 655:Src/adc.c     ****     hdma_adc4.Init.Priority = DMA_PRIORITY_HIGH;
 656:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc4) != HAL_OK)
 657:Src/adc.c     ****     {
 658:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 659:Src/adc.c     ****     }
 660:Src/adc.c     **** 
 661:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc4);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 40


 662:Src/adc.c     **** 
 663:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspInit 1 */
 664:Src/adc.c     **** 
 665:Src/adc.c     ****   /* USER CODE END ADC4_MspInit 1 */
 666:Src/adc.c     ****   }
 667:Src/adc.c     **** }
 1355              		.loc 1 667 1 view .LVU498
 1356 0024 0BB0     		add	sp, sp, #44
 1357              	.LCFI26:
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 20
 1360              		@ sp needed
 1361 0026 F0BD     		pop	{r4, r5, r6, r7, pc}
 1362              	.L215:
 1363              	.LCFI27:
 1364              		.cfi_restore_state
 536:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1365              		.loc 1 536 5 is_stmt 1 view .LVU499
 536:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1366              		.loc 1 536 30 is_stmt 0 view .LVU500
 1367 0028 864A     		ldr	r2, .L221+12
 1368 002a 1368     		ldr	r3, [r2]
 1369 002c 0133     		adds	r3, r3, #1
 537:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1370              		.loc 1 537 7 view .LVU501
 1371 002e 012B     		cmp	r3, #1
 536:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1372              		.loc 1 536 30 view .LVU502
 1373 0030 1360     		str	r3, [r2]
 537:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1374              		.loc 1 537 5 is_stmt 1 view .LVU503
 537:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1375              		.loc 1 537 7 is_stmt 0 view .LVU504
 1376 0032 7ED0     		beq	.L218
 1377              	.L194:
 547:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1378              		.loc 1 547 5 is_stmt 1 view .LVU505
 549:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1379              		.loc 1 549 26 is_stmt 0 view .LVU506
 1380 0034 0026     		movs	r6, #0
 548:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1381              		.loc 1 548 26 view .LVU507
 1382 0036 0327     		movs	r7, #3
 547:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1383              		.loc 1 547 25 view .LVU508
 1384 0038 1223     		movs	r3, #18
 550:Src/adc.c     **** 
 1385              		.loc 1 550 5 view .LVU509
 1386 003a 8348     		ldr	r0, .L221+16
 1387              	.LVL69:
 547:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1388              		.loc 1 547 25 view .LVU510
 1389 003c 0593     		str	r3, [sp, #20]
 548:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1390              		.loc 1 548 5 is_stmt 1 view .LVU511
 550:Src/adc.c     **** 
 1391              		.loc 1 550 5 is_stmt 0 view .LVU512
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 41


 1392 003e 05A9     		add	r1, sp, #20
 549:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1393              		.loc 1 549 26 view .LVU513
 1394 0040 CDE90676 		strd	r7, r6, [sp, #24]
 550:Src/adc.c     **** 
 1395              		.loc 1 550 5 is_stmt 1 view .LVU514
 1396 0044 FFF7FEFF 		bl	HAL_GPIO_Init
 1397              	.LVL70:
 552:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1398              		.loc 1 552 5 view .LVU515
 552:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1399              		.loc 1 552 25 is_stmt 0 view .LVU516
 1400 0048 1023     		movs	r3, #16
 555:Src/adc.c     **** 
 1401              		.loc 1 555 5 view .LVU517
 1402 004a 05A9     		add	r1, sp, #20
 1403 004c 4FF09040 		mov	r0, #1207959552
 564:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1404              		.loc 1 564 24 view .LVU518
 1405 0050 7E4C     		ldr	r4, .L221+20
 552:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1406              		.loc 1 552 25 view .LVU519
 1407 0052 0593     		str	r3, [sp, #20]
 553:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1408              		.loc 1 553 5 is_stmt 1 view .LVU520
 554:Src/adc.c     ****     HAL_GPIO_Init(ADC2_IN1_GPIO_Port, &GPIO_InitStruct);
 1409              		.loc 1 554 5 view .LVU521
 555:Src/adc.c     **** 
 1410              		.loc 1 555 5 view .LVU522
 554:Src/adc.c     ****     HAL_GPIO_Init(ADC2_IN1_GPIO_Port, &GPIO_InitStruct);
 1411              		.loc 1 554 26 is_stmt 0 view .LVU523
 1412 0054 CDE90676 		strd	r7, r6, [sp, #24]
 555:Src/adc.c     **** 
 1413              		.loc 1 555 5 view .LVU524
 1414 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 1415              	.LVL71:
 557:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1416              		.loc 1 557 5 is_stmt 1 view .LVU525
 557:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1417              		.loc 1 557 25 is_stmt 0 view .LVU526
 1418 005c 0423     		movs	r3, #4
 560:Src/adc.c     **** 
 1419              		.loc 1 560 5 view .LVU527
 1420 005e 05A9     		add	r1, sp, #20
 1421 0060 7B48     		ldr	r0, .L221+24
 557:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1422              		.loc 1 557 25 view .LVU528
 1423 0062 0593     		str	r3, [sp, #20]
 558:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1424              		.loc 1 558 5 is_stmt 1 view .LVU529
 559:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1425              		.loc 1 559 5 view .LVU530
 560:Src/adc.c     **** 
 1426              		.loc 1 560 5 view .LVU531
 559:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1427              		.loc 1 559 26 is_stmt 0 view .LVU532
 1428 0064 CDE90676 		strd	r7, r6, [sp, #24]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 42


 560:Src/adc.c     **** 
 1429              		.loc 1 560 5 view .LVU533
 1430 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 1431              	.LVL72:
 564:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1432              		.loc 1 564 5 is_stmt 1 view .LVU534
 564:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1433              		.loc 1 564 24 is_stmt 0 view .LVU535
 1434 006c 794B     		ldr	r3, .L221+28
 1435 006e 2360     		str	r3, [r4]
 565:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 1436              		.loc 1 565 5 is_stmt 1 view .LVU536
 566:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 1437              		.loc 1 566 5 view .LVU537
 567:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1438              		.loc 1 567 5 view .LVU538
 567:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1439              		.loc 1 567 27 is_stmt 0 view .LVU539
 1440 0070 8020     		movs	r0, #128
 568:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1441              		.loc 1 568 40 view .LVU540
 1442 0072 4FF48077 		mov	r7, #256
 569:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 1443              		.loc 1 569 37 view .LVU541
 1444 0076 4FF48061 		mov	r1, #1024
 570:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
 1445              		.loc 1 570 25 view .LVU542
 1446 007a 2022     		movs	r2, #32
 571:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 1447              		.loc 1 571 29 view .LVU543
 1448 007c 4FF40053 		mov	r3, #8192
 567:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1449              		.loc 1 567 27 view .LVU544
 1450 0080 E060     		str	r0, [r4, #12]
 568:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1451              		.loc 1 568 5 is_stmt 1 view .LVU545
 572:Src/adc.c     ****     {
 1452              		.loc 1 572 9 is_stmt 0 view .LVU546
 1453 0082 2046     		mov	r0, r4
 565:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 1454              		.loc 1 565 30 view .LVU547
 1455 0084 6660     		str	r6, [r4, #4]
 566:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 1456              		.loc 1 566 30 view .LVU548
 1457 0086 A660     		str	r6, [r4, #8]
 569:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 1458              		.loc 1 569 37 view .LVU549
 1459 0088 C4E90471 		strd	r7, r1, [r4, #16]
 570:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_HIGH;
 1460              		.loc 1 570 5 is_stmt 1 view .LVU550
 571:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 1461              		.loc 1 571 29 is_stmt 0 view .LVU551
 1462 008c C4E90623 		strd	r2, r3, [r4, #24]
 572:Src/adc.c     ****     {
 1463              		.loc 1 572 5 is_stmt 1 view .LVU552
 572:Src/adc.c     ****     {
 1464              		.loc 1 572 9 is_stmt 0 view .LVU553
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 43


 1465 0090 FFF7FEFF 		bl	HAL_DMA_Init
 1466              	.LVL73:
 572:Src/adc.c     ****     {
 1467              		.loc 1 572 8 view .LVU554
 1468 0094 0028     		cmp	r0, #0
 1469 0096 57D1     		bne	.L219
 1470              	.L200:
 661:Src/adc.c     **** 
 1471              		.loc 1 661 5 is_stmt 1 view .LVU555
 661:Src/adc.c     **** 
 1472              		.loc 1 661 5 view .LVU556
 1473 0098 EC63     		str	r4, [r5, #60]
 661:Src/adc.c     **** 
 1474              		.loc 1 661 5 view .LVU557
 1475 009a 6562     		str	r5, [r4, #36]
 1476              		.loc 1 667 1 is_stmt 0 view .LVU558
 1477 009c 0BB0     		add	sp, sp, #44
 1478              	.LCFI28:
 1479              		.cfi_remember_state
 1480              		.cfi_def_cfa_offset 20
 1481              		@ sp needed
 1482 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 1483              	.LVL74:
 1484              	.L214:
 1485              	.LCFI29:
 1486              		.cfi_restore_state
 481:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1487              		.loc 1 481 5 is_stmt 1 view .LVU559
 481:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1488              		.loc 1 481 30 is_stmt 0 view .LVU560
 1489 00a0 684A     		ldr	r2, .L221+12
 1490 00a2 1368     		ldr	r3, [r2]
 1491 00a4 0133     		adds	r3, r3, #1
 482:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1492              		.loc 1 482 7 view .LVU561
 1493 00a6 012B     		cmp	r3, #1
 481:Src/adc.c     ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1494              		.loc 1 481 30 view .LVU562
 1495 00a8 1360     		str	r3, [r2]
 482:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1496              		.loc 1 482 5 is_stmt 1 view .LVU563
 482:Src/adc.c     ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1497              		.loc 1 482 7 is_stmt 0 view .LVU564
 1498 00aa 37D0     		beq	.L220
 1499              	.L190:
 494:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1500              		.loc 1 494 5 is_stmt 1 view .LVU565
 496:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1501              		.loc 1 496 26 is_stmt 0 view .LVU566
 1502 00ac 0026     		movs	r6, #0
 494:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1503              		.loc 1 494 25 view .LVU567
 1504 00ae 0D23     		movs	r3, #13
 495:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1505              		.loc 1 495 26 view .LVU568
 1506 00b0 0327     		movs	r7, #3
 497:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 44


 1507              		.loc 1 497 5 view .LVU569
 1508 00b2 6548     		ldr	r0, .L221+16
 1509              	.LVL75:
 494:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1510              		.loc 1 494 25 view .LVU570
 1511 00b4 0593     		str	r3, [sp, #20]
 495:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1512              		.loc 1 495 5 is_stmt 1 view .LVU571
 497:Src/adc.c     **** 
 1513              		.loc 1 497 5 is_stmt 0 view .LVU572
 1514 00b6 05A9     		add	r1, sp, #20
 496:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1515              		.loc 1 496 26 view .LVU573
 1516 00b8 CDE90676 		strd	r7, r6, [sp, #24]
 497:Src/adc.c     **** 
 1517              		.loc 1 497 5 is_stmt 1 view .LVU574
 1518 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 1519              	.LVL76:
 499:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1520              		.loc 1 499 5 view .LVU575
 502:Src/adc.c     **** 
 1521              		.loc 1 502 5 is_stmt 0 view .LVU576
 1522 00c0 05A9     		add	r1, sp, #20
 1523 00c2 4FF09040 		mov	r0, #1207959552
 511:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1524              		.loc 1 511 24 view .LVU577
 1525 00c6 644C     		ldr	r4, .L221+32
 501:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1526              		.loc 1 501 26 view .LVU578
 1527 00c8 0796     		str	r6, [sp, #28]
 500:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1528              		.loc 1 500 26 view .LVU579
 1529 00ca CDE90577 		strd	r7, r7, [sp, #20]
 501:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1530              		.loc 1 501 5 is_stmt 1 view .LVU580
 502:Src/adc.c     **** 
 1531              		.loc 1 502 5 view .LVU581
 1532 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 1533              	.LVL77:
 504:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1534              		.loc 1 504 5 view .LVU582
 504:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1535              		.loc 1 504 25 is_stmt 0 view .LVU583
 1536 00d2 4FF40063 		mov	r3, #2048
 507:Src/adc.c     **** 
 1537              		.loc 1 507 5 view .LVU584
 1538 00d6 05A9     		add	r1, sp, #20
 1539 00d8 5D48     		ldr	r0, .L221+24
 504:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1540              		.loc 1 504 25 view .LVU585
 1541 00da 0593     		str	r3, [sp, #20]
 505:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1542              		.loc 1 505 5 is_stmt 1 view .LVU586
 506:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1543              		.loc 1 506 5 view .LVU587
 507:Src/adc.c     **** 
 1544              		.loc 1 507 5 view .LVU588
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 45


 506:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1545              		.loc 1 506 26 is_stmt 0 view .LVU589
 1546 00dc CDE90676 		strd	r7, r6, [sp, #24]
 507:Src/adc.c     **** 
 1547              		.loc 1 507 5 view .LVU590
 1548 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 1549              	.LVL78:
 511:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1550              		.loc 1 511 5 is_stmt 1 view .LVU591
 511:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1551              		.loc 1 511 24 is_stmt 0 view .LVU592
 1552 00e4 5D4B     		ldr	r3, .L221+36
 1553 00e6 2360     		str	r3, [r4]
 512:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 1554              		.loc 1 512 5 is_stmt 1 view .LVU593
 513:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 1555              		.loc 1 513 5 view .LVU594
 514:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1556              		.loc 1 514 5 view .LVU595
 514:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1557              		.loc 1 514 27 is_stmt 0 view .LVU596
 1558 00e8 8020     		movs	r0, #128
 515:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1559              		.loc 1 515 40 view .LVU597
 1560 00ea 4FF48077 		mov	r7, #256
 516:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 1561              		.loc 1 516 37 view .LVU598
 1562 00ee 4FF48061 		mov	r1, #1024
 517:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 1563              		.loc 1 517 25 view .LVU599
 1564 00f2 2022     		movs	r2, #32
 518:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 1565              		.loc 1 518 29 view .LVU600
 1566 00f4 4FF40053 		mov	r3, #8192
 514:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1567              		.loc 1 514 27 view .LVU601
 1568 00f8 E060     		str	r0, [r4, #12]
 515:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1569              		.loc 1 515 5 is_stmt 1 view .LVU602
 519:Src/adc.c     ****     {
 1570              		.loc 1 519 9 is_stmt 0 view .LVU603
 1571 00fa 2046     		mov	r0, r4
 512:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 1572              		.loc 1 512 30 view .LVU604
 1573 00fc 6660     		str	r6, [r4, #4]
 513:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 1574              		.loc 1 513 30 view .LVU605
 1575 00fe A660     		str	r6, [r4, #8]
 516:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 1576              		.loc 1 516 37 view .LVU606
 1577 0100 C4E90471 		strd	r7, r1, [r4, #16]
 517:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 1578              		.loc 1 517 5 is_stmt 1 view .LVU607
 518:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 1579              		.loc 1 518 29 is_stmt 0 view .LVU608
 1580 0104 C4E90623 		strd	r2, r3, [r4, #24]
 519:Src/adc.c     ****     {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 46


 1581              		.loc 1 519 5 is_stmt 1 view .LVU609
 519:Src/adc.c     ****     {
 1582              		.loc 1 519 9 is_stmt 0 view .LVU610
 1583 0108 FFF7FEFF 		bl	HAL_DMA_Init
 1584              	.LVL79:
 519:Src/adc.c     ****     {
 1585              		.loc 1 519 8 view .LVU611
 1586 010c 0028     		cmp	r0, #0
 1587 010e C3D0     		beq	.L200
 521:Src/adc.c     ****     }
 1588              		.loc 1 521 7 is_stmt 1 view .LVU612
 1589 0110 40F20921 		movw	r1, #521
 1590 0114 5248     		ldr	r0, .L221+40
 1591 0116 FFF7FEFF 		bl	_Error_Handler
 1592              	.LVL80:
 524:Src/adc.c     **** 
 1593              		.loc 1 524 5 view .LVU613
 524:Src/adc.c     **** 
 1594              		.loc 1 524 5 view .LVU614
 1595 011a BDE7     		b	.L200
 1596              	.LVL81:
 1597              	.L220:
 483:Src/adc.c     ****     }
 1598              		.loc 1 483 7 view .LVU615
 1599              	.LBB18:
 483:Src/adc.c     ****     }
 1600              		.loc 1 483 7 view .LVU616
 483:Src/adc.c     ****     }
 1601              		.loc 1 483 7 view .LVU617
 1602 011c 514B     		ldr	r3, .L221+44
 1603 011e 5A69     		ldr	r2, [r3, #20]
 1604 0120 42F08052 		orr	r2, r2, #268435456
 1605 0124 5A61     		str	r2, [r3, #20]
 483:Src/adc.c     ****     }
 1606              		.loc 1 483 7 view .LVU618
 1607 0126 5B69     		ldr	r3, [r3, #20]
 1608 0128 03F08053 		and	r3, r3, #268435456
 1609 012c 0193     		str	r3, [sp, #4]
 483:Src/adc.c     ****     }
 1610              		.loc 1 483 7 view .LVU619
 1611 012e 019B     		ldr	r3, [sp, #4]
 1612 0130 BCE7     		b	.L190
 1613              	.L218:
 1614              	.LBE18:
 538:Src/adc.c     ****     }
 1615              		.loc 1 538 7 view .LVU620
 1616              	.LBB19:
 538:Src/adc.c     ****     }
 1617              		.loc 1 538 7 view .LVU621
 538:Src/adc.c     ****     }
 1618              		.loc 1 538 7 view .LVU622
 1619 0132 4C4B     		ldr	r3, .L221+44
 1620 0134 5A69     		ldr	r2, [r3, #20]
 1621 0136 42F08052 		orr	r2, r2, #268435456
 1622 013a 5A61     		str	r2, [r3, #20]
 538:Src/adc.c     ****     }
 1623              		.loc 1 538 7 view .LVU623
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 47


 1624 013c 5B69     		ldr	r3, [r3, #20]
 1625 013e 03F08053 		and	r3, r3, #268435456
 1626 0142 0293     		str	r3, [sp, #8]
 538:Src/adc.c     ****     }
 1627              		.loc 1 538 7 view .LVU624
 1628 0144 029B     		ldr	r3, [sp, #8]
 1629 0146 75E7     		b	.L194
 1630              	.LVL82:
 1631              	.L219:
 538:Src/adc.c     ****     }
 1632              		.loc 1 538 7 is_stmt 0 view .LVU625
 1633              	.LBE19:
 574:Src/adc.c     ****     }
 1634              		.loc 1 574 7 is_stmt 1 view .LVU626
 1635 0148 40F23E21 		movw	r1, #574
 1636 014c 4448     		ldr	r0, .L221+40
 1637 014e FFF7FEFF 		bl	_Error_Handler
 1638              	.LVL83:
 577:Src/adc.c     **** 
 1639              		.loc 1 577 5 view .LVU627
 577:Src/adc.c     **** 
 1640              		.loc 1 577 5 view .LVU628
 1641 0152 A1E7     		b	.L200
 1642              	.LVL84:
 1643              	.L216:
 589:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1644              		.loc 1 589 5 view .LVU629
 589:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1645              		.loc 1 589 30 is_stmt 0 view .LVU630
 1646 0154 444A     		ldr	r2, .L221+48
 1647 0156 1368     		ldr	r3, [r2]
 1648 0158 0133     		adds	r3, r3, #1
 590:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1649              		.loc 1 590 7 view .LVU631
 1650 015a 012B     		cmp	r3, #1
 589:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1651              		.loc 1 589 30 view .LVU632
 1652 015c 1360     		str	r3, [r2]
 590:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1653              		.loc 1 590 5 is_stmt 1 view .LVU633
 590:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1654              		.loc 1 590 7 is_stmt 0 view .LVU634
 1655 015e 09D1     		bne	.L197
 591:Src/adc.c     ****     }
 1656              		.loc 1 591 7 is_stmt 1 view .LVU635
 1657              	.LBB20:
 591:Src/adc.c     ****     }
 1658              		.loc 1 591 7 view .LVU636
 591:Src/adc.c     ****     }
 1659              		.loc 1 591 7 view .LVU637
 1660 0160 404B     		ldr	r3, .L221+44
 1661 0162 5A69     		ldr	r2, [r3, #20]
 1662 0164 42F00052 		orr	r2, r2, #536870912
 1663 0168 5A61     		str	r2, [r3, #20]
 591:Src/adc.c     ****     }
 1664              		.loc 1 591 7 view .LVU638
 1665 016a 5B69     		ldr	r3, [r3, #20]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 48


 1666 016c 03F00053 		and	r3, r3, #536870912
 1667 0170 0393     		str	r3, [sp, #12]
 591:Src/adc.c     ****     }
 1668              		.loc 1 591 7 view .LVU639
 1669 0172 039B     		ldr	r3, [sp, #12]
 1670              	.L197:
 1671              	.LBE20:
 599:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1672              		.loc 1 599 5 view .LVU640
 606:Src/adc.c     ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1673              		.loc 1 606 24 is_stmt 0 view .LVU641
 1674 0174 3D4C     		ldr	r4, .L221+52
 602:Src/adc.c     **** 
 1675              		.loc 1 602 5 view .LVU642
 1676 0176 3648     		ldr	r0, .L221+24
 1677              	.LVL85:
 599:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1678              		.loc 1 599 25 view .LVU643
 1679 0178 42F20302 		movw	r2, #8195
 600:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1680              		.loc 1 600 26 view .LVU644
 1681 017c 0323     		movs	r3, #3
 601:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1682              		.loc 1 601 26 view .LVU645
 1683 017e 0026     		movs	r6, #0
 602:Src/adc.c     **** 
 1684              		.loc 1 602 5 view .LVU646
 1685 0180 05A9     		add	r1, sp, #20
 599:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1686              		.loc 1 599 25 view .LVU647
 1687 0182 0592     		str	r2, [sp, #20]
 600:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1688              		.loc 1 600 5 is_stmt 1 view .LVU648
 601:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1689              		.loc 1 601 26 is_stmt 0 view .LVU649
 1690 0184 CDE90636 		strd	r3, r6, [sp, #24]
 602:Src/adc.c     **** 
 1691              		.loc 1 602 5 is_stmt 1 view .LVU650
 1692 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 1693              	.LVL86:
 606:Src/adc.c     ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1694              		.loc 1 606 5 view .LVU651
 606:Src/adc.c     ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1695              		.loc 1 606 24 is_stmt 0 view .LVU652
 1696 018c 384A     		ldr	r2, .L221+56
 1697 018e 2260     		str	r2, [r4]
 607:Src/adc.c     ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 1698              		.loc 1 607 5 is_stmt 1 view .LVU653
 608:Src/adc.c     ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 1699              		.loc 1 608 5 view .LVU654
 609:Src/adc.c     ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1700              		.loc 1 609 5 view .LVU655
 609:Src/adc.c     ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1701              		.loc 1 609 27 is_stmt 0 view .LVU656
 1702 0190 8023     		movs	r3, #128
 610:Src/adc.c     ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1703              		.loc 1 610 40 view .LVU657
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 49


 1704 0192 4FF48070 		mov	r0, #256
 611:Src/adc.c     ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 1705              		.loc 1 611 37 view .LVU658
 1706 0196 4FF48061 		mov	r1, #1024
 612:Src/adc.c     ****     hdma_adc3.Init.Priority = DMA_PRIORITY_HIGH;
 1707              		.loc 1 612 25 view .LVU659
 1708 019a 2022     		movs	r2, #32
 609:Src/adc.c     ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1709              		.loc 1 609 27 view .LVU660
 1710 019c E360     		str	r3, [r4, #12]
 610:Src/adc.c     ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1711              		.loc 1 610 5 is_stmt 1 view .LVU661
 610:Src/adc.c     ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1712              		.loc 1 610 40 is_stmt 0 view .LVU662
 1713 019e 2061     		str	r0, [r4, #16]
 611:Src/adc.c     ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 1714              		.loc 1 611 5 is_stmt 1 view .LVU663
 613:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 1715              		.loc 1 613 29 is_stmt 0 view .LVU664
 1716 01a0 4FF40053 		mov	r3, #8192
 614:Src/adc.c     ****     {
 1717              		.loc 1 614 9 view .LVU665
 1718 01a4 2046     		mov	r0, r4
 607:Src/adc.c     ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 1719              		.loc 1 607 30 view .LVU666
 1720 01a6 6660     		str	r6, [r4, #4]
 608:Src/adc.c     ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 1721              		.loc 1 608 30 view .LVU667
 1722 01a8 A660     		str	r6, [r4, #8]
 612:Src/adc.c     ****     hdma_adc3.Init.Priority = DMA_PRIORITY_HIGH;
 1723              		.loc 1 612 25 view .LVU668
 1724 01aa C4E90512 		strd	r1, r2, [r4, #20]
 613:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 1725              		.loc 1 613 5 is_stmt 1 view .LVU669
 613:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 1726              		.loc 1 613 29 is_stmt 0 view .LVU670
 1727 01ae E361     		str	r3, [r4, #28]
 614:Src/adc.c     ****     {
 1728              		.loc 1 614 5 is_stmt 1 view .LVU671
 614:Src/adc.c     ****     {
 1729              		.loc 1 614 9 is_stmt 0 view .LVU672
 1730 01b0 FFF7FEFF 		bl	HAL_DMA_Init
 1731              	.LVL87:
 614:Src/adc.c     ****     {
 1732              		.loc 1 614 8 view .LVU673
 1733 01b4 0028     		cmp	r0, #0
 1734 01b6 3FF46FAF 		beq	.L200
 616:Src/adc.c     ****     }
 1735              		.loc 1 616 7 is_stmt 1 view .LVU674
 1736 01ba 4FF41A71 		mov	r1, #616
 1737 01be 2848     		ldr	r0, .L221+40
 1738 01c0 FFF7FEFF 		bl	_Error_Handler
 1739              	.LVL88:
 619:Src/adc.c     **** 
 1740              		.loc 1 619 5 view .LVU675
 619:Src/adc.c     **** 
 1741              		.loc 1 619 5 view .LVU676
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 50


 1742 01c4 68E7     		b	.L200
 1743              	.LVL89:
 1744              	.L217:
 631:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1745              		.loc 1 631 5 view .LVU677
 631:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1746              		.loc 1 631 30 is_stmt 0 view .LVU678
 1747 01c6 284A     		ldr	r2, .L221+48
 1748 01c8 1368     		ldr	r3, [r2]
 1749 01ca 0133     		adds	r3, r3, #1
 632:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1750              		.loc 1 632 7 view .LVU679
 1751 01cc 012B     		cmp	r3, #1
 631:Src/adc.c     ****     if(HAL_RCC_ADC34_CLK_ENABLED==1){
 1752              		.loc 1 631 30 view .LVU680
 1753 01ce 1360     		str	r3, [r2]
 632:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1754              		.loc 1 632 5 is_stmt 1 view .LVU681
 632:Src/adc.c     ****       __HAL_RCC_ADC34_CLK_ENABLE();
 1755              		.loc 1 632 7 is_stmt 0 view .LVU682
 1756 01d0 09D1     		bne	.L199
 633:Src/adc.c     ****     }
 1757              		.loc 1 633 7 is_stmt 1 view .LVU683
 1758              	.LBB21:
 633:Src/adc.c     ****     }
 1759              		.loc 1 633 7 view .LVU684
 633:Src/adc.c     ****     }
 1760              		.loc 1 633 7 view .LVU685
 1761 01d2 244B     		ldr	r3, .L221+44
 1762 01d4 5A69     		ldr	r2, [r3, #20]
 1763 01d6 42F00052 		orr	r2, r2, #536870912
 1764 01da 5A61     		str	r2, [r3, #20]
 633:Src/adc.c     ****     }
 1765              		.loc 1 633 7 view .LVU686
 1766 01dc 5B69     		ldr	r3, [r3, #20]
 1767 01de 03F00053 		and	r3, r3, #536870912
 1768 01e2 0493     		str	r3, [sp, #16]
 633:Src/adc.c     ****     }
 1769              		.loc 1 633 7 view .LVU687
 1770 01e4 049B     		ldr	r3, [sp, #16]
 1771              	.L199:
 1772              	.LBE21:
 641:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1773              		.loc 1 641 5 view .LVU688
 648:Src/adc.c     ****     hdma_adc4.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1774              		.loc 1 648 24 is_stmt 0 view .LVU689
 1775 01e6 234C     		ldr	r4, .L221+60
 644:Src/adc.c     **** 
 1776              		.loc 1 644 5 view .LVU690
 1777 01e8 1948     		ldr	r0, .L221+24
 1778              	.LVL90:
 641:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1779              		.loc 1 641 25 view .LVU691
 1780 01ea 4FF45042 		mov	r2, #53248
 642:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1781              		.loc 1 642 26 view .LVU692
 1782 01ee 0323     		movs	r3, #3
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 51


 643:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1783              		.loc 1 643 26 view .LVU693
 1784 01f0 0026     		movs	r6, #0
 644:Src/adc.c     **** 
 1785              		.loc 1 644 5 view .LVU694
 1786 01f2 05A9     		add	r1, sp, #20
 641:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1787              		.loc 1 641 25 view .LVU695
 1788 01f4 0592     		str	r2, [sp, #20]
 642:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1789              		.loc 1 642 5 is_stmt 1 view .LVU696
 643:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1790              		.loc 1 643 26 is_stmt 0 view .LVU697
 1791 01f6 CDE90636 		strd	r3, r6, [sp, #24]
 644:Src/adc.c     **** 
 1792              		.loc 1 644 5 is_stmt 1 view .LVU698
 1793 01fa FFF7FEFF 		bl	HAL_GPIO_Init
 1794              	.LVL91:
 648:Src/adc.c     ****     hdma_adc4.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1795              		.loc 1 648 5 view .LVU699
 648:Src/adc.c     ****     hdma_adc4.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1796              		.loc 1 648 24 is_stmt 0 view .LVU700
 1797 01fe 1E4A     		ldr	r2, .L221+64
 1798 0200 2260     		str	r2, [r4]
 649:Src/adc.c     ****     hdma_adc4.Init.PeriphInc = DMA_PINC_DISABLE;
 1799              		.loc 1 649 5 is_stmt 1 view .LVU701
 650:Src/adc.c     ****     hdma_adc4.Init.MemInc = DMA_MINC_ENABLE;
 1800              		.loc 1 650 5 view .LVU702
 651:Src/adc.c     ****     hdma_adc4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1801              		.loc 1 651 5 view .LVU703
 651:Src/adc.c     ****     hdma_adc4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1802              		.loc 1 651 27 is_stmt 0 view .LVU704
 1803 0202 8023     		movs	r3, #128
 652:Src/adc.c     ****     hdma_adc4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1804              		.loc 1 652 40 view .LVU705
 1805 0204 4FF48070 		mov	r0, #256
 653:Src/adc.c     ****     hdma_adc4.Init.Mode = DMA_CIRCULAR;
 1806              		.loc 1 653 37 view .LVU706
 1807 0208 4FF48061 		mov	r1, #1024
 654:Src/adc.c     ****     hdma_adc4.Init.Priority = DMA_PRIORITY_HIGH;
 1808              		.loc 1 654 25 view .LVU707
 1809 020c 2022     		movs	r2, #32
 651:Src/adc.c     ****     hdma_adc4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1810              		.loc 1 651 27 view .LVU708
 1811 020e E360     		str	r3, [r4, #12]
 652:Src/adc.c     ****     hdma_adc4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1812              		.loc 1 652 5 is_stmt 1 view .LVU709
 652:Src/adc.c     ****     hdma_adc4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1813              		.loc 1 652 40 is_stmt 0 view .LVU710
 1814 0210 2061     		str	r0, [r4, #16]
 653:Src/adc.c     ****     hdma_adc4.Init.Mode = DMA_CIRCULAR;
 1815              		.loc 1 653 5 is_stmt 1 view .LVU711
 655:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc4) != HAL_OK)
 1816              		.loc 1 655 29 is_stmt 0 view .LVU712
 1817 0212 4FF40053 		mov	r3, #8192
 656:Src/adc.c     ****     {
 1818              		.loc 1 656 9 view .LVU713
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 52


 1819 0216 2046     		mov	r0, r4
 649:Src/adc.c     ****     hdma_adc4.Init.PeriphInc = DMA_PINC_DISABLE;
 1820              		.loc 1 649 30 view .LVU714
 1821 0218 6660     		str	r6, [r4, #4]
 650:Src/adc.c     ****     hdma_adc4.Init.MemInc = DMA_MINC_ENABLE;
 1822              		.loc 1 650 30 view .LVU715
 1823 021a A660     		str	r6, [r4, #8]
 654:Src/adc.c     ****     hdma_adc4.Init.Priority = DMA_PRIORITY_HIGH;
 1824              		.loc 1 654 25 view .LVU716
 1825 021c C4E90512 		strd	r1, r2, [r4, #20]
 655:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc4) != HAL_OK)
 1826              		.loc 1 655 5 is_stmt 1 view .LVU717
 655:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc4) != HAL_OK)
 1827              		.loc 1 655 29 is_stmt 0 view .LVU718
 1828 0220 E361     		str	r3, [r4, #28]
 656:Src/adc.c     ****     {
 1829              		.loc 1 656 5 is_stmt 1 view .LVU719
 656:Src/adc.c     ****     {
 1830              		.loc 1 656 9 is_stmt 0 view .LVU720
 1831 0222 FFF7FEFF 		bl	HAL_DMA_Init
 1832              	.LVL92:
 656:Src/adc.c     ****     {
 1833              		.loc 1 656 8 view .LVU721
 1834 0226 0028     		cmp	r0, #0
 1835 0228 3FF436AF 		beq	.L200
 658:Src/adc.c     ****     }
 1836              		.loc 1 658 7 is_stmt 1 view .LVU722
 1837 022c 40F29221 		movw	r1, #658
 1838 0230 0B48     		ldr	r0, .L221+40
 1839 0232 FFF7FEFF 		bl	_Error_Handler
 1840              	.LVL93:
 1841 0236 2FE7     		b	.L200
 1842              	.L222:
 1843              		.align	2
 1844              	.L221:
 1845 0238 00010050 		.word	1342177536
 1846 023c 00040050 		.word	1342178304
 1847 0240 00050050 		.word	1342178560
 1848 0244 00000000 		.word	.LANCHOR0
 1849 0248 00080048 		.word	1207961600
 1850 024c 00000000 		.word	hdma_adc2
 1851 0250 00040048 		.word	1207960576
 1852 0254 08040240 		.word	1073873928
 1853 0258 00000000 		.word	hdma_adc1
 1854 025c 08000240 		.word	1073872904
 1855 0260 00000000 		.word	.LC0
 1856 0264 00100240 		.word	1073876992
 1857 0268 00000000 		.word	.LANCHOR1
 1858 026c 00000000 		.word	hdma_adc3
 1859 0270 58040240 		.word	1073874008
 1860 0274 00000000 		.word	hdma_adc4
 1861 0278 1C040240 		.word	1073873948
 1862              		.cfi_endproc
 1863              	.LFE301:
 1865              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 1866              		.align	1
 1867              		.p2align 2,,3
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 53


 1868              		.global	HAL_ADC_MspDeInit
 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu fpv4-sp-d16
 1874              	HAL_ADC_MspDeInit:
 1875              	.LVL94:
 1876              	.LFB302:
 668:Src/adc.c     **** 
 669:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 670:Src/adc.c     **** {
 1877              		.loc 1 670 1 view -0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 671:Src/adc.c     **** 
 672:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 1881              		.loc 1 672 3 view .LVU724
 1882              		.loc 1 672 15 is_stmt 0 view .LVU725
 1883 0000 0368     		ldr	r3, [r0]
 1884              		.loc 1 672 5 view .LVU726
 1885 0002 B3F1A04F 		cmp	r3, #1342177280
 670:Src/adc.c     **** 
 1886              		.loc 1 670 1 view .LVU727
 1887 0006 10B5     		push	{r4, lr}
 1888              	.LCFI30:
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 4, -8
 1891              		.cfi_offset 14, -4
 670:Src/adc.c     **** 
 1892              		.loc 1 670 1 view .LVU728
 1893 0008 0446     		mov	r4, r0
 1894              		.loc 1 672 5 view .LVU729
 1895 000a 13D0     		beq	.L230
 673:Src/adc.c     ****   {
 674:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 675:Src/adc.c     **** 
 676:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 677:Src/adc.c     ****     /* Peripheral clock disable */
 678:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 679:Src/adc.c     ****     /**  HAL_RCC_ADC12_CLK_ENABLED--;
 680:Src/adc.c     ****     *  if(HAL_RCC_ADC12_CLK_ENABLED==0){
 681:Src/adc.c     ****     *    __HAL_RCC_ADC12_CLK_DISABLE();
 682:Src/adc.c     ****     **/
 683:Src/adc.c     ****   
 684:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 685:Src/adc.c     ****     PC0     ------> ADC1_IN6
 686:Src/adc.c     ****     PC2     ------> ADC1_IN8
 687:Src/adc.c     ****     PC3     ------> ADC1_IN9
 688:Src/adc.c     ****     PA0     ------> ADC1_IN1
 689:Src/adc.c     ****     PA1     ------> ADC1_IN2
 690:Src/adc.c     ****     PB11     ------> ADC1_IN14 
 691:Src/adc.c     ****     */
 692:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3);
 693:Src/adc.c     **** 
 694:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|ADC1_IN2_Pin);
 695:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 54


 696:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11);
 697:Src/adc.c     **** 
 698:Src/adc.c     ****     /* ADC1 DMA DeInit */
 699:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 700:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 701:Src/adc.c     **** 
 702:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 703:Src/adc.c     ****   }
 704:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 1896              		.loc 1 704 8 is_stmt 1 view .LVU730
 1897              		.loc 1 704 10 is_stmt 0 view .LVU731
 1898 000c 164A     		ldr	r2, .L234
 1899 000e 9342     		cmp	r3, r2
 1900 0010 1CD0     		beq	.L231
 705:Src/adc.c     ****   {
 706:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 707:Src/adc.c     **** 
 708:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 709:Src/adc.c     ****     /* Peripheral clock disable */
 710:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 711:Src/adc.c     ****     /**  HAL_RCC_ADC12_CLK_ENABLED--;
 712:Src/adc.c     ****     *  if(HAL_RCC_ADC12_CLK_ENABLED==0){
 713:Src/adc.c     ****     *    __HAL_RCC_ADC12_CLK_DISABLE();
 714:Src/adc.c     ****     **/
 715:Src/adc.c     ****   
 716:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 717:Src/adc.c     ****     PC1     ------> ADC2_IN7
 718:Src/adc.c     ****     PA4     ------> ADC2_IN1
 719:Src/adc.c     ****     PC4     ------> ADC2_IN5
 720:Src/adc.c     ****     PB2     ------> ADC2_IN12 
 721:Src/adc.c     ****     */
 722:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, ADC2_IN7_Pin|GPIO_PIN_4);
 723:Src/adc.c     **** 
 724:Src/adc.c     ****     HAL_GPIO_DeInit(ADC2_IN1_GPIO_Port, ADC2_IN1_Pin);
 725:Src/adc.c     **** 
 726:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 727:Src/adc.c     **** 
 728:Src/adc.c     ****     /* ADC2 DMA DeInit */
 729:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 730:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 731:Src/adc.c     **** 
 732:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 733:Src/adc.c     ****   }
 734:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 1901              		.loc 1 734 8 is_stmt 1 view .LVU732
 1902              		.loc 1 734 10 is_stmt 0 view .LVU733
 1903 0012 164A     		ldr	r2, .L234+4
 1904 0014 9342     		cmp	r3, r2
 1905 0016 24D0     		beq	.L232
 735:Src/adc.c     ****   {
 736:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 737:Src/adc.c     **** 
 738:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 0 */
 739:Src/adc.c     ****     /* Peripheral clock disable */
 740:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 741:Src/adc.c     ****     /**  HAL_RCC_ADC34_CLK_ENABLED--;
 742:Src/adc.c     ****     *  if(HAL_RCC_ADC34_CLK_ENABLED==0){
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 55


 743:Src/adc.c     ****     *    __HAL_RCC_ADC34_CLK_DISABLE();
 744:Src/adc.c     ****     **/
 745:Src/adc.c     ****   
 746:Src/adc.c     ****     /**ADC3 GPIO Configuration    
 747:Src/adc.c     ****     PB0     ------> ADC3_IN12
 748:Src/adc.c     ****     PB1     ------> ADC3_IN1
 749:Src/adc.c     ****     PB13     ------> ADC3_IN5 
 750:Src/adc.c     ****     */
 751:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, ADC3_IN12_Pin|GPIO_PIN_1|GPIO_PIN_13);
 752:Src/adc.c     **** 
 753:Src/adc.c     ****     /* ADC3 DMA DeInit */
 754:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 755:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 756:Src/adc.c     **** 
 757:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 1 */
 758:Src/adc.c     ****   }
 759:Src/adc.c     ****   else if(adcHandle->Instance==ADC4)
 1906              		.loc 1 759 8 is_stmt 1 view .LVU734
 1907              		.loc 1 759 10 is_stmt 0 view .LVU735
 1908 0018 154A     		ldr	r2, .L234+8
 1909 001a 9342     		cmp	r3, r2
 1910 001c 00D0     		beq	.L233
 760:Src/adc.c     ****   {
 761:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspDeInit 0 */
 762:Src/adc.c     **** 
 763:Src/adc.c     ****   /* USER CODE END ADC4_MspDeInit 0 */
 764:Src/adc.c     ****     /* Peripheral clock disable */
 765:Src/adc.c     ****     /* Be sure that all peripheral instances that share the same clock need to be disabled */
 766:Src/adc.c     ****     /**  HAL_RCC_ADC34_CLK_ENABLED--;
 767:Src/adc.c     ****     *  if(HAL_RCC_ADC34_CLK_ENABLED==0){
 768:Src/adc.c     ****     *    __HAL_RCC_ADC34_CLK_DISABLE();
 769:Src/adc.c     ****     **/
 770:Src/adc.c     ****   
 771:Src/adc.c     ****     /**ADC4 GPIO Configuration    
 772:Src/adc.c     ****     PB12     ------> ADC4_IN3
 773:Src/adc.c     ****     PB14     ------> ADC4_IN4
 774:Src/adc.c     ****     PB15     ------> ADC4_IN5 
 775:Src/adc.c     ****     */
 776:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, VT1_Pin|VT2_Pin|VT3_Pin);
 777:Src/adc.c     **** 
 778:Src/adc.c     ****     /* ADC4 DMA DeInit */
 779:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 780:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspDeInit 1 */
 781:Src/adc.c     **** 
 782:Src/adc.c     ****   /* USER CODE END ADC4_MspDeInit 1 */
 783:Src/adc.c     ****   }
 784:Src/adc.c     **** } 
 1911              		.loc 1 784 1 view .LVU736
 1912 001e 10BD     		pop	{r4, pc}
 1913              	.L233:
 776:Src/adc.c     **** 
 1914              		.loc 1 776 5 is_stmt 1 view .LVU737
 1915 0020 4FF45041 		mov	r1, #53248
 1916              	.LVL95:
 1917              	.L229:
 776:Src/adc.c     **** 
 1918              		.loc 1 776 5 is_stmt 0 view .LVU738
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 56


 1919 0024 1348     		ldr	r0, .L234+12
 1920 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1921              	.LVL96:
 779:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspDeInit 1 */
 1922              		.loc 1 779 5 is_stmt 1 view .LVU739
 1923 002a E06B     		ldr	r0, [r4, #60]
 1924              		.loc 1 784 1 is_stmt 0 view .LVU740
 1925 002c BDE81040 		pop	{r4, lr}
 1926              	.LCFI31:
 1927              		.cfi_remember_state
 1928              		.cfi_restore 14
 1929              		.cfi_restore 4
 1930              		.cfi_def_cfa_offset 0
 1931              	.LVL97:
 779:Src/adc.c     ****   /* USER CODE BEGIN ADC4_MspDeInit 1 */
 1932              		.loc 1 779 5 view .LVU741
 1933 0030 FFF7FEBF 		b	HAL_DMA_DeInit
 1934              	.LVL98:
 1935              	.L230:
 1936              	.LCFI32:
 1937              		.cfi_restore_state
 692:Src/adc.c     **** 
 1938              		.loc 1 692 5 is_stmt 1 view .LVU742
 1939 0034 0D21     		movs	r1, #13
 1940 0036 1048     		ldr	r0, .L234+16
 1941              	.LVL99:
 692:Src/adc.c     **** 
 1942              		.loc 1 692 5 is_stmt 0 view .LVU743
 1943 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1944              	.LVL100:
 694:Src/adc.c     **** 
 1945              		.loc 1 694 5 is_stmt 1 view .LVU744
 1946 003c 0321     		movs	r1, #3
 1947 003e 4FF09040 		mov	r0, #1207959552
 1948 0042 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1949              	.LVL101:
 696:Src/adc.c     **** 
 1950              		.loc 1 696 5 view .LVU745
 1951 0046 4FF40061 		mov	r1, #2048
 1952 004a EBE7     		b	.L229
 1953              	.LVL102:
 1954              	.L231:
 722:Src/adc.c     **** 
 1955              		.loc 1 722 5 view .LVU746
 1956 004c 1221     		movs	r1, #18
 1957 004e 0A48     		ldr	r0, .L234+16
 1958              	.LVL103:
 722:Src/adc.c     **** 
 1959              		.loc 1 722 5 is_stmt 0 view .LVU747
 1960 0050 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1961              	.LVL104:
 724:Src/adc.c     **** 
 1962              		.loc 1 724 5 is_stmt 1 view .LVU748
 1963 0054 1021     		movs	r1, #16
 1964 0056 4FF09040 		mov	r0, #1207959552
 1965 005a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1966              	.LVL105:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 57


 726:Src/adc.c     **** 
 1967              		.loc 1 726 5 view .LVU749
 1968 005e 0421     		movs	r1, #4
 1969 0060 E0E7     		b	.L229
 1970              	.LVL106:
 1971              	.L232:
 751:Src/adc.c     **** 
 1972              		.loc 1 751 5 view .LVU750
 1973 0062 42F20301 		movw	r1, #8195
 1974 0066 DDE7     		b	.L229
 1975              	.L235:
 1976              		.align	2
 1977              	.L234:
 1978 0068 00010050 		.word	1342177536
 1979 006c 00040050 		.word	1342178304
 1980 0070 00050050 		.word	1342178560
 1981 0074 00040048 		.word	1207960576
 1982 0078 00080048 		.word	1207961600
 1983              		.cfi_endproc
 1984              	.LFE302:
 1986              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1987              		.align	1
 1988              		.p2align 2,,3
 1989              		.global	HAL_ADC_ConvHalfCpltCallback
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu fpv4-sp-d16
 1995              	HAL_ADC_ConvHalfCpltCallback:
 1996              	.LVL107:
 1997              	.LFB305:
 785:Src/adc.c     **** 
 786:Src/adc.c     **** /* USER CODE BEGIN 1 */
 787:Src/adc.c     **** 
 788:Src/adc.c     **** //
 789:Src/adc.c     **** //  Map the handle supplied by the HAL into an index we can use into our
 790:Src/adc.c     **** //  datastructures.
 791:Src/adc.c     **** //
 792:Src/adc.c     **** static inline int handle_to_index (ADC_HandleTypeDef* hadc)
 793:Src/adc.c     **** {
 794:Src/adc.c     ****   if (hadc == &hadc1)
 795:Src/adc.c     ****     return 0;
 796:Src/adc.c     ****   if (hadc == &hadc2)
 797:Src/adc.c     ****     return 1;
 798:Src/adc.c     ****   if (hadc == &hadc3)
 799:Src/adc.c     ****     return 2;
 800:Src/adc.c     ****   return 3;
 801:Src/adc.c     **** }
 802:Src/adc.c     **** 
 803:Src/adc.c     **** //
 804:Src/adc.c     **** // The bulk of the ISR processing is identical whether we're half-full or full-full.
 805:Src/adc.c     **** // The half Vs full distinction only impacts which half of the DMA buffer we extract from.
 806:Src/adc.c     **** // The two callback routines demux that and both call here to do all the real work.
 807:Src/adc.c     **** //
 808:Src/adc.c     **** static inline void ConvCpltEither (ADC_HandleTypeDef* hadc, int dma_buff_index_base) {
 809:Src/adc.c     ****   int adc_index;
 810:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 58


 811:Src/adc.c     ****   //
 812:Src/adc.c     ****   // Ignore data for the first 10 seconds after booting, gives time
 813:Src/adc.c     ****   // to arm the scope
 814:Src/adc.c     ****   // 
 815:Src/adc.c     ****   if ((HAL_GetTick() < 10000))
 816:Src/adc.c     ****       return;
 817:Src/adc.c     **** 
 818:Src/adc.c     ****   //
 819:Src/adc.c     ****   // Determine which ADC has just crossed a boundary and set up pointers to our
 820:Src/adc.c     ****   // datastructures for it.
 821:Src/adc.c     ****   //
 822:Src/adc.c     ****   adc_index = handle_to_index(hadc);
 823:Src/adc.c     **** 
 824:Src/adc.c     **** 
 825:Src/adc.c     ****   // 
 826:Src/adc.c     ****   // We only want to cop the overhead of the for-loop dma buffer traversal once.
 827:Src/adc.c     ****   // All three Current ADCs interrupt within nsecs of each other, so it doesn't
 828:Src/adc.c     ****   // matter which one we choose.  Long before we get to the far end of the buffer
 829:Src/adc.c     ****   // they'll have all completed... actually, they all complete before we get in here.
 830:Src/adc.c     ****   // But we do support quite long delays between I and V, so it's important we don't
 831:Src/adc.c     ****   // start processing the data when one of the I interrupts come in if the corresponding
 832:Src/adc.c     ****   // V interrupt isn't due in for potentially msecs.  start_ADCs() has helpfully left
 833:Src/adc.c     ****   // us a clue in isr_index.  It'll be set to 3 (to indicate ADC4)  when we're expecting
 834:Src/adc.c     ****   // V last or we're when we're expecting all four at once (no lag), and 2 otherwise.
 835:Src/adc.c     ****   // That's the one we process and we simply ignore interrupts from the remaining 3 ADCs.
 836:Src/adc.c     ****   //
 837:Src/adc.c     ****   if (adc_index == isr_index) {  // Voltage Vs Current, whichever comes last
 838:Src/adc.c     **** 
 839:Src/adc.c     ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);   // For scope timing
 840:Src/adc.c     **** 
 841:Src/adc.c     ****     //
 842:Src/adc.c     ****     // Knowing which value to get from where in the DMA buffer is all about
 843:Src/adc.c     ****     // knowing how the ADC sequence slots have been configured.  In this example
 844:Src/adc.c     ****     // all ADCs have been configured with 7 slots as follows:
 845:Src/adc.c     ****     //
 846:Src/adc.c     ****     //  slot     ADC1      ADC2      ADC3      ADC4
 847:Src/adc.c     ****     //    1      ch0       VOpAmp2   ch2       V1
 848:Src/adc.c     ****     //    2      ch3(CT1)  ch4(CT2)  ch5(CT3)  V2
 849:Src/adc.c     ****     //    3      ch6       VOpAmp2   ch8       V3
 850:Src/adc.c     ****     //    4      ch9       ch10      Vref      V1
 851:Src/adc.c     ****     //    5      ch11      ch12(CT4) fill      V2
 852:Src/adc.c     ****     //    6      ch13      ch14      fill      V3
 853:Src/adc.c     ****     //    7      Temp      fill      fill      V1
 854:Src/adc.c     ****     //
 855:Src/adc.c     ****     for (int i=0; i<SEQS_PER_HALF; i++) {
 856:Src/adc.c     ****       //
 857:Src/adc.c     ****       // Process the first three slots which are fully populated
 858:Src/adc.c     ****       //
 859:Src/adc.c     ****       int chan = 0;
 860:Src/adc.c     ****       for (int slot=0; slot<3; slot++)
 861:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 862:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 863:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 864:Src/adc.c     **** 			  chan++);
 865:Src/adc.c     ****       //
 866:Src/adc.c     ****       // Process the last three slots which are half populated
 867:Src/adc.c     ****       //
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 59


 868:Src/adc.c     ****       for (int slot=3; slot<6; slot++)
 869:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 870:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 871:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 872:Src/adc.c     **** 			  chan++);
 873:Src/adc.c     ****     }
 874:Src/adc.c     **** 
 875:Src/adc.c     ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 876:Src/adc.c     ****   }
 877:Src/adc.c     **** }
 878:Src/adc.c     **** 
 879:Src/adc.c     **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 880:Src/adc.c     **** {
 1998              		.loc 1 880 1 view -0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 881:Src/adc.c     ****   ConvCpltEither(hadc, 0);
 2002              		.loc 1 881 3 view .LVU752
 2003              	.LBB36:
 2004              	.LBI36:
 808:Src/adc.c     ****   int adc_index;
 2005              		.loc 1 808 20 view .LVU753
 2006              	.LBB37:
 809:Src/adc.c     **** 
 2007              		.loc 1 809 3 view .LVU754
 815:Src/adc.c     ****       return;
 2008              		.loc 1 815 3 view .LVU755
 2009              	.LBE37:
 2010              	.LBE36:
 880:Src/adc.c     ****   ConvCpltEither(hadc, 0);
 2011              		.loc 1 880 1 is_stmt 0 view .LVU756
 2012 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2013              	.LCFI33:
 2014              		.cfi_def_cfa_offset 40
 2015              		.cfi_offset 3, -40
 2016              		.cfi_offset 4, -36
 2017              		.cfi_offset 5, -32
 2018              		.cfi_offset 6, -28
 2019              		.cfi_offset 7, -24
 2020              		.cfi_offset 8, -20
 2021              		.cfi_offset 9, -16
 2022              		.cfi_offset 10, -12
 2023              		.cfi_offset 11, -8
 2024              		.cfi_offset 14, -4
 880:Src/adc.c     ****   ConvCpltEither(hadc, 0);
 2025              		.loc 1 880 1 view .LVU757
 2026 0004 0446     		mov	r4, r0
 2027              	.LBB60:
 2028              	.LBB57:
 815:Src/adc.c     ****       return;
 2029              		.loc 1 815 8 view .LVU758
 2030 0006 FFF7FEFF 		bl	HAL_GetTick
 2031              	.LVL108:
 815:Src/adc.c     ****       return;
 2032              		.loc 1 815 6 view .LVU759
 2033 000a 42F20F73 		movw	r3, #9999
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 60


 2034 000e 9842     		cmp	r0, r3
 2035 0010 0ED9     		bls	.L236
 822:Src/adc.c     **** 
 2036              		.loc 1 822 3 is_stmt 1 view .LVU760
 2037              	.LVL109:
 2038              	.LBB38:
 2039              	.LBI38:
 792:Src/adc.c     **** {
 2040              		.loc 1 792 19 view .LVU761
 2041              	.LBB39:
 794:Src/adc.c     ****     return 0;
 2042              		.loc 1 794 3 view .LVU762
 794:Src/adc.c     ****     return 0;
 2043              		.loc 1 794 6 is_stmt 0 view .LVU763
 2044 0012 2F4B     		ldr	r3, .L252
 2045 0014 9C42     		cmp	r4, r3
 2046 0016 59D0     		beq	.L244
 796:Src/adc.c     ****     return 1;
 2047              		.loc 1 796 3 is_stmt 1 view .LVU764
 796:Src/adc.c     ****     return 1;
 2048              		.loc 1 796 6 is_stmt 0 view .LVU765
 2049 0018 2E4B     		ldr	r3, .L252+4
 2050 001a 9C42     		cmp	r4, r3
 2051 001c 54D0     		beq	.L245
 798:Src/adc.c     ****     return 2;
 2052              		.loc 1 798 3 is_stmt 1 view .LVU766
 798:Src/adc.c     ****     return 2;
 2053              		.loc 1 798 6 is_stmt 0 view .LVU767
 2054 001e 2E4B     		ldr	r3, .L252+8
 799:Src/adc.c     ****   return 3;
 2055              		.loc 1 799 12 view .LVU768
 2056 0020 9C42     		cmp	r4, r3
 2057 0022 14BF     		ite	ne
 2058 0024 0324     		movne	r4, #3
 2059 0026 0224     		moveq	r4, #2
 2060              	.LVL110:
 2061              	.L238:
 799:Src/adc.c     ****   return 3;
 2062              		.loc 1 799 12 view .LVU769
 2063              	.LBE39:
 2064              	.LBE38:
 837:Src/adc.c     **** 
 2065              		.loc 1 837 3 is_stmt 1 view .LVU770
 837:Src/adc.c     **** 
 2066              		.loc 1 837 17 is_stmt 0 view .LVU771
 2067 0028 2C4B     		ldr	r3, .L252+12
 837:Src/adc.c     **** 
 2068              		.loc 1 837 6 view .LVU772
 2069 002a 1B68     		ldr	r3, [r3]
 2070 002c A342     		cmp	r3, r4
 2071 002e 01D0     		beq	.L251
 2072              	.LVL111:
 2073              	.L236:
 837:Src/adc.c     **** 
 2074              		.loc 1 837 6 view .LVU773
 2075              	.LBE57:
 2076              	.LBE60:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 61


 882:Src/adc.c     **** }
 2077              		.loc 1 882 1 view .LVU774
 2078 0030 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2079              	.LVL112:
 2080              	.L251:
 2081              	.LBB61:
 2082              	.LBB58:
 2083              	.LBB41:
 2084              	.LBI41:
 808:Src/adc.c     ****   int adc_index;
 2085              		.loc 1 808 20 is_stmt 1 view .LVU775
 2086              	.LBB42:
 839:Src/adc.c     **** 
 2087              		.loc 1 839 5 view .LVU776
 2088 0034 0022     		movs	r2, #0
 2089 0036 2021     		movs	r1, #32
 2090 0038 4FF09040 		mov	r0, #1207959552
 2091 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2092              	.LVL113:
 855:Src/adc.c     ****       //
 2093              		.loc 1 855 5 view .LVU777
 2094              	.LBB43:
 855:Src/adc.c     ****       //
 2095              		.loc 1 855 10 view .LVU778
 855:Src/adc.c     ****       //
 2096              		.loc 1 855 10 is_stmt 0 view .LVU779
 2097 0040 274D     		ldr	r5, .L252+16
 2098              	.LBE43:
 839:Src/adc.c     **** 
 2099              		.loc 1 839 5 view .LVU780
 2100 0042 0327     		movs	r7, #3
 2101              	.LBB53:
 2102              	.LBB44:
 2103              	.LBB45:
 2104              	.LBB46:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2105              		.loc 1 862 4 view .LVU781
 2106 0044 4FF4AF6A 		mov	r10, #1400
 2107              	.LBE46:
 2108              	.LBE45:
 2109              	.LBB48:
 2110              	.LBB49:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2111              		.loc 1 870 4 view .LVU782
 2112 0048 41F26809 		movw	r9, #4200
 2113              	.LVL114:
 2114              	.L239:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2115              		.loc 1 870 4 view .LVU783
 2116 004c A7F1030B 		sub	fp, r7, #3
 2117              	.LBE49:
 2118              	.LBE48:
 859:Src/adc.c     ****       for (int slot=0; slot<3; slot++)
 2119              		.loc 1 859 11 view .LVU784
 2120 0050 0024     		movs	r4, #0
 2121              	.LVL115:
 2122              	.L243:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 62


 859:Src/adc.c     ****       for (int slot=0; slot<3; slot++)
 2123              		.loc 1 859 11 view .LVU785
 2124 0052 0BF58358 		add	r8, fp, #4192
 2125 0056 08F10808 		add	r8, r8, #8
 2126              	.LBB51:
 2127              	.LBB47:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2128              		.loc 1 861 11 view .LVU786
 2129 005a 0026     		movs	r6, #0
 2130              	.LVL116:
 2131              	.L240:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2132              		.loc 1 862 4 is_stmt 1 view .LVU787
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2133              		.loc 1 862 4 is_stmt 0 view .LVU788
 2134 005c 0AFB06B2 		mla	r2, r10, r6, fp
 2135 0060 35F81800 		ldrh	r0, [r5, r8, lsl #1]
 2136 0064 35F81210 		ldrh	r1, [r5, r2, lsl #1]
 2137 0068 A219     		adds	r2, r4, r6
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2138              		.loc 1 861 28 view .LVU789
 2139 006a 0136     		adds	r6, r6, #1
 2140              	.LVL117:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2141              		.loc 1 862 4 view .LVU790
 2142 006c FFF7FEFF 		bl	process_VI_pair
 2143              	.LVL118:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2144              		.loc 1 861 2 view .LVU791
 2145 0070 032E     		cmp	r6, #3
 2146 0072 F3D1     		bne	.L240
 2147 0074 0334     		adds	r4, r4, #3
 2148              	.LVL119:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2149              		.loc 1 861 2 view .LVU792
 2150              	.LBE47:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2151              		.loc 1 860 7 view .LVU793
 2152 0076 092C     		cmp	r4, #9
 2153 0078 0BF1010B 		add	fp, fp, #1
 2154              	.LVL120:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2155              		.loc 1 860 7 view .LVU794
 2156 007c E9D1     		bne	.L243
 2157 007e 3E46     		mov	r6, r7
 2158              	.LVL121:
 2159              	.L241:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2160              		.loc 1 860 7 view .LVU795
 2161              	.LBE51:
 2162              	.LBB52:
 2163              	.LBB50:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2164              		.loc 1 870 4 is_stmt 1 view .LVU796
 2165 0080 06EB090B 		add	fp, r6, r9
 2166 0084 2246     		mov	r2, r4
 2167 0086 35F81B00 		ldrh	r0, [r5, fp, lsl #1]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 63


 2168 008a 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 2169 008e FFF7FEFF 		bl	process_VI_pair
 2170              	.LVL122:
 2171 0092 06F5AF63 		add	r3, r6, #1400
 2172 0096 35F81B00 		ldrh	r0, [r5, fp, lsl #1]
 2173 009a 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 2174 009e 621C     		adds	r2, r4, #1
 2175              	.LVL123:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2176              		.loc 1 870 4 view .LVU797
 2177 00a0 0234     		adds	r4, r4, #2
 2178              	.LVL124:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2179              		.loc 1 870 4 is_stmt 0 view .LVU798
 2180 00a2 FFF7FEFF 		bl	process_VI_pair
 2181              	.LVL125:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2182              		.loc 1 870 4 view .LVU799
 2183              	.LBE50:
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2184              		.loc 1 868 7 view .LVU800
 2185 00a6 0F2C     		cmp	r4, #15
 2186 00a8 06F10106 		add	r6, r6, #1
 2187 00ac E8D1     		bne	.L241
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2188              		.loc 1 868 7 view .LVU801
 2189 00ae 0737     		adds	r7, r7, #7
 2190              	.LVL126:
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2191              		.loc 1 868 7 view .LVU802
 2192              	.LBE52:
 2193              	.LBE44:
 855:Src/adc.c     ****       //
 2194              		.loc 1 855 5 view .LVU803
 2195 00b0 40F2BF23 		movw	r3, #703
 2196 00b4 9F42     		cmp	r7, r3
 2197 00b6 C9D1     		bne	.L239
 2198              	.LBE53:
 875:Src/adc.c     ****   }
 2199              		.loc 1 875 5 is_stmt 1 view .LVU804
 2200 00b8 0122     		movs	r2, #1
 2201 00ba 2021     		movs	r1, #32
 2202 00bc 4FF09040 		mov	r0, #1207959552
 2203              	.LBE42:
 2204              	.LBE41:
 2205              	.LBE58:
 2206              	.LBE61:
 2207              		.loc 1 882 1 is_stmt 0 view .LVU805
 2208 00c0 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2209              	.LCFI34:
 2210              		.cfi_remember_state
 2211              		.cfi_restore 14
 2212              		.cfi_restore 11
 2213              		.cfi_restore 10
 2214              		.cfi_restore 9
 2215              		.cfi_restore 8
 2216              		.cfi_restore 7
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 64


 2217              		.cfi_restore 6
 2218              		.cfi_restore 5
 2219              		.cfi_restore 4
 2220              		.cfi_restore 3
 2221              		.cfi_def_cfa_offset 0
 2222              	.LVL127:
 2223              	.LBB62:
 2224              	.LBB59:
 2225              	.LBB55:
 2226              	.LBB54:
 875:Src/adc.c     ****   }
 2227              		.loc 1 875 5 view .LVU806
 2228 00c4 FFF7FEBF 		b	HAL_GPIO_WritePin
 2229              	.LVL128:
 2230              	.L245:
 2231              	.LCFI35:
 2232              		.cfi_restore_state
 875:Src/adc.c     ****   }
 2233              		.loc 1 875 5 view .LVU807
 2234              	.LBE54:
 2235              	.LBE55:
 2236              	.LBB56:
 2237              	.LBB40:
 797:Src/adc.c     ****   if (hadc == &hadc3)
 2238              		.loc 1 797 12 view .LVU808
 2239 00c8 0124     		movs	r4, #1
 2240              	.LVL129:
 797:Src/adc.c     ****   if (hadc == &hadc3)
 2241              		.loc 1 797 12 view .LVU809
 2242 00ca ADE7     		b	.L238
 2243              	.LVL130:
 2244              	.L244:
 795:Src/adc.c     ****   if (hadc == &hadc2)
 2245              		.loc 1 795 12 view .LVU810
 2246 00cc 0024     		movs	r4, #0
 2247              	.LVL131:
 795:Src/adc.c     ****   if (hadc == &hadc2)
 2248              		.loc 1 795 12 view .LVU811
 2249 00ce ABE7     		b	.L238
 2250              	.L253:
 2251              		.align	2
 2252              	.L252:
 2253 00d0 00000000 		.word	hadc1
 2254 00d4 00000000 		.word	hadc2
 2255 00d8 00000000 		.word	hadc3
 2256 00dc 00000000 		.word	.LANCHOR2
 2257 00e0 00000000 		.word	adc_dma_buff
 2258              	.LBE40:
 2259              	.LBE56:
 2260              	.LBE59:
 2261              	.LBE62:
 2262              		.cfi_endproc
 2263              	.LFE305:
 2265              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2266              		.align	1
 2267              		.p2align 2,,3
 2268              		.global	HAL_ADC_ConvCpltCallback
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 65


 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2272              		.fpu fpv4-sp-d16
 2274              	HAL_ADC_ConvCpltCallback:
 2275              	.LVL132:
 2276              	.LFB306:
 883:Src/adc.c     **** 
 884:Src/adc.c     **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 885:Src/adc.c     **** {
 2277              		.loc 1 885 1 is_stmt 1 view -0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 0
 2280              		@ frame_needed = 0, uses_anonymous_args = 0
 886:Src/adc.c     ****   ConvCpltEither(hadc, CHANNELS_PER_SEQ*SEQS_PER_HALF);
 2281              		.loc 1 886 3 view .LVU813
 2282              	.LBB77:
 2283              	.LBI77:
 808:Src/adc.c     ****   int adc_index;
 2284              		.loc 1 808 20 view .LVU814
 2285              	.LBB78:
 809:Src/adc.c     **** 
 2286              		.loc 1 809 3 view .LVU815
 815:Src/adc.c     ****       return;
 2287              		.loc 1 815 3 view .LVU816
 2288              	.LBE78:
 2289              	.LBE77:
 885:Src/adc.c     ****   ConvCpltEither(hadc, CHANNELS_PER_SEQ*SEQS_PER_HALF);
 2290              		.loc 1 885 1 is_stmt 0 view .LVU817
 2291 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2292              	.LCFI36:
 2293              		.cfi_def_cfa_offset 40
 2294              		.cfi_offset 3, -40
 2295              		.cfi_offset 4, -36
 2296              		.cfi_offset 5, -32
 2297              		.cfi_offset 6, -28
 2298              		.cfi_offset 7, -24
 2299              		.cfi_offset 8, -20
 2300              		.cfi_offset 9, -16
 2301              		.cfi_offset 10, -12
 2302              		.cfi_offset 11, -8
 2303              		.cfi_offset 14, -4
 885:Src/adc.c     ****   ConvCpltEither(hadc, CHANNELS_PER_SEQ*SEQS_PER_HALF);
 2304              		.loc 1 885 1 view .LVU818
 2305 0004 0446     		mov	r4, r0
 2306              	.LBB101:
 2307              	.LBB98:
 815:Src/adc.c     ****       return;
 2308              		.loc 1 815 8 view .LVU819
 2309 0006 FFF7FEFF 		bl	HAL_GetTick
 2310              	.LVL133:
 815:Src/adc.c     ****       return;
 2311              		.loc 1 815 6 view .LVU820
 2312 000a 42F20F73 		movw	r3, #9999
 2313 000e 9842     		cmp	r0, r3
 2314 0010 0ED9     		bls	.L254
 822:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 66


 2315              		.loc 1 822 3 is_stmt 1 view .LVU821
 2316              	.LVL134:
 2317              	.LBB79:
 2318              	.LBI79:
 792:Src/adc.c     **** {
 2319              		.loc 1 792 19 view .LVU822
 2320              	.LBB80:
 794:Src/adc.c     ****     return 0;
 2321              		.loc 1 794 3 view .LVU823
 794:Src/adc.c     ****     return 0;
 2322              		.loc 1 794 6 is_stmt 0 view .LVU824
 2323 0012 304B     		ldr	r3, .L270
 2324 0014 9C42     		cmp	r4, r3
 2325 0016 5AD0     		beq	.L262
 796:Src/adc.c     ****     return 1;
 2326              		.loc 1 796 3 is_stmt 1 view .LVU825
 796:Src/adc.c     ****     return 1;
 2327              		.loc 1 796 6 is_stmt 0 view .LVU826
 2328 0018 2F4B     		ldr	r3, .L270+4
 2329 001a 9C42     		cmp	r4, r3
 2330 001c 55D0     		beq	.L263
 798:Src/adc.c     ****     return 2;
 2331              		.loc 1 798 3 is_stmt 1 view .LVU827
 798:Src/adc.c     ****     return 2;
 2332              		.loc 1 798 6 is_stmt 0 view .LVU828
 2333 001e 2F4B     		ldr	r3, .L270+8
 799:Src/adc.c     ****   return 3;
 2334              		.loc 1 799 12 view .LVU829
 2335 0020 9C42     		cmp	r4, r3
 2336 0022 14BF     		ite	ne
 2337 0024 0324     		movne	r4, #3
 2338 0026 0224     		moveq	r4, #2
 2339              	.LVL135:
 2340              	.L256:
 799:Src/adc.c     ****   return 3;
 2341              		.loc 1 799 12 view .LVU830
 2342              	.LBE80:
 2343              	.LBE79:
 837:Src/adc.c     **** 
 2344              		.loc 1 837 3 is_stmt 1 view .LVU831
 837:Src/adc.c     **** 
 2345              		.loc 1 837 17 is_stmt 0 view .LVU832
 2346 0028 2D4B     		ldr	r3, .L270+12
 837:Src/adc.c     **** 
 2347              		.loc 1 837 6 view .LVU833
 2348 002a 1B68     		ldr	r3, [r3]
 2349 002c A342     		cmp	r3, r4
 2350 002e 01D0     		beq	.L269
 2351              	.LVL136:
 2352              	.L254:
 837:Src/adc.c     **** 
 2353              		.loc 1 837 6 view .LVU834
 2354              	.LBE98:
 2355              	.LBE101:
 887:Src/adc.c     **** }
 2356              		.loc 1 887 1 view .LVU835
 2357 0030 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 67


 2358              	.LVL137:
 2359              	.L269:
 2360              	.LBB102:
 2361              	.LBB99:
 2362              	.LBB82:
 2363              	.LBI82:
 808:Src/adc.c     ****   int adc_index;
 2364              		.loc 1 808 20 is_stmt 1 view .LVU836
 2365              	.LBB83:
 839:Src/adc.c     **** 
 2366              		.loc 1 839 5 view .LVU837
 2367 0034 0022     		movs	r2, #0
 2368 0036 2021     		movs	r1, #32
 2369 0038 4FF09040 		mov	r0, #1207959552
 2370 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2371              	.LVL138:
 855:Src/adc.c     ****       //
 2372              		.loc 1 855 5 view .LVU838
 2373              	.LBB84:
 855:Src/adc.c     ****       //
 2374              		.loc 1 855 10 view .LVU839
 855:Src/adc.c     ****       //
 2375              		.loc 1 855 10 is_stmt 0 view .LVU840
 2376 0040 284D     		ldr	r5, .L270+16
 2377              	.LBE84:
 839:Src/adc.c     **** 
 2378              		.loc 1 839 5 view .LVU841
 2379 0042 40F2BF27 		movw	r7, #703
 2380              	.LBB94:
 2381              	.LBB85:
 2382              	.LBB86:
 2383              	.LBB87:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2384              		.loc 1 862 4 view .LVU842
 2385 0046 4FF4AF6A 		mov	r10, #1400
 2386              	.LBE87:
 2387              	.LBE86:
 2388              	.LBB89:
 2389              	.LBB90:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2390              		.loc 1 870 4 view .LVU843
 2391 004a 41F26809 		movw	r9, #4200
 2392              	.LVL139:
 2393              	.L257:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2394              		.loc 1 870 4 view .LVU844
 2395 004e A7F1030B 		sub	fp, r7, #3
 2396              	.LBE90:
 2397              	.LBE89:
 859:Src/adc.c     ****       for (int slot=0; slot<3; slot++)
 2398              		.loc 1 859 11 view .LVU845
 2399 0052 0024     		movs	r4, #0
 2400              	.LVL140:
 2401              	.L261:
 859:Src/adc.c     ****       for (int slot=0; slot<3; slot++)
 2402              		.loc 1 859 11 view .LVU846
 2403 0054 0BF58358 		add	r8, fp, #4192
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 68


 2404 0058 08F10808 		add	r8, r8, #8
 2405              	.LBB92:
 2406              	.LBB88:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2407              		.loc 1 861 11 view .LVU847
 2408 005c 0026     		movs	r6, #0
 2409              	.LVL141:
 2410              	.L258:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2411              		.loc 1 862 4 is_stmt 1 view .LVU848
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2412              		.loc 1 862 4 is_stmt 0 view .LVU849
 2413 005e 0AFB06B2 		mla	r2, r10, r6, fp
 2414 0062 35F81800 		ldrh	r0, [r5, r8, lsl #1]
 2415 0066 35F81210 		ldrh	r1, [r5, r2, lsl #1]
 2416 006a 3219     		adds	r2, r6, r4
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2417              		.loc 1 861 28 view .LVU850
 2418 006c 0136     		adds	r6, r6, #1
 2419              	.LVL142:
 862:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2420              		.loc 1 862 4 view .LVU851
 2421 006e FFF7FEFF 		bl	process_VI_pair
 2422              	.LVL143:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2423              		.loc 1 861 2 view .LVU852
 2424 0072 032E     		cmp	r6, #3
 2425 0074 F3D1     		bne	.L258
 2426 0076 0334     		adds	r4, r4, #3
 2427              	.LVL144:
 861:Src/adc.c     **** 	  process_VI_pair(adc_dma_buff[3][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // V
 2428              		.loc 1 861 2 view .LVU853
 2429              	.LBE88:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2430              		.loc 1 860 7 view .LVU854
 2431 0078 092C     		cmp	r4, #9
 2432 007a 0BF1010B 		add	fp, fp, #1
 2433              	.LVL145:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2434              		.loc 1 860 7 view .LVU855
 2435 007e E9D1     		bne	.L261
 2436 0080 3E46     		mov	r6, r7
 2437              	.LVL146:
 2438              	.L259:
 860:Src/adc.c     **** 	for (int adc=0; adc<3; adc++)
 2439              		.loc 1 860 7 view .LVU856
 2440              	.LBE92:
 2441              	.LBB93:
 2442              	.LBB91:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2443              		.loc 1 870 4 is_stmt 1 view .LVU857
 2444 0082 06EB090B 		add	fp, r6, r9
 2445 0086 2246     		mov	r2, r4
 2446 0088 35F81B00 		ldrh	r0, [r5, fp, lsl #1]
 2447 008c 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 2448 0090 FFF7FEFF 		bl	process_VI_pair
 2449              	.LVL147:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 69


 2450 0094 06F5AF63 		add	r3, r6, #1400
 2451 0098 35F81B00 		ldrh	r0, [r5, fp, lsl #1]
 2452 009c 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 2453 00a0 621C     		adds	r2, r4, #1
 2454              	.LVL148:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2455              		.loc 1 870 4 view .LVU858
 2456 00a2 0234     		adds	r4, r4, #2
 2457              	.LVL149:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2458              		.loc 1 870 4 is_stmt 0 view .LVU859
 2459 00a4 FFF7FEFF 		bl	process_VI_pair
 2460              	.LVL150:
 870:Src/adc.c     **** 			  adc_dma_buff[adc][i*CHANNELS_PER_SEQ+slot+dma_buff_index_base],  // I
 2461              		.loc 1 870 4 view .LVU860
 2462              	.LBE91:
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2463              		.loc 1 868 7 view .LVU861
 2464 00a8 0F2C     		cmp	r4, #15
 2465 00aa 06F10106 		add	r6, r6, #1
 2466 00ae E8D1     		bne	.L259
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2467              		.loc 1 868 7 view .LVU862
 2468 00b0 0737     		adds	r7, r7, #7
 2469              	.LVL151:
 868:Src/adc.c     **** 	for (int adc=0; adc<2; adc++)
 2470              		.loc 1 868 7 view .LVU863
 2471              	.LBE93:
 2472              	.LBE85:
 855:Src/adc.c     ****       //
 2473              		.loc 1 855 5 view .LVU864
 2474 00b2 40F27B53 		movw	r3, #1403
 2475 00b6 9F42     		cmp	r7, r3
 2476 00b8 C9D1     		bne	.L257
 2477              	.LBE94:
 875:Src/adc.c     ****   }
 2478              		.loc 1 875 5 is_stmt 1 view .LVU865
 2479 00ba 0122     		movs	r2, #1
 2480 00bc 2021     		movs	r1, #32
 2481 00be 4FF09040 		mov	r0, #1207959552
 2482              	.LBE83:
 2483              	.LBE82:
 2484              	.LBE99:
 2485              	.LBE102:
 2486              		.loc 1 887 1 is_stmt 0 view .LVU866
 2487 00c2 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2488              	.LCFI37:
 2489              		.cfi_remember_state
 2490              		.cfi_restore 14
 2491              		.cfi_restore 11
 2492              		.cfi_restore 10
 2493              		.cfi_restore 9
 2494              		.cfi_restore 8
 2495              		.cfi_restore 7
 2496              		.cfi_restore 6
 2497              		.cfi_restore 5
 2498              		.cfi_restore 4
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 70


 2499              		.cfi_restore 3
 2500              		.cfi_def_cfa_offset 0
 2501              	.LVL152:
 2502              	.LBB103:
 2503              	.LBB100:
 2504              	.LBB96:
 2505              	.LBB95:
 875:Src/adc.c     ****   }
 2506              		.loc 1 875 5 view .LVU867
 2507 00c6 FFF7FEBF 		b	HAL_GPIO_WritePin
 2508              	.LVL153:
 2509              	.L263:
 2510              	.LCFI38:
 2511              		.cfi_restore_state
 875:Src/adc.c     ****   }
 2512              		.loc 1 875 5 view .LVU868
 2513              	.LBE95:
 2514              	.LBE96:
 2515              	.LBB97:
 2516              	.LBB81:
 797:Src/adc.c     ****   if (hadc == &hadc3)
 2517              		.loc 1 797 12 view .LVU869
 2518 00ca 0124     		movs	r4, #1
 2519              	.LVL154:
 797:Src/adc.c     ****   if (hadc == &hadc3)
 2520              		.loc 1 797 12 view .LVU870
 2521 00cc ACE7     		b	.L256
 2522              	.LVL155:
 2523              	.L262:
 795:Src/adc.c     ****   if (hadc == &hadc2)
 2524              		.loc 1 795 12 view .LVU871
 2525 00ce 0024     		movs	r4, #0
 2526              	.LVL156:
 795:Src/adc.c     ****   if (hadc == &hadc2)
 2527              		.loc 1 795 12 view .LVU872
 2528 00d0 AAE7     		b	.L256
 2529              	.L271:
 2530 00d2 00BF     		.align	2
 2531              	.L270:
 2532 00d4 00000000 		.word	hadc1
 2533 00d8 00000000 		.word	hadc2
 2534 00dc 00000000 		.word	hadc3
 2535 00e0 00000000 		.word	.LANCHOR2
 2536 00e4 00000000 		.word	adc_dma_buff
 2537              	.LBE81:
 2538              	.LBE97:
 2539              	.LBE100:
 2540              	.LBE103:
 2541              		.cfi_endproc
 2542              	.LFE306:
 2544              		.section	.text.calibrate_ADCs,"ax",%progbits
 2545              		.align	1
 2546              		.p2align 2,,3
 2547              		.global	calibrate_ADCs
 2548              		.syntax unified
 2549              		.thumb
 2550              		.thumb_func
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 71


 2551              		.fpu fpv4-sp-d16
 2553              	calibrate_ADCs:
 2554              	.LFB307:
 888:Src/adc.c     **** 
 889:Src/adc.c     **** void calibrate_ADCs (void) {
 2555              		.loc 1 889 28 is_stmt 1 view -0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 0
 2558              		@ frame_needed = 0, uses_anonymous_args = 0
 890:Src/adc.c     **** 
 891:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 2559              		.loc 1 891 3 view .LVU874
 889:Src/adc.c     **** 
 2560              		.loc 1 889 28 is_stmt 0 view .LVU875
 2561 0000 08B5     		push	{r3, lr}
 2562              	.LCFI39:
 2563              		.cfi_def_cfa_offset 8
 2564              		.cfi_offset 3, -8
 2565              		.cfi_offset 14, -4
 2566              		.loc 1 891 3 view .LVU876
 2567 0002 0021     		movs	r1, #0
 2568 0004 0848     		ldr	r0, .L274
 2569 0006 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 2570              	.LVL157:
 892:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc2, ADC_SINGLE_ENDED);
 2571              		.loc 1 892 3 is_stmt 1 view .LVU877
 2572 000a 0021     		movs	r1, #0
 2573 000c 0748     		ldr	r0, .L274+4
 2574 000e FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 2575              	.LVL158:
 893:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc3, ADC_SINGLE_ENDED);
 2576              		.loc 1 893 3 view .LVU878
 2577 0012 0021     		movs	r1, #0
 2578 0014 0648     		ldr	r0, .L274+8
 2579 0016 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 2580              	.LVL159:
 894:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc4, ADC_SINGLE_ENDED);
 2581              		.loc 1 894 3 view .LVU879
 2582 001a 0021     		movs	r1, #0
 2583 001c 0548     		ldr	r0, .L274+12
 895:Src/adc.c     **** }
 2584              		.loc 1 895 1 is_stmt 0 view .LVU880
 2585 001e BDE80840 		pop	{r3, lr}
 2586              	.LCFI40:
 2587              		.cfi_restore 14
 2588              		.cfi_restore 3
 2589              		.cfi_def_cfa_offset 0
 894:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc4, ADC_SINGLE_ENDED);
 2590              		.loc 1 894 3 view .LVU881
 2591 0022 FFF7FEBF 		b	HAL_ADCEx_Calibration_Start
 2592              	.LVL160:
 2593              	.L275:
 2594 0026 00BF     		.align	2
 2595              	.L274:
 2596 0028 00000000 		.word	hadc1
 2597 002c 00000000 		.word	hadc2
 2598 0030 00000000 		.word	hadc3
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 72


 2599 0034 00000000 		.word	hadc4
 2600              		.cfi_endproc
 2601              	.LFE307:
 2603              		.section	.text.start_ADCs,"ax",%progbits
 2604              		.align	1
 2605              		.p2align 2,,3
 2606              		.global	start_ADCs
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
 2610              		.fpu fpv4-sp-d16
 2612              	start_ADCs:
 2613              	.LVL161:
 2614              	.LFB308:
 896:Src/adc.c     **** 
 897:Src/adc.c     **** //
 898:Src/adc.c     **** // Start all four ADCs with a lag between the Voltage ADC (ADC4)
 899:Src/adc.c     **** // and the three current ADCs (ADC1-ADC3).   We achieve this with
 900:Src/adc.c     **** // a one-shot PWM pulse from TIM8. The natural state of the
 901:Src/adc.c     **** // timer when it's not running is HIGH, so we trigger on a negative
 902:Src/adc.c     **** // pulse.   Which ever one(s) starts on the negative edge will be off
 903:Src/adc.c     **** // and running early.  
 904:Src/adc.c     **** //
 905:Src/adc.c     **** // usec_lag > 0, Current ADCs start early, Voltage brings up the rear
 906:Src/adc.c     **** // usec_lag < 0, Voltage ADC starts early, Current brings up the rear.
 907:Src/adc.c     **** // usec_lag = 0, both start on same edge
 908:Src/adc.c     **** //
 909:Src/adc.c     **** void start_ADCs (int32_t usec_lag) {
 2615              		.loc 1 909 36 is_stmt 1 view -0
 2616              		.cfi_startproc
 2617              		@ args = 0, pretend = 0, frame = 0
 2618              		@ frame_needed = 0, uses_anonymous_args = 0
 910:Src/adc.c     **** 
 911:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer),
 2619              		.loc 1 911 3 view .LVU883
 909:Src/adc.c     **** 
 2620              		.loc 1 909 36 is_stmt 0 view .LVU884
 2621 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2622              	.LCFI41:
 2623              		.cfi_def_cfa_offset 24
 2624              		.cfi_offset 4, -24
 2625              		.cfi_offset 5, -20
 2626              		.cfi_offset 6, -16
 2627              		.cfi_offset 7, -12
 2628              		.cfi_offset 8, -8
 2629              		.cfi_offset 14, -4
 2630              		.loc 1 911 3 view .LVU885
 2631 0004 4FF42F53 		mov	r3, #11200
 2632 0008 514A     		ldr	r2, .L283
 912:Src/adc.c     **** 	   "ADC DMA buffs: %d bytes\n", sizeof(adc_dma_buff));
 913:Src/adc.c     ****   debug_printf(log_buffer);
 914:Src/adc.c     ****   
 915:Src/adc.c     ****   //
 916:Src/adc.c     ****   // On the first call they will already be stopped, but in case we're
 917:Src/adc.c     ****   // called multiple times to change the usec_lag, make sure they're
 918:Src/adc.c     ****   // all stopped.
 919:Src/adc.c     ****   //
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 73


 920:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc1);
 2633              		.loc 1 920 3 view .LVU886
 2634 000a DFF86081 		ldr	r8, .L283+28
 921:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc2);
 2635              		.loc 1 921 3 view .LVU887
 2636 000e 514F     		ldr	r7, .L283+4
 922:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc3);
 2637              		.loc 1 922 3 view .LVU888
 2638 0010 514E     		ldr	r6, .L283+8
 923:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc4);
 2639              		.loc 1 923 3 view .LVU889
 2640 0012 524D     		ldr	r5, .L283+12
 911:Src/adc.c     **** 	   "ADC DMA buffs: %d bytes\n", sizeof(adc_dma_buff));
 2641              		.loc 1 911 3 view .LVU890
 2642 0014 C821     		movs	r1, #200
 909:Src/adc.c     **** 
 2643              		.loc 1 909 36 view .LVU891
 2644 0016 0446     		mov	r4, r0
 911:Src/adc.c     **** 	   "ADC DMA buffs: %d bytes\n", sizeof(adc_dma_buff));
 2645              		.loc 1 911 3 view .LVU892
 2646 0018 5148     		ldr	r0, .L283+16
 2647              	.LVL162:
 911:Src/adc.c     **** 	   "ADC DMA buffs: %d bytes\n", sizeof(adc_dma_buff));
 2648              		.loc 1 911 3 view .LVU893
 2649 001a FFF7FEFF 		bl	snprintf
 2650              	.LVL163:
 913:Src/adc.c     ****   
 2651              		.loc 1 913 3 is_stmt 1 view .LVU894
 2652 001e 5048     		ldr	r0, .L283+16
 2653 0020 FFF7FEFF 		bl	debug_printf
 2654              	.LVL164:
 920:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc2);
 2655              		.loc 1 920 3 view .LVU895
 2656 0024 4046     		mov	r0, r8
 2657 0026 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 2658              	.LVL165:
 921:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc3);
 2659              		.loc 1 921 3 view .LVU896
 2660 002a 3846     		mov	r0, r7
 2661 002c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 2662              	.LVL166:
 922:Src/adc.c     ****   HAL_ADC_Stop_DMA(&hadc4);
 2663              		.loc 1 922 3 view .LVU897
 2664 0030 3046     		mov	r0, r6
 2665 0032 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 2666              	.LVL167:
 2667              		.loc 1 923 3 view .LVU898
 2668 0036 2846     		mov	r0, r5
 2669 0038 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 2670              	.LVL168:
 924:Src/adc.c     ****   
 925:Src/adc.c     ****   if (usec_lag == 0) {
 2671              		.loc 1 925 3 view .LVU899
 2672              		.loc 1 925 6 is_stmt 0 view .LVU900
 2673 003c 002C     		cmp	r4, #0
 926:Src/adc.c     ****     //
 927:Src/adc.c     ****     // Caller has requested no lag so set them all to the same edge.
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 74


 928:Src/adc.c     ****     //
 929:Src/adc.c     ****     MODIFY_REG(hadc1.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2674              		.loc 1 929 5 view .LVU901
 2675 003e D8F800C0 		ldr	ip, [r8]
 925:Src/adc.c     ****     //
 2676              		.loc 1 925 6 view .LVU902
 2677 0042 43D1     		bne	.L277
 2678              		.loc 1 929 5 is_stmt 1 view .LVU903
 2679 0044 DCF80C30 		ldr	r3, [ip, #12]
 930:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2680              		.loc 1 930 5 is_stmt 0 view .LVU904
 2681 0048 3C68     		ldr	r4, [r7]
 2682              	.LVL169:
 931:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2683              		.loc 1 931 5 view .LVU905
 2684 004a 3068     		ldr	r0, [r6]
 932:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2685              		.loc 1 932 5 view .LVU906
 2686 004c 2A68     		ldr	r2, [r5]
 933:Src/adc.c     ****     usec_lag = 1;                                         // any pulse from the timer will do 
 934:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 2687              		.loc 1 934 15 view .LVU907
 2688 004e 4549     		ldr	r1, .L283+20
 929:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2689              		.loc 1 929 5 view .LVU908
 2690 0050 23F44063 		bic	r3, r3, #3072
 2691 0054 43F48063 		orr	r3, r3, #1024
 2692 0058 CCF80C30 		str	r3, [ip, #12]
 930:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2693              		.loc 1 930 5 is_stmt 1 view .LVU909
 2694 005c E368     		ldr	r3, [r4, #12]
 2695 005e 23F44063 		bic	r3, r3, #3072
 2696 0062 43F48063 		orr	r3, r3, #1024
 2697 0066 E360     		str	r3, [r4, #12]
 931:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2698              		.loc 1 931 5 view .LVU910
 2699 0068 C368     		ldr	r3, [r0, #12]
 2700 006a 23F44063 		bic	r3, r3, #3072
 2701 006e 43F48063 		orr	r3, r3, #1024
 2702 0072 C360     		str	r3, [r0, #12]
 932:Src/adc.c     ****     usec_lag = 1;                                         // any pulse from the timer will do 
 2703              		.loc 1 932 5 view .LVU911
 2704 0074 D368     		ldr	r3, [r2, #12]
 2705 0076 23F44063 		bic	r3, r3, #3072
 2706 007a 43F48063 		orr	r3, r3, #1024
 2707              		.loc 1 934 15 is_stmt 0 view .LVU912
 2708 007e 0320     		movs	r0, #3
 932:Src/adc.c     ****     usec_lag = 1;                                         // any pulse from the timer will do 
 2709              		.loc 1 932 5 view .LVU913
 2710 0080 D360     		str	r3, [r2, #12]
 933:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 2711              		.loc 1 933 5 is_stmt 1 view .LVU914
 2712              	.LVL170:
 2713              		.loc 1 934 5 view .LVU915
 2714              		.loc 1 934 15 is_stmt 0 view .LVU916
 2715 0082 0860     		str	r0, [r1]
 935:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 75


 936:Src/adc.c     **** 
 937:Src/adc.c     ****   } else if (usec_lag < 0) {
 938:Src/adc.c     ****     //
 939:Src/adc.c     ****     // Caller wants -ve lag, so Currents on rising, and Voltage on falling.
 940:Src/adc.c     ****     //
 941:Src/adc.c     ****     MODIFY_REG(hadc1.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 942:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 943:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 944:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 945:Src/adc.c     ****     usec_lag = abs(usec_lag);                             // turn it +ve for the timer
 946:Src/adc.c     ****     isr_index = 2;                                        // process ISR when I comes in
 947:Src/adc.c     ****   } else {
 948:Src/adc.c     ****     //
 949:Src/adc.c     ****     // Caller wants a +ve lag, so Currents on falling, and Voltage on rising.
 950:Src/adc.c     ****     //
 951:Src/adc.c     ****     MODIFY_REG(hadc1.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 952:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 953:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 954:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 955:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 956:Src/adc.c     ****   }
 957:Src/adc.c     ****   if (usec_lag > 9999) usec_lag = 9999;                   // limit of the counter/timer
 2716              		.loc 1 957 3 is_stmt 1 view .LVU917
 933:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 2717              		.loc 1 933 14 is_stmt 0 view .LVU918
 2718 0084 0124     		movs	r4, #1
 2719              	.LVL171:
 2720              	.L278:
 958:Src/adc.c     **** 
 959:Src/adc.c     ****   
 960:Src/adc.c     ****   //
 961:Src/adc.c     ****   // These PWM timers in one-shot mode are almost like a pipeline,
 962:Src/adc.c     ****   // every action causes the previous action to finally happen.
 963:Src/adc.c     ****   // This call stops the last pulse - by generating a pulse with whatever
 964:Src/adc.c     ****   // value is set in the GUI and appears above.  We don't want the
 965:Src/adc.c     ****   // ADCs to trigger on this one, and it'll take 10 msecs to complete,
 966:Src/adc.c     ****   // i.e. the timer will take 10msecs to do it's thing, the call returns
 967:Src/adc.c     ****   // immediately, and it makes sure the next pulse will be of the requested
 968:Src/adc.c     ****   // duration.
 969:Src/adc.c     ****   //
 970:Src/adc.c     ****   pulse_tim8_ch2(usec_lag);
 2721              		.loc 1 970 3 is_stmt 1 view .LVU919
 2722 0086 2046     		mov	r0, r4
 2723 0088 FFF7FEFF 		bl	pulse_tim8_ch2
 2724              	.LVL172:
 971:Src/adc.c     ****   HAL_Delay(20);
 2725              		.loc 1 971 3 view .LVU920
 2726 008c 1420     		movs	r0, #20
 2727 008e FFF7FEFF 		bl	HAL_Delay
 2728              	.LVL173:
 972:Src/adc.c     **** 
 973:Src/adc.c     ****   //
 974:Src/adc.c     ****   // Now the bogus one has flown through the timer, it's safe to arm the ADCs.
 975:Src/adc.c     ****   // After these calls, the next edges on the timer will start them running, forever.
 976:Src/adc.c     ****   // The Voltage ADC (ADC4) will start on one edge, all the rest will start on the other.
 977:Src/adc.c     ****   // In the case where the caller has requested no timeshift, all four start on the
 978:Src/adc.c     ****   // same edge, and the pulse duration makes no difference.
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 76


 979:Src/adc.c     ****   //
 980:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_dma_buff[0], ADC_DMA_BUFFSIZE);
 2729              		.loc 1 980 3 view .LVU921
 2730 0092 4FF4AF62 		mov	r2, #1400
 2731 0096 3449     		ldr	r1, .L283+24
 2732 0098 3448     		ldr	r0, .L283+28
 2733 009a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2734              	.LVL174:
 981:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t*)adc_dma_buff[1], ADC_DMA_BUFFSIZE);
 2735              		.loc 1 981 3 view .LVU922
 2736 009e 4FF4AF62 		mov	r2, #1400
 2737 00a2 3349     		ldr	r1, .L283+32
 2738 00a4 2B48     		ldr	r0, .L283+4
 2739 00a6 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2740              	.LVL175:
 982:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc3, (uint32_t*)adc_dma_buff[2], ADC_DMA_BUFFSIZE);
 2741              		.loc 1 982 3 view .LVU923
 2742 00aa 4FF4AF62 		mov	r2, #1400
 2743 00ae 3149     		ldr	r1, .L283+36
 2744 00b0 2948     		ldr	r0, .L283+8
 2745 00b2 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2746              	.LVL176:
 983:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc4, (uint32_t*)adc_dma_buff[3], ADC_DMA_BUFFSIZE);
 2747              		.loc 1 983 3 view .LVU924
 2748 00b6 4FF4AF62 		mov	r2, #1400
 2749 00ba 2F49     		ldr	r1, .L283+40
 2750 00bc 2748     		ldr	r0, .L283+12
 2751 00be FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2752              	.LVL177:
 984:Src/adc.c     **** 
 985:Src/adc.c     ****   //
 986:Src/adc.c     ****   // Now force the last one through (which has the correct settings) and they all
 987:Src/adc.c     ****   // kick to life on the appropriate edges.
 988:Src/adc.c     ****   //
 989:Src/adc.c     ****   pulse_tim8_ch2(usec_lag);
 2753              		.loc 1 989 3 view .LVU925
 2754 00c2 2046     		mov	r0, r4
 990:Src/adc.c     **** }
 2755              		.loc 1 990 1 is_stmt 0 view .LVU926
 2756 00c4 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2757              	.LCFI42:
 2758              		.cfi_remember_state
 2759              		.cfi_restore 14
 2760              		.cfi_restore 8
 2761              		.cfi_restore 7
 2762              		.cfi_restore 6
 2763              		.cfi_restore 5
 2764              		.cfi_restore 4
 2765              		.cfi_def_cfa_offset 0
 2766              	.LVL178:
 989:Src/adc.c     **** }
 2767              		.loc 1 989 3 view .LVU927
 2768 00c8 FFF7FEBF 		b	pulse_tim8_ch2
 2769              	.LVL179:
 2770              	.L277:
 2771              	.LCFI43:
 2772              		.cfi_restore_state
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 77


 937:Src/adc.c     ****     //
 2773              		.loc 1 937 10 is_stmt 1 view .LVU928
 941:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2774              		.loc 1 941 5 is_stmt 0 view .LVU929
 2775 00cc DCF80C30 		ldr	r3, [ip, #12]
 2776 00d0 3F68     		ldr	r7, [r7]
 2777 00d2 3068     		ldr	r0, [r6]
 2778 00d4 2A68     		ldr	r2, [r5]
 946:Src/adc.c     ****   } else {
 2779              		.loc 1 946 15 view .LVU930
 2780 00d6 2349     		ldr	r1, .L283+20
 941:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2781              		.loc 1 941 5 view .LVU931
 2782 00d8 23F44063 		bic	r3, r3, #3072
 937:Src/adc.c     ****     //
 2783              		.loc 1 937 13 view .LVU932
 2784 00dc 1DDB     		blt	.L282
 951:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 2785              		.loc 1 951 5 is_stmt 1 view .LVU933
 2786 00de 43F40063 		orr	r3, r3, #2048
 2787 00e2 CCF80C30 		str	r3, [ip, #12]
 952:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 2788              		.loc 1 952 5 view .LVU934
 2789 00e6 FB68     		ldr	r3, [r7, #12]
 2790 00e8 23F44063 		bic	r3, r3, #3072
 2791 00ec 43F40063 		orr	r3, r3, #2048
 2792 00f0 FB60     		str	r3, [r7, #12]
 953:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2793              		.loc 1 953 5 view .LVU935
 2794 00f2 C368     		ldr	r3, [r0, #12]
 2795 00f4 23F44063 		bic	r3, r3, #3072
 2796 00f8 43F40063 		orr	r3, r3, #2048
 2797 00fc C360     		str	r3, [r0, #12]
 954:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 2798              		.loc 1 954 5 view .LVU936
 2799 00fe D368     		ldr	r3, [r2, #12]
 2800 0100 23F44063 		bic	r3, r3, #3072
 2801 0104 43F48063 		orr	r3, r3, #1024
 955:Src/adc.c     ****   }
 2802              		.loc 1 955 15 is_stmt 0 view .LVU937
 2803 0108 0320     		movs	r0, #3
 954:Src/adc.c     ****     isr_index = 3;                                        // process ISR when V comes in
 2804              		.loc 1 954 5 view .LVU938
 2805 010a D360     		str	r3, [r2, #12]
 955:Src/adc.c     ****   }
 2806              		.loc 1 955 5 is_stmt 1 view .LVU939
 955:Src/adc.c     ****   }
 2807              		.loc 1 955 15 is_stmt 0 view .LVU940
 2808 010c 0860     		str	r0, [r1]
 2809              	.L280:
 957:Src/adc.c     **** 
 2810              		.loc 1 957 3 is_stmt 1 view .LVU941
 2811 010e 42F20F73 		movw	r3, #9999
 2812 0112 9C42     		cmp	r4, r3
 2813 0114 A8BF     		it	ge
 2814 0116 1C46     		movge	r4, r3
 2815              	.LVL180:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 78


 957:Src/adc.c     **** 
 2816              		.loc 1 957 3 is_stmt 0 view .LVU942
 2817 0118 B5E7     		b	.L278
 2818              	.LVL181:
 2819              	.L282:
 941:Src/adc.c     ****     MODIFY_REG(hadc2.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2820              		.loc 1 941 5 is_stmt 1 view .LVU943
 2821 011a 43F48063 		orr	r3, r3, #1024
 2822 011e CCF80C30 		str	r3, [ip, #12]
 942:Src/adc.c     ****     MODIFY_REG(hadc3.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_RISING);
 2823              		.loc 1 942 5 view .LVU944
 2824 0122 FB68     		ldr	r3, [r7, #12]
 2825 0124 23F44063 		bic	r3, r3, #3072
 2826 0128 43F48063 		orr	r3, r3, #1024
 2827 012c FB60     		str	r3, [r7, #12]
 943:Src/adc.c     ****     MODIFY_REG(hadc4.Instance->CFGR, ADC_CFGR_EXTEN, ADC_EXTERNALTRIGCONVEDGE_FALLING);
 2828              		.loc 1 943 5 view .LVU945
 2829 012e C368     		ldr	r3, [r0, #12]
 2830 0130 23F44063 		bic	r3, r3, #3072
 2831 0134 43F48063 		orr	r3, r3, #1024
 2832 0138 C360     		str	r3, [r0, #12]
 944:Src/adc.c     ****     usec_lag = abs(usec_lag);                             // turn it +ve for the timer
 2833              		.loc 1 944 5 view .LVU946
 2834 013a D368     		ldr	r3, [r2, #12]
 2835 013c 23F44063 		bic	r3, r3, #3072
 2836 0140 43F40063 		orr	r3, r3, #2048
 946:Src/adc.c     ****   } else {
 2837              		.loc 1 946 15 is_stmt 0 view .LVU947
 2838 0144 0220     		movs	r0, #2
 944:Src/adc.c     ****     usec_lag = abs(usec_lag);                             // turn it +ve for the timer
 2839              		.loc 1 944 5 view .LVU948
 2840 0146 D360     		str	r3, [r2, #12]
 945:Src/adc.c     ****     isr_index = 2;                                        // process ISR when I comes in
 2841              		.loc 1 945 5 is_stmt 1 view .LVU949
 945:Src/adc.c     ****     isr_index = 2;                                        // process ISR when I comes in
 2842              		.loc 1 945 14 is_stmt 0 view .LVU950
 2843 0148 6442     		rsbs	r4, r4, #0
 2844              	.LVL182:
 946:Src/adc.c     ****   } else {
 2845              		.loc 1 946 5 is_stmt 1 view .LVU951
 946:Src/adc.c     ****   } else {
 2846              		.loc 1 946 15 is_stmt 0 view .LVU952
 2847 014a 0860     		str	r0, [r1]
 2848 014c DFE7     		b	.L280
 2849              	.L284:
 2850 014e 00BF     		.align	2
 2851              	.L283:
 2852 0150 00000000 		.word	.LC1
 2853 0154 00000000 		.word	hadc2
 2854 0158 00000000 		.word	hadc3
 2855 015c 00000000 		.word	hadc4
 2856 0160 00000000 		.word	log_buffer
 2857 0164 00000000 		.word	.LANCHOR2
 2858 0168 00000000 		.word	adc_dma_buff
 2859 016c 00000000 		.word	hadc1
 2860 0170 F00A0000 		.word	adc_dma_buff+2800
 2861 0174 E0150000 		.word	adc_dma_buff+5600
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 79


 2862 0178 D0200000 		.word	adc_dma_buff+8400
 2863              		.cfi_endproc
 2864              	.LFE308:
 2866              		.section	.text.get_cpu_temp,"ax",%progbits
 2867              		.align	1
 2868              		.p2align 2,,3
 2869              		.global	get_cpu_temp
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu fpv4-sp-d16
 2875              	get_cpu_temp:
 2876              	.LFB309:
 991:Src/adc.c     **** 
 992:Src/adc.c     **** //
 993:Src/adc.c     **** // See the ADC sequence definition above (comment in ConvCplEither()) to know
 994:Src/adc.c     **** // where to get these two from.  They're being sampled every time around the
 995:Src/adc.c     **** // sequence and they're slow moving, so it doesn't matter which half of the
 996:Src/adc.c     **** // dma buffer we sample them from.
 997:Src/adc.c     **** //
 998:Src/adc.c     **** int get_cpu_temp () {
 2877              		.loc 1 998 21 is_stmt 1 view -0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
 2881              		@ link register save eliminated.
 999:Src/adc.c     ****   return (COMPUTATION_TEMPERATURE(adc_dma_buff[0][6]));
 2882              		.loc 1 999 3 view .LVU954
 2883              		.loc 1 999 11 is_stmt 0 view .LVU955
 2884 0000 074A     		ldr	r2, .L286
 2885 0002 084B     		ldr	r3, .L286+4
 2886 0004 9089     		ldrh	r0, [r2, #12]
 2887 0006 1A88     		ldrh	r2, [r3]
 2888 0008 0A33     		adds	r3, r3, #10
 2889 000a 801A     		subs	r0, r0, r2
 2890 000c 1B88     		ldrh	r3, [r3]
 2891 000e 00EB8000 		add	r0, r0, r0, lsl #2
 2892 0012 9B1A     		subs	r3, r3, r2
 2893 0014 0001     		lsls	r0, r0, #4
 2894 0016 90FBF3F0 		sdiv	r0, r0, r3
1000:Src/adc.c     **** }
 2895              		.loc 1 1000 1 view .LVU956
 2896 001a 1E30     		adds	r0, r0, #30
 2897 001c 7047     		bx	lr
 2898              	.L287:
 2899 001e 00BF     		.align	2
 2900              	.L286:
 2901 0020 00000000 		.word	adc_dma_buff
 2902 0024 B8F7FF1F 		.word	536868792
 2903              		.cfi_endproc
 2904              	.LFE309:
 2906              		.section	.text.get_vdd,"ax",%progbits
 2907              		.align	1
 2908              		.p2align 2,,3
 2909              		.global	get_vdd
 2910              		.syntax unified
 2911              		.thumb
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 80


 2912              		.thumb_func
 2913              		.fpu fpv4-sp-d16
 2915              	get_vdd:
 2916              	.LFB310:
1001:Src/adc.c     **** 
1002:Src/adc.c     **** int get_vdd () {
 2917              		.loc 1 1002 16 is_stmt 1 view -0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 0
 2920              		@ frame_needed = 0, uses_anonymous_args = 0
 2921              		@ link register save eliminated.
1003:Src/adc.c     ****   return (3300 * *VREF_CAL_ADDR / adc_dma_buff[2][3]);
 2922              		.loc 1 1003 3 view .LVU958
 2923              		.loc 1 1003 18 is_stmt 0 view .LVU959
 2924 0000 064B     		ldr	r3, .L289
 2925              		.loc 1 1003 50 view .LVU960
 2926 0002 0749     		ldr	r1, .L289+4
 2927              		.loc 1 1003 18 view .LVU961
 2928 0004 1888     		ldrh	r0, [r3]
 2929              		.loc 1 1003 50 view .LVU962
 2930 0006 41F2E652 		movw	r2, #5606
 2931              		.loc 1 1003 16 view .LVU963
 2932 000a 40F6E443 		movw	r3, #3300
 2933 000e 03FB00F3 		mul	r3, r3, r0
 2934              		.loc 1 1003 50 view .LVU964
 2935 0012 885A     		ldrh	r0, [r1, r2]
1004:Src/adc.c     **** }
 2936              		.loc 1 1004 1 view .LVU965
 2937 0014 B3FBF0F0 		udiv	r0, r3, r0
 2938 0018 7047     		bx	lr
 2939              	.L290:
 2940 001a 00BF     		.align	2
 2941              	.L289:
 2942 001c BAF7FF1F 		.word	536868794
 2943 0020 00000000 		.word	adc_dma_buff
 2944              		.cfi_endproc
 2945              	.LFE310:
 2947              		.section	.text.dump_CFGRs,"ax",%progbits
 2948              		.align	1
 2949              		.p2align 2,,3
 2950              		.global	dump_CFGRs
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2954              		.fpu fpv4-sp-d16
 2956              	dump_CFGRs:
 2957              	.LFB311:
1005:Src/adc.c     **** 
1006:Src/adc.c     **** //
1007:Src/adc.c     **** // Diagnostic routine to dump all 4 ADC's config registers to check edge configs
1008:Src/adc.c     **** //
1009:Src/adc.c     **** void dump_CFGRs() {
 2958              		.loc 1 1009 19 is_stmt 1 view -0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 0
 2961              		@ frame_needed = 0, uses_anonymous_args = 0
1010:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer), "hadc1.CFGR: %08x\n", (unsigned int)hadc1.Instance->CFGR
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 81


 2962              		.loc 1 1010 3 view .LVU967
 2963              		.loc 1 1010 85 is_stmt 0 view .LVU968
 2964 0000 174B     		ldr	r3, .L293
 2965              		.loc 1 1010 3 view .LVU969
 2966 0002 184A     		ldr	r2, .L293+4
 2967              		.loc 1 1010 85 view .LVU970
 2968 0004 1B68     		ldr	r3, [r3]
1009:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer), "hadc1.CFGR: %08x\n", (unsigned int)hadc1.Instance->CFGR
 2969              		.loc 1 1009 19 view .LVU971
 2970 0006 10B5     		push	{r4, lr}
 2971              	.LCFI44:
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 4, -8
 2974              		.cfi_offset 14, -4
 2975              		.loc 1 1010 3 view .LVU972
 2976 0008 174C     		ldr	r4, .L293+8
 2977              		.loc 1 1010 94 view .LVU973
 2978 000a DB68     		ldr	r3, [r3, #12]
 2979              		.loc 1 1010 3 view .LVU974
 2980 000c C821     		movs	r1, #200
 2981 000e 2046     		mov	r0, r4
 2982 0010 FFF7FEFF 		bl	snprintf
 2983              	.LVL183:
1011:Src/adc.c     ****   debug_printf(log_buffer);
 2984              		.loc 1 1011 3 is_stmt 1 view .LVU975
 2985 0014 2046     		mov	r0, r4
 2986 0016 FFF7FEFF 		bl	debug_printf
 2987              	.LVL184:
1012:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer), "hadc2.CFGR: %08x\n", (unsigned int)hadc2.Instance->CFGR
 2988              		.loc 1 1012 3 view .LVU976
 2989              		.loc 1 1012 85 is_stmt 0 view .LVU977
 2990 001a 144B     		ldr	r3, .L293+12
 2991              		.loc 1 1012 3 view .LVU978
 2992 001c 144A     		ldr	r2, .L293+16
 2993              		.loc 1 1012 85 view .LVU979
 2994 001e 1B68     		ldr	r3, [r3]
 2995              		.loc 1 1012 3 view .LVU980
 2996 0020 C821     		movs	r1, #200
 2997              		.loc 1 1012 94 view .LVU981
 2998 0022 DB68     		ldr	r3, [r3, #12]
 2999              		.loc 1 1012 3 view .LVU982
 3000 0024 2046     		mov	r0, r4
 3001 0026 FFF7FEFF 		bl	snprintf
 3002              	.LVL185:
1013:Src/adc.c     ****   debug_printf(log_buffer);
 3003              		.loc 1 1013 3 is_stmt 1 view .LVU983
 3004 002a 2046     		mov	r0, r4
 3005 002c FFF7FEFF 		bl	debug_printf
 3006              	.LVL186:
1014:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer), "hadc3.CFGR: %08x\n", (unsigned int)hadc3.Instance->CFGR
 3007              		.loc 1 1014 3 view .LVU984
 3008              		.loc 1 1014 85 is_stmt 0 view .LVU985
 3009 0030 104B     		ldr	r3, .L293+20
 3010              		.loc 1 1014 3 view .LVU986
 3011 0032 114A     		ldr	r2, .L293+24
 3012              		.loc 1 1014 85 view .LVU987
 3013 0034 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 82


 3014              		.loc 1 1014 3 view .LVU988
 3015 0036 C821     		movs	r1, #200
 3016              		.loc 1 1014 94 view .LVU989
 3017 0038 DB68     		ldr	r3, [r3, #12]
 3018              		.loc 1 1014 3 view .LVU990
 3019 003a 2046     		mov	r0, r4
 3020 003c FFF7FEFF 		bl	snprintf
 3021              	.LVL187:
1015:Src/adc.c     ****   debug_printf(log_buffer);
 3022              		.loc 1 1015 3 is_stmt 1 view .LVU991
 3023 0040 2046     		mov	r0, r4
 3024 0042 FFF7FEFF 		bl	debug_printf
 3025              	.LVL188:
1016:Src/adc.c     ****   snprintf(log_buffer, sizeof(log_buffer), "hadc4.CFGR: %08x\n", (unsigned int)hadc4.Instance->CFGR
 3026              		.loc 1 1016 3 view .LVU992
 3027              		.loc 1 1016 85 is_stmt 0 view .LVU993
 3028 0046 0D4B     		ldr	r3, .L293+28
 3029              		.loc 1 1016 3 view .LVU994
 3030 0048 0D4A     		ldr	r2, .L293+32
 3031              		.loc 1 1016 85 view .LVU995
 3032 004a 1B68     		ldr	r3, [r3]
 3033              		.loc 1 1016 3 view .LVU996
 3034 004c 2046     		mov	r0, r4
 3035              		.loc 1 1016 94 view .LVU997
 3036 004e DB68     		ldr	r3, [r3, #12]
 3037              		.loc 1 1016 3 view .LVU998
 3038 0050 C821     		movs	r1, #200
 3039 0052 FFF7FEFF 		bl	snprintf
 3040              	.LVL189:
1017:Src/adc.c     ****   debug_printf(log_buffer);
 3041              		.loc 1 1017 3 is_stmt 1 view .LVU999
 3042 0056 2046     		mov	r0, r4
1018:Src/adc.c     **** }
 3043              		.loc 1 1018 1 is_stmt 0 view .LVU1000
 3044 0058 BDE81040 		pop	{r4, lr}
 3045              	.LCFI45:
 3046              		.cfi_restore 14
 3047              		.cfi_restore 4
 3048              		.cfi_def_cfa_offset 0
1017:Src/adc.c     ****   debug_printf(log_buffer);
 3049              		.loc 1 1017 3 view .LVU1001
 3050 005c FFF7FEBF 		b	debug_printf
 3051              	.LVL190:
 3052              	.L294:
 3053              		.align	2
 3054              	.L293:
 3055 0060 00000000 		.word	hadc1
 3056 0064 00000000 		.word	.LC2
 3057 0068 00000000 		.word	log_buffer
 3058 006c 00000000 		.word	hadc2
 3059 0070 14000000 		.word	.LC3
 3060 0074 00000000 		.word	hadc3
 3061 0078 28000000 		.word	.LC4
 3062 007c 00000000 		.word	hadc4
 3063 0080 3C000000 		.word	.LC5
 3064              		.cfi_endproc
 3065              	.LFE311:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 83


 3067              		.comm	hdma_adc4,68,4
 3068              		.comm	hdma_adc3,68,4
 3069              		.comm	hdma_adc2,68,4
 3070              		.comm	hdma_adc1,68,4
 3071              		.comm	hadc4,84,4
 3072              		.comm	hadc3,84,4
 3073              		.comm	hadc2,84,4
 3074              		.comm	hadc1,84,4
 3075              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 3076              		.align	2
 3077              		.set	.LANCHOR0,. + 0
 3080              	HAL_RCC_ADC12_CLK_ENABLED:
 3081 0000 00000000 		.space	4
 3082              		.section	.bss.HAL_RCC_ADC34_CLK_ENABLED,"aw",%nobits
 3083              		.align	2
 3084              		.set	.LANCHOR1,. + 0
 3087              	HAL_RCC_ADC34_CLK_ENABLED:
 3088 0000 00000000 		.space	4
 3089              		.section	.bss.adc_dma_buff,"aw",%nobits
 3090              		.align	2
 3093              	adc_dma_buff:
 3094 0000 00000000 		.space	11200
 3094      00000000 
 3094      00000000 
 3094      00000000 
 3094      00000000 
 3095              		.section	.bss.isr_index,"aw",%nobits
 3096              		.align	2
 3097              		.set	.LANCHOR2,. + 0
 3100              	isr_index:
 3101 0000 00000000 		.space	4
 3102              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 3103              		.align	2
 3104              	.LC0:
 3105 0000 5372632F 		.ascii	"Src/adc.c\000"
 3105      6164632E 
 3105      6300
 3106              		.section	.rodata.dump_CFGRs.str1.4,"aMS",%progbits,1
 3107              		.align	2
 3108              	.LC2:
 3109 0000 68616463 		.ascii	"hadc1.CFGR: %08x\012\000"
 3109      312E4346 
 3109      47523A20 
 3109      25303878 
 3109      0A00
 3110 0012 0000     		.space	2
 3111              	.LC3:
 3112 0014 68616463 		.ascii	"hadc2.CFGR: %08x\012\000"
 3112      322E4346 
 3112      47523A20 
 3112      25303878 
 3112      0A00
 3113 0026 0000     		.space	2
 3114              	.LC4:
 3115 0028 68616463 		.ascii	"hadc3.CFGR: %08x\012\000"
 3115      332E4346 
 3115      47523A20 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 84


 3115      25303878 
 3115      0A00
 3116 003a 0000     		.space	2
 3117              	.LC5:
 3118 003c 68616463 		.ascii	"hadc4.CFGR: %08x\012\000"
 3118      342E4346 
 3118      47523A20 
 3118      25303878 
 3118      0A00
 3119              		.section	.rodata.start_ADCs.str1.4,"aMS",%progbits,1
 3120              		.align	2
 3121              	.LC1:
 3122 0000 41444320 		.ascii	"ADC DMA buffs: %d bytes\012\000"
 3122      444D4120 
 3122      62756666 
 3122      733A2025 
 3122      64206279 
 3123              		.text
 3124              	.Letext0:
 3125              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types
 3126              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3127              		.file 4 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 3128              		.file 5 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 3129              		.file 6 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h
 3130              		.file 7 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 3131              		.file 8 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdlib.h"
 3132              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 3133              		.file 10 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 3134              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 3135              		.file 12 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 3136              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 3137              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 3138              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 3139              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 3140              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 3141              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 3142              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 3143              		.file 20 "Inc/adc.h"
 3144              		.file 21 "Inc/tim.h"
 3145              		.file 22 "Inc/usart.h"
 3146              		.file 23 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdio.h"
 3147              		.file 24 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 3148              		.file 25 "Inc/power.h"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:18     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:27     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:345    .text.MX_ADC1_Init:0000000000000140 $d
                            *COM*:0000000000000054 hadc1
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:351    .text.MX_ADC2_Init:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:359    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:654    .text.MX_ADC2_Init:0000000000000128 $d
                            *COM*:0000000000000054 hadc2
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:661    .text.MX_ADC3_Init:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:669    .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:981    .text.MX_ADC3_Init:0000000000000148 $d
                            *COM*:0000000000000054 hadc3
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:988    .text.MX_ADC4_Init:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:996    .text.MX_ADC4_Init:0000000000000000 MX_ADC4_Init
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1295   .text.MX_ADC4_Init:0000000000000138 $d
                            *COM*:0000000000000054 hadc4
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1302   .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1310   .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1845   .text.HAL_ADC_MspInit:0000000000000238 $d
                            *COM*:0000000000000044 hdma_adc2
                            *COM*:0000000000000044 hdma_adc1
                            *COM*:0000000000000044 hdma_adc3
                            *COM*:0000000000000044 hdma_adc4
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1866   .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1874   .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1978   .text.HAL_ADC_MspDeInit:0000000000000068 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1987   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:1995   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2253   .text.HAL_ADC_ConvHalfCpltCallback:00000000000000d0 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3093   .bss.adc_dma_buff:0000000000000000 adc_dma_buff
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2266   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2274   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2532   .text.HAL_ADC_ConvCpltCallback:00000000000000d4 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2545   .text.calibrate_ADCs:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2553   .text.calibrate_ADCs:0000000000000000 calibrate_ADCs
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2596   .text.calibrate_ADCs:0000000000000028 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2604   .text.start_ADCs:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2612   .text.start_ADCs:0000000000000000 start_ADCs
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2852   .text.start_ADCs:0000000000000150 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2867   .text.get_cpu_temp:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2875   .text.get_cpu_temp:0000000000000000 get_cpu_temp
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2901   .text.get_cpu_temp:0000000000000020 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2907   .text.get_vdd:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2915   .text.get_vdd:0000000000000000 get_vdd
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2942   .text.get_vdd:000000000000001c $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2948   .text.dump_CFGRs:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:2956   .text.dump_CFGRs:0000000000000000 dump_CFGRs
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3055   .text.dump_CFGRs:0000000000000060 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3076   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3080   .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 HAL_RCC_ADC12_CLK_ENABLED
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3083   .bss.HAL_RCC_ADC34_CLK_ENABLED:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3087   .bss.HAL_RCC_ADC34_CLK_ENABLED:0000000000000000 HAL_RCC_ADC34_CLK_ENABLED
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3090   .bss.adc_dma_buff:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3096   .bss.isr_index:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3100   .bss.isr_index:0000000000000000 isr_index
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s 			page 86


/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3103   .rodata.MX_ADC1_Init.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3107   .rodata.dump_CFGRs.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccyotBfQ.s:3120   .rodata.start_ADCs.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_GetTick
HAL_GPIO_WritePin
process_VI_pair
HAL_ADCEx_Calibration_Start
snprintf
debug_printf
HAL_ADC_Stop_DMA
pulse_tim8_ch2
HAL_Delay
HAL_ADC_Start_DMA
log_buffer
