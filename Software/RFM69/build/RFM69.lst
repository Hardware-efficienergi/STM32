ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"RFM69.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RFM69_ACKRequested,"ax",%progbits
  18              		.align	1
  19              		.global	RFM69_ACKRequested
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	RFM69_ACKRequested:
  27              	.LFB138:
  28              		.file 1 "Src/RFM69.c"
   1:Src/RFM69.c   **** // **********************************************************************************
   2:Src/RFM69.c   **** // Driver definition for HopeRF RFM69W/RFM69HW/RFM69CW/RFM69HCW, Semtech SX1231/1231H
   3:Src/RFM69.c   **** // **********************************************************************************
   4:Src/RFM69.c   **** // Copyright Felix Rusu (2014), felix@lowpowerlab.com
   5:Src/RFM69.c   **** // http://lowpowerlab.com/
   6:Src/RFM69.c   **** // **********************************************************************************
   7:Src/RFM69.c   **** // License
   8:Src/RFM69.c   **** // **********************************************************************************
   9:Src/RFM69.c   **** // This program is free software; you can redistribute it
  10:Src/RFM69.c   **** // and/or modify it under the terms of the GNU General
  11:Src/RFM69.c   **** // Public License as published by the Free Software
  12:Src/RFM69.c   **** // Foundation; either version 3 of the License, or
  13:Src/RFM69.c   **** // (at your option) any later version.
  14:Src/RFM69.c   **** //
  15:Src/RFM69.c   **** // This program is distributed in the hope that it will
  16:Src/RFM69.c   **** // be useful, but WITHOUT ANY WARRANTY; without even the
  17:Src/RFM69.c   **** // implied warranty of MERCHANTABILITY or FITNESS FOR A
  18:Src/RFM69.c   **** // PARTICULAR PURPOSE. See the GNU General Public
  19:Src/RFM69.c   **** // License for more details.
  20:Src/RFM69.c   **** //
  21:Src/RFM69.c   **** // You should have received a copy of the GNU General
  22:Src/RFM69.c   **** // Public License along with this program.
  23:Src/RFM69.c   **** // If not, see <http://www.gnu.org/licenses/>.
  24:Src/RFM69.c   **** //
  25:Src/RFM69.c   **** // Licence can be viewed at
  26:Src/RFM69.c   **** // http://www.gnu.org/licenses/gpl-3.0.txt
  27:Src/RFM69.c   **** //
  28:Src/RFM69.c   **** // Please maintain this license information along with authorship
  29:Src/RFM69.c   **** // and copyright notices in any redistribution of this code
  30:Src/RFM69.c   **** // **********************************************************************************
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 2


  31:Src/RFM69.c   **** #include <RFM69.h>
  32:Src/RFM69.c   **** #include <RFM69registers.h>
  33:Src/RFM69.c   **** #include <RFM69_ext.h>
  34:Src/RFM69.c   **** 
  35:Src/RFM69.c   **** 
  36:Src/RFM69.c   **** char log_buffer[150];
  37:Src/RFM69.c   **** uint8_t data[RF69_MAX_DATA_LEN]; // recv/xmit buf, including header & crc bytes
  38:Src/RFM69.c   **** #define RFM69_DATA(x) data[x] // function to grab specific bytes from data[]
  39:Src/RFM69.c   **** uint8_t datalen;
  40:Src/RFM69.c   **** uint8_t senderID;
  41:Src/RFM69.c   **** uint8_t targetID;                // should match _address
  42:Src/RFM69.c   **** uint8_t payloadLen;
  43:Src/RFM69.c   **** uint8_t ACK_Requested;
  44:Src/RFM69.c   **** uint8_t ACK_RECEIVED;           // should be polled immediately after sending a packet with ACK req
  45:Src/RFM69.c   **** uint8_t _mode;
  46:Src/RFM69.c   **** int16_t rssi;                   // most accurate RSSI during reception (closest to the reception)
  47:Src/RFM69.c   **** 
  48:Src/RFM69.c   **** uint8_t _address;
  49:Src/RFM69.c   **** uint8_t _powerLevel = 16; // 31 max
  50:Src/RFM69.c   **** bool _promiscuousMode = false;
  51:Src/RFM69.c   **** uint8_t _mode = RF69_MODE_STANDBY;
  52:Src/RFM69.c   **** 
  53:Src/RFM69.c   **** 
  54:Src/RFM69.c   **** 
  55:Src/RFM69.c   **** 
  56:Src/RFM69.c   **** bool RFM69_initialize(uint16_t freqBand, uint8_t nodeID, uint16_t networkID)
  57:Src/RFM69.c   **** {
  58:Src/RFM69.c   ****   const uint8_t CONFIG[][2] =
  59:Src/RFM69.c   ****   {
  60:Src/RFM69.c   ****     /* 0x01 */ { REG_OPMODE, RF_OPMODE_SEQUENCER_ON | RF_OPMODE_LISTEN_OFF | RF_OPMODE_STANDBY },
  61:Src/RFM69.c   ****     /* 0x02 */ { REG_DATAMODUL, RF_DATAMODUL_DATAMODE_PACKET | RF_DATAMODUL_MODULATIONTYPE_FSK | RF
  62:Src/RFM69.c   ****     /* 0x03 */ { REG_BITRATEMSB, RF_BITRATEMSB_55555}, // default: 4.8 KBPS
  63:Src/RFM69.c   ****     /* 0x04 */ { REG_BITRATELSB, RF_BITRATELSB_55555},
  64:Src/RFM69.c   ****     /* 0x05 */ { REG_FDEVMSB, RF_FDEVMSB_50000}, // default: 5KHz, (FDEV + BitRate / 2 <= 500KHz)
  65:Src/RFM69.c   ****     /* 0x06 */ { REG_FDEVLSB, RF_FDEVLSB_50000},
  66:Src/RFM69.c   **** 
  67:Src/RFM69.c   ****     /* 0x07 */ { REG_FRFMSB, (freqBand == RF69_315MHZ ? RF_FRFMSB_315 : (freqBand == RF69_433MHZ ? 
  68:Src/RFM69.c   ****     /* 0x08 */ { REG_FRFMID, (freqBand == RF69_315MHZ ? RF_FRFMID_315 : (freqBand == RF69_433MHZ ? 
  69:Src/RFM69.c   ****     /* 0x09 */ { REG_FRFLSB, (freqBand == RF69_315MHZ ? RF_FRFLSB_315 : (freqBand == RF69_433MHZ ? 
  70:Src/RFM69.c   ****     //* 0x07 */ { REG_FRFMSB, RF_FRFMSB_433 },
  71:Src/RFM69.c   ****     //* 0x08 */ { REG_FRFMID, RF_FRFMID_433 },
  72:Src/RFM69.c   ****     //* 0x09 */ { REG_FRFLSB, RF_FRFLSB_433 },
  73:Src/RFM69.c   ****     /*
  74:Src/RFM69.c   ****     // available frequency bands
  75:Src/RFM69.c   ****     #define RF69_315MHZ            315 // non trivial values to avoid misconfiguration
  76:Src/RFM69.c   ****     #define RF69_433MHZ            433
  77:Src/RFM69.c   ****     #define RF69_868MHZ            868
  78:Src/RFM69.c   ****     #define RF69_915MHZ            915
  79:Src/RFM69.c   ****     */
  80:Src/RFM69.c   **** 
  81:Src/RFM69.c   ****     // looks like PA1 and PA2 are not implemented on RFM69W, hence the max output power is 13dBm
  82:Src/RFM69.c   ****     // +17dBm and +20dBm are possible on RFM69HW
  83:Src/RFM69.c   ****     // +13dBm formula: Pout = -18 + OutputPower (with PA0 or PA1**)
  84:Src/RFM69.c   ****     // +17dBm formula: Pout = -14 + OutputPower (with PA1 and PA2)**
  85:Src/RFM69.c   ****     // +20dBm formula: Pout = -11 + OutputPower (with PA1 and PA2)** and high power PA settings (se
  86:Src/RFM69.c   ****     ///* 0x11 */ { REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | RF_PA
  87:Src/RFM69.c   ****     ///* 0x13 */ { REG_OCP, RF_OCP_ON | RF_OCP_TRIM_95 }, // over current protection (default is 95
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 3


  88:Src/RFM69.c   **** 
  89:Src/RFM69.c   ****     // RXBW defaults are { REG_RXBW, RF_RXBW_DCCFREQ_010 | RF_RXBW_MANT_24 | RF_RXBW_EXP_5} (RxBw: 
  90:Src/RFM69.c   ****     /* 0x19 */ { REG_RXBW, RF_RXBW_DCCFREQ_010 | RF_RXBW_MANT_16 | RF_RXBW_EXP_2 }, // (BitRate < 2
  91:Src/RFM69.c   ****     //for BR-19200: /* 0x19 */ { REG_RXBW, RF_RXBW_DCCFREQ_010 | RF_RXBW_MANT_24 | RF_RXBW_EXP_3 },
  92:Src/RFM69.c   ****     /* 0x25 */ { REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01 }, // DIO0 is the only IRQ we're using
  93:Src/RFM69.c   ****     /* 0x26 */ { REG_DIOMAPPING2, RF_DIOMAPPING2_CLKOUT_OFF }, // DIO5 ClkOut disable for power sav
  94:Src/RFM69.c   ****     /* 0x28 */ { REG_IRQFLAGS2, RF_IRQFLAGS2_FIFOOVERRUN }, // writing to this bit ensures that the
  95:Src/RFM69.c   ****     /* 0x29 */ { REG_RSSITHRESH, 220 }, // must be set to dBm = (-Sensitivity / 2), default is 0xE4
  96:Src/RFM69.c   ****     ///* 0x2D */ { REG_PREAMBLELSB, RF_PREAMBLESIZE_LSB_VALUE } // default 3 preamble bytes 0xAAAAA
  97:Src/RFM69.c   ****     /* 0x2E */ { REG_SYNCCONFIG, RF_SYNC_ON | RF_SYNC_FIFOFILL_AUTO | RF_SYNC_SIZE_2 | RF_SYNC_TOL_
  98:Src/RFM69.c   ****     ///* 0x2F */ { REG_SYNCVALUE1, (uint8_t)(networkID & 0x00FF) },  // NETWORK ID lower 8 bits
  99:Src/RFM69.c   ****     ///* 0x30 */ { REG_SYNCVALUE2, (uint8_t)(networkID >> 8) },      // NETWORK ID higher 8 bits
 100:Src/RFM69.c   ****     /* 0x2F */ { REG_SYNCVALUE1, 0x2D },      // attempt to make this compatible with sync1 byte of
 101:Src/RFM69.c   ****     /* 0x30 */ { REG_SYNCVALUE2, networkID }, // NETWORK ID
 102:Src/RFM69.c   ****     /* 0x37 */ { REG_PACKETCONFIG1, RF_PACKET1_FORMAT_VARIABLE | RF_PACKET1_DCFREE_OFF | RF_PACKET1
 103:Src/RFM69.c   ****     /* 0x38 */ { REG_PAYLOADLENGTH, 66 }, // in variable length mode: the max frame size, not used 
 104:Src/RFM69.c   ****     ///* 0x39 */ { REG_NODEADRS, nodeID }, // turned off because we're not using address filtering
 105:Src/RFM69.c   ****     /* 0x3C */ { REG_FIFOTHRESH, RF_FIFOTHRESH_TXSTART_FIFONOTEMPTY | RF_FIFOTHRESH_VALUE }, // TX 
 106:Src/RFM69.c   ****     /* 0x3D */ { REG_PACKETCONFIG2, RF_PACKET2_RXRESTARTDELAY_2BITS | RF_PACKET2_AUTORXRESTART_ON |
 107:Src/RFM69.c   ****     //for BR-19200: /* 0x3D */ { REG_PACKETCONFIG2, RF_PACKET2_RXRESTARTDELAY_NONE | RF_PACKET2_AUT
 108:Src/RFM69.c   ****     /* 0x6F */ { REG_TESTDAGC, RF_DAGC_IMPROVED_LOWBETA0 }, // run DAGC continuously in RX mode for
 109:Src/RFM69.c   ****     {255, 0}
 110:Src/RFM69.c   ****   };
 111:Src/RFM69.c   ****   uint8_t i;
 112:Src/RFM69.c   **** 
 113:Src/RFM69.c   ****   RFM69_SetCSPin(1);
 114:Src/RFM69.c   **** 
 115:Src/RFM69.c   ****   for (i = 0; CONFIG[i][0] != 255; i++) {
 116:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 117:Src/RFM69.c   ****   }
 118:Src/RFM69.c   **** 
 119:Src/RFM69.c   ****   // check written registers
 120:Src/RFM69.c   ****   for (i = 0; CONFIG[i][0] != 255; i++) {
 121:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 122:Src/RFM69.c   ****     {
 123:Src/RFM69.c   ****       if(RFM69_readReg(CONFIG[i][0]) != CONFIG[i][1]) {
 124:Src/RFM69.c   ****         return false;
 125:Src/RFM69.c   ****       }
 126:Src/RFM69.c   ****     }
 127:Src/RFM69.c   ****   }
 128:Src/RFM69.c   **** 
 129:Src/RFM69.c   ****   // Encryption is persistent between resets and can trip you up during debugging.
 130:Src/RFM69.c   ****   // Disable it during initialization so we always start from a known state.
 131:Src/RFM69.c   ****   RFM69_encrypt(0);
 132:Src/RFM69.c   **** 
 133:Src/RFM69.c   ****   RFM69_setHighPower(); // called regardless if it's a RFM69W or RFM69HW
 134:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 135:Src/RFM69.c   ****   Timeout_SetTimeout1(50);
 136:Src/RFM69.c   ****   while (((RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00) && !Timeout_IsTimeout1()
 137:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 138:Src/RFM69.c   ****   {
 139:Src/RFM69.c   ****     return false;
 140:Src/RFM69.c   ****   }
 141:Src/RFM69.c   **** 
 142:Src/RFM69.c   ****   _address = nodeID;
 143:Src/RFM69.c   ****   return true;
 144:Src/RFM69.c   **** }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 4


 145:Src/RFM69.c   **** 
 146:Src/RFM69.c   **** 
 147:Src/RFM69.c   **** // internal
 148:Src/RFM69.c   **** static void RFM69_sendFrame(uint8_t toAddress, const void* buffer, uint8_t size, bool requestACK, b
 149:Src/RFM69.c   **** 
 150:Src/RFM69.c   **** // return the frequency (in Hz)
 151:Src/RFM69.c   **** uint32_t RFM69_getFrequency()
 152:Src/RFM69.c   **** {
 153:Src/RFM69.c   ****   return RF69_FSTEP * (((uint32_t) RFM69_readReg(REG_FRFMSB) << 16) + ((uint16_t) RFM69_readReg(REG
 154:Src/RFM69.c   **** }
 155:Src/RFM69.c   **** 
 156:Src/RFM69.c   **** // set the frequency (in Hz)
 157:Src/RFM69.c   **** void RFM69_setFrequency(uint32_t freqHz)
 158:Src/RFM69.c   **** {
 159:Src/RFM69.c   ****   uint8_t oldMode = _mode;
 160:Src/RFM69.c   ****   if (oldMode == RF69_MODE_TX) {
 161:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_RX);
 162:Src/RFM69.c   ****   }
 163:Src/RFM69.c   ****   freqHz /= RF69_FSTEP; // divide down by FSTEP to get FRF
 164:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMSB, freqHz >> 16);
 165:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMID, freqHz >> 8);
 166:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFLSB, freqHz);
 167:Src/RFM69.c   ****   if (oldMode == RF69_MODE_RX) {
 168:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_SYNTH);
 169:Src/RFM69.c   ****   }
 170:Src/RFM69.c   ****   RFM69_setMode(oldMode);
 171:Src/RFM69.c   **** }
 172:Src/RFM69.c   **** 
 173:Src/RFM69.c   **** void RFM69_setMode(uint8_t newMode)
 174:Src/RFM69.c   **** {
 175:Src/RFM69.c   ****   if (newMode == _mode)
 176:Src/RFM69.c   ****     return;
 177:Src/RFM69.c   **** 
 178:Src/RFM69.c   ****   switch (newMode) {
 179:Src/RFM69.c   ****     case RF69_MODE_TX:
 180:Src/RFM69.c   ****       RFM69_writeReg(REG_OPMODE, (RFM69_readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_TRANSMITTER);
 181:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 182:Src/RFM69.c   ****       break;
 183:Src/RFM69.c   ****     case RF69_MODE_RX:
 184:Src/RFM69.c   ****       RFM69_writeReg(REG_OPMODE, (RFM69_readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_RECEIVER);
 185:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 186:Src/RFM69.c   ****       break;
 187:Src/RFM69.c   ****     case RF69_MODE_SYNTH:
 188:Src/RFM69.c   ****       RFM69_writeReg(REG_OPMODE, (RFM69_readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SYNTHESIZER);
 189:Src/RFM69.c   ****       break;
 190:Src/RFM69.c   ****     case RF69_MODE_STANDBY:
 191:Src/RFM69.c   ****       RFM69_writeReg(REG_OPMODE, (RFM69_readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_STANDBY);
 192:Src/RFM69.c   ****       break;
 193:Src/RFM69.c   ****     case RF69_MODE_SLEEP:
 194:Src/RFM69.c   ****       RFM69_writeReg(REG_OPMODE, (RFM69_readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SLEEP);
 195:Src/RFM69.c   ****       break;
 196:Src/RFM69.c   ****     default:
 197:Src/RFM69.c   ****       return;
 198:Src/RFM69.c   ****   }
 199:Src/RFM69.c   **** 
 200:Src/RFM69.c   ****   // we are using packet mode, so this check is not really needed
 201:Src/RFM69.c   ****   // but waiting for mode ready is necessary when going from sleep because the FIFO may not be imme
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 5


 202:Src/RFM69.c   ****   while (_mode == RF69_MODE_SLEEP && (RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x0
 203:Src/RFM69.c   **** 
 204:Src/RFM69.c   ****   _mode = newMode;
 205:Src/RFM69.c   **** }
 206:Src/RFM69.c   **** 
 207:Src/RFM69.c   **** //put transceiver in sleep mode to save battery - to wake or resume receiving just call RFM69_recei
 208:Src/RFM69.c   **** void RFM69_sleep() {
 209:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_SLEEP);
 210:Src/RFM69.c   **** }
 211:Src/RFM69.c   **** 
 212:Src/RFM69.c   **** //set this node's address
 213:Src/RFM69.c   **** void RFM69_setAddress(uint8_t addr)
 214:Src/RFM69.c   **** {
 215:Src/RFM69.c   ****   _address = addr;
 216:Src/RFM69.c   ****   RFM69_writeReg(REG_NODEADRS, _address);
 217:Src/RFM69.c   **** }
 218:Src/RFM69.c   **** 
 219:Src/RFM69.c   **** //set this node's network id
 220:Src/RFM69.c   **** void RFM69_setNetwork(uint16_t networkID)
 221:Src/RFM69.c   **** {
 222:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE1, (uint8_t)(networkID & 0x00FF));
 223:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE2, (uint8_t)(networkID >> 8));
 224:Src/RFM69.c   **** }
 225:Src/RFM69.c   **** 
 226:Src/RFM69.c   **** // set *transmit/TX* output power: 0=min, 31=max
 227:Src/RFM69.c   **** // this results in a "weaker" transmitted signal, and directly results in a lower RSSI at the recei
 228:Src/RFM69.c   **** // the power configurations are explained in the SX1231H datasheet (Table 10 on p21; RegPaLevel p66
 229:Src/RFM69.c   **** // valid powerLevel parameter values are 0-31 and result in a directly proportional effect on the o
 230:Src/RFM69.c   **** // this function implements 2 modes as follows:
 231:Src/RFM69.c   **** //       - for RFM69W the range is from 0-31 [-18dBm to 13dBm] (PA0 only on RFIO pin)
 232:Src/RFM69.c   **** //       - for RFM69HW the range is from 0-31 [5dBm to 20dBm]  (PA1 & PA2 on PA_BOOST pin & high Po
 233:Src/RFM69.c   **** void RFM69_setPowerLevel(uint8_t powerLevel)
 234:Src/RFM69.c   **** {
 235:Src/RFM69.c   ****   _powerLevel = (powerLevel > 31 ? 31 : powerLevel);
 236:Src/RFM69.c   ****   if (ISRFM69HW)
 237:Src/RFM69.c   ****   {
 238:Src/RFM69.c   ****     _powerLevel /= 2;
 239:Src/RFM69.c   ****   }
 240:Src/RFM69.c   ****   RFM69_writeReg(REG_PALEVEL, (RFM69_readReg(REG_PALEVEL) & 0xE0) | _powerLevel);
 241:Src/RFM69.c   **** }
 242:Src/RFM69.c   **** 
 243:Src/RFM69.c   **** bool RFM69_canSend()
 244:Src/RFM69.c   **** {
 245:Src/RFM69.c   ****   if (_mode == RF69_MODE_RX && payloadLen == 0 && RFM69_readRSSI(false) < CSMA_LIMIT) // if signal 
 246:Src/RFM69.c   ****   {
 247:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_STANDBY);
 248:Src/RFM69.c   ****     return true;
 249:Src/RFM69.c   ****   }
 250:Src/RFM69.c   ****   return false;
 251:Src/RFM69.c   **** }
 252:Src/RFM69.c   **** 
 253:Src/RFM69.c   **** void RFM69_send(uint8_t toAddress, const void* buffer, uint8_t bufferSize, bool requestACK)
 254:Src/RFM69.c   **** {
 255:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 256:Src/RFM69.c   ****   //uint32_t now = millis();
 257:Src/RFM69.c   ****   while (!RFM69_canSend() /*&& millis() - now < RF69_CSMA_LIMIT_MS*/) RFM69_receiveDone();
 258:Src/RFM69.c   ****   RFM69_sendFrame(toAddress, buffer, bufferSize, requestACK, false);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 6


 259:Src/RFM69.c   **** }
 260:Src/RFM69.c   **** 
 261:Src/RFM69.c   **** // to increase the chance of getting a packet across, call this function instead of send
 262:Src/RFM69.c   **** // and it handles all the ACK requesting/retrying for you :)
 263:Src/RFM69.c   **** // The only twist is that you have to manually listen to ACK requests on the other side and send ba
 264:Src/RFM69.c   **** // The reason for the semi-automaton is that the lib is interrupt driven and
 265:Src/RFM69.c   **** // requires user action to read the received data and decide what to do with it
 266:Src/RFM69.c   **** // replies usually take only 5..8ms at 50kbps@915MHz
 267:Src/RFM69.c   **** bool RFM69_sendWithRetry(uint8_t toAddress, const void* buffer, uint8_t bufferSize, uint8_t retries
 268:Src/RFM69.c   **** {
 269:Src/RFM69.c   ****   for (uint8_t i = 0; i <= retries; i++)
 270:Src/RFM69.c   ****   {
 271:Src/RFM69.c   ****     RFM69_send(toAddress, buffer, bufferSize, true);
 272:Src/RFM69.c   ****     Timeout_SetTimeout1(retryWaitTime);
 273:Src/RFM69.c   ****     while (!Timeout_IsTimeout1())
 274:Src/RFM69.c   ****     {
 275:Src/RFM69.c   ****       if (RFM69_ACKReceived(toAddress))
 276:Src/RFM69.c   ****       {
 277:Src/RFM69.c   ****         //Serial.print(" ~ms:"); Serial.print(millis() - sentTime);
 278:Src/RFM69.c   ****         return true;
 279:Src/RFM69.c   ****       }
 280:Src/RFM69.c   ****     }
 281:Src/RFM69.c   ****     //Serial.print(" RETRY#"); Serial.println(i + 1);
 282:Src/RFM69.c   ****   }
 283:Src/RFM69.c   ****   return false;
 284:Src/RFM69.c   **** }
 285:Src/RFM69.c   **** 
 286:Src/RFM69.c   **** // should be polled immediately after sending a packet with ACK request
 287:Src/RFM69.c   **** bool RFM69_ACKReceived(uint8_t fromNodeID)
 288:Src/RFM69.c   **** {
 289:Src/RFM69.c   ****   if (RFM69_receiveDone())
 290:Src/RFM69.c   ****     return (senderID == fromNodeID || fromNodeID == RF69_BROADCAST_ADDR) && ACK_RECEIVED;
 291:Src/RFM69.c   ****   return false;
 292:Src/RFM69.c   **** }
 293:Src/RFM69.c   **** 
 294:Src/RFM69.c   **** // check whether an ACK was requested in the last received packet (non-broadcasted packet)
 295:Src/RFM69.c   **** bool RFM69_ACKRequested()
 296:Src/RFM69.c   **** {
  29              		.loc 1 296 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 297:Src/RFM69.c   ****   return ACK_Requested && (targetID != RF69_BROADCAST_ADDR);
  34              		.loc 1 297 3 view .LVU1
  35              		.loc 1 297 10 is_stmt 0 view .LVU2
  36 0000 064B     		ldr	r3, .L6
  37 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38              		.loc 1 297 24 view .LVU3
  39 0004 3BB1     		cbz	r3, .L3
  40              		.loc 1 297 37 discriminator 1 view .LVU4
  41 0006 064B     		ldr	r3, .L6+4
  42 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43              		.loc 1 297 24 discriminator 1 view .LVU5
  44 000a FF2B     		cmp	r3, #255
  45 000c 01D0     		beq	.L5
  46              		.loc 1 297 24 view .LVU6
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 7


  47 000e 0120     		movs	r0, #1
 298:Src/RFM69.c   **** }
  48              		.loc 1 298 1 view .LVU7
  49 0010 7047     		bx	lr
  50              	.L5:
 297:Src/RFM69.c   ****   return ACK_Requested && (targetID != RF69_BROADCAST_ADDR);
  51              		.loc 1 297 24 view .LVU8
  52 0012 0020     		movs	r0, #0
  53 0014 7047     		bx	lr
  54              	.L3:
  55 0016 0020     		movs	r0, #0
  56 0018 7047     		bx	lr
  57              	.L7:
  58 001a 00BF     		.align	2
  59              	.L6:
  60 001c 00000000 		.word	ACK_Requested
  61 0020 00000000 		.word	targetID
  62              		.cfi_endproc
  63              	.LFE138:
  65              		.section	.text.RFM69_promiscuous,"ax",%progbits
  66              		.align	1
  67              		.global	RFM69_promiscuous
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	RFM69_promiscuous:
  74              	.LVL0:
  75              	.LFB146:
 299:Src/RFM69.c   **** 
 300:Src/RFM69.c   **** // should be called immediately after reception in case sender wants ACK
 301:Src/RFM69.c   **** void RFM69_sendACK(const void* buffer, uint8_t bufferSize)
 302:Src/RFM69.c   **** {
 303:Src/RFM69.c   ****   ACK_Requested = 0;   // TWS added to make sure we don't end up in a timing race and infinite loop
 304:Src/RFM69.c   ****   uint8_t sender = senderID;
 305:Src/RFM69.c   ****   int16_t l_rssi = rssi; // save payload received RSSI value
 306:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 307:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_CSMA_LIMIT_MS);
 308:Src/RFM69.c   ****   while (!RFM69_canSend() && !Timeout_IsTimeout1())
 309:Src/RFM69.c   ****   {
 310:Src/RFM69.c   ****     RFM69_receiveDone();
 311:Src/RFM69.c   ****   }
 312:Src/RFM69.c   ****   senderID = sender;    // TWS: Restore senderID after it gets wiped out by RFM69_receiveDone()
 313:Src/RFM69.c   ****   RFM69_sendFrame(sender, buffer, bufferSize, false, true);
 314:Src/RFM69.c   ****   rssi = l_rssi; // restore payload RSSI
 315:Src/RFM69.c   **** }
 316:Src/RFM69.c   **** 
 317:Src/RFM69.c   **** // internal function
 318:Src/RFM69.c   **** static void RFM69_sendFrame(uint8_t toAddress, const void* buffer, uint8_t bufferSize, bool request
 319:Src/RFM69.c   **** {
 320:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY); // turn off receiver to prevent reception while filling fifo
 321:Src/RFM69.c   ****   while ((RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
 322:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
 323:Src/RFM69.c   ****   if (bufferSize > RF69_MAX_DATA_LEN) bufferSize = RF69_MAX_DATA_LEN;
 324:Src/RFM69.c   **** 
 325:Src/RFM69.c   ****   // control byte
 326:Src/RFM69.c   ****   uint8_t CTLbyte = 0x00;
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 8


 327:Src/RFM69.c   ****   if (sendACK)
 328:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_SENDACK;
 329:Src/RFM69.c   ****   else if (requestACK)
 330:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_REQACK;
 331:Src/RFM69.c   **** 
 332:Src/RFM69.c   ****   // write to FIFO
 333:Src/RFM69.c   ****   RFM69_select();
 334:Src/RFM69.c   ****   SPI_transfer8(REG_FIFO | 0x80);
 335:Src/RFM69.c   ****   SPI_transfer8(bufferSize + 3);
 336:Src/RFM69.c   ****   SPI_transfer8(toAddress);
 337:Src/RFM69.c   ****   SPI_transfer8(_address);
 338:Src/RFM69.c   ****   SPI_transfer8(CTLbyte);
 339:Src/RFM69.c   **** 
 340:Src/RFM69.c   ****   for (uint8_t i = 0; i < bufferSize; i++)
 341:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 342:Src/RFM69.c   ****   RFM69_unselect();
 343:Src/RFM69.c   **** 
 344:Src/RFM69.c   ****   // no need to wait for transmit mode to be ready since its handled by the radio
 345:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_TX);
 346:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_TX_LIMIT_MS);
 347:Src/RFM69.c   ****   while (RFM69_ReadDIO0Pin() == 0 && !Timeout_IsTimeout1()); // wait for DIO0 to turn HIGH signalli
 348:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 349:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 350:Src/RFM69.c   **** }
 351:Src/RFM69.c   **** 
 352:Src/RFM69.c   **** // internal function - interrupt gets called when a packet is received
 353:Src/RFM69.c   **** void RFM69_interruptHandler() {
 354:Src/RFM69.c   **** 
 355:Src/RFM69.c   ****   if (_mode == RF69_MODE_RX && (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY))
 356:Src/RFM69.c   ****   {
 357:Src/RFM69.c   ****     uint8_t CTLbyte;
 358:Src/RFM69.c   ****     //rssi = RFM69_readRSSI();
 359:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_STANDBY);
 360:Src/RFM69.c   ****     RFM69_select();
 361:Src/RFM69.c   ****     SPI_transfer8(REG_FIFO & 0x7F);
 362:Src/RFM69.c   ****     payloadLen = SPI_transfer8(0);
 363:Src/RFM69.c   ****     payloadLen = payloadLen > 66 ? 66 : payloadLen; // precaution
 364:Src/RFM69.c   ****     targetID = SPI_transfer8(0);
 365:Src/RFM69.c   ****     if(!(_promiscuousMode || targetID == _address || targetID == RF69_BROADCAST_ADDR) // match this
 366:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 367:Src/RFM69.c   ****     {
 368:Src/RFM69.c   ****       payloadLen = 0;
 369:Src/RFM69.c   ****       RFM69_unselect();
 370:Src/RFM69.c   ****       RFM69_receiveBegin();
 371:Src/RFM69.c   ****       return;
 372:Src/RFM69.c   ****     }
 373:Src/RFM69.c   **** 
 374:Src/RFM69.c   ****     datalen = payloadLen - 3;
 375:Src/RFM69.c   ****     senderID = SPI_transfer8(0);
 376:Src/RFM69.c   ****     CTLbyte = SPI_transfer8(0);
 377:Src/RFM69.c   **** 
 378:Src/RFM69.c   ****     ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
 379:Src/RFM69.c   ****     ACK_Requested = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
 380:Src/RFM69.c   **** 
 381:Src/RFM69.c   ****     //interruptHook(CTLbyte);     // TWS: hook to derived class interrupt function
 382:Src/RFM69.c   **** 
 383:Src/RFM69.c   ****     for (uint8_t i = 0; i < datalen; i++)
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 9


 384:Src/RFM69.c   ****     {
 385:Src/RFM69.c   ****       data[i] = SPI_transfer8(0);
 386:Src/RFM69.c   ****     }
 387:Src/RFM69.c   ****     if (datalen < RF69_MAX_DATA_LEN) data[datalen] = 0; // add null at end of string
 388:Src/RFM69.c   ****     RFM69_unselect();
 389:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_RX);
 390:Src/RFM69.c   ****   }
 391:Src/RFM69.c   ****   rssi = RFM69_readRSSI(false);
 392:Src/RFM69.c   **** }
 393:Src/RFM69.c   **** 
 394:Src/RFM69.c   **** // internal function
 395:Src/RFM69.c   **** //void RFM69::isr0() { selfPointer->interruptHandler(); }
 396:Src/RFM69.c   **** 
 397:Src/RFM69.c   **** // internal function
 398:Src/RFM69.c   **** void RFM69_receiveBegin()
 399:Src/RFM69.c   **** {
 400:Src/RFM69.c   ****   datalen = 0;
 401:Src/RFM69.c   ****   senderID = 0;
 402:Src/RFM69.c   ****   targetID = 0;
 403:Src/RFM69.c   ****   payloadLen = 0;
 404:Src/RFM69.c   ****   ACK_Requested = 0;
 405:Src/RFM69.c   ****   ACK_RECEIVED = 0;
 406:Src/RFM69.c   ****   rssi = 0;
 407:Src/RFM69.c   ****   if (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY)
 408:Src/RFM69.c   ****     RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXREST
 409:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01); // set DIO0 to "PAYLOADREADY" in receive
 410:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_RX);
 411:Src/RFM69.c   **** }
 412:Src/RFM69.c   **** 
 413:Src/RFM69.c   **** // checks if a packet was received and/or puts transceiver in receive (ie RX or listen) mode
 414:Src/RFM69.c   **** bool RFM69_receiveDone()
 415:Src/RFM69.c   **** {
 416:Src/RFM69.c   **** //ATOMIC_BLOCK(ATOMIC_FORCEON)
 417:Src/RFM69.c   ****   noInterrupts(); // re-enabled in RFM69_unselect() via setMode() or via RFM69_receiveBegin()
 418:Src/RFM69.c   ****   if (_mode == RF69_MODE_RX && payloadLen > 0)
 419:Src/RFM69.c   ****   {
 420:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_STANDBY); // enables interrupts
 421:Src/RFM69.c   ****     return true;
 422:Src/RFM69.c   ****   }
 423:Src/RFM69.c   ****   else if (_mode == RF69_MODE_RX) // already in RX no payload yet
 424:Src/RFM69.c   ****   {
 425:Src/RFM69.c   ****     interrupts(); // explicitly re-enable interrupts
 426:Src/RFM69.c   ****     return false;
 427:Src/RFM69.c   ****   }
 428:Src/RFM69.c   ****   RFM69_receiveBegin();
 429:Src/RFM69.c   ****   return false;
 430:Src/RFM69.c   **** }
 431:Src/RFM69.c   **** 
 432:Src/RFM69.c   **** // To enable encryption: radio.encrypt("ABCDEFGHIJKLMNOP");
 433:Src/RFM69.c   **** // To disable encryption: radio.encrypt(null) or radio.encrypt(0)
 434:Src/RFM69.c   **** // KEY HAS TO BE 16 bytes !!!
 435:Src/RFM69.c   **** void RFM69_encrypt(const char* key)
 436:Src/RFM69.c   **** {
 437:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 438:Src/RFM69.c   ****   if (key != 0)
 439:Src/RFM69.c   ****   {
 440:Src/RFM69.c   ****     RFM69_select();
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 10


 441:Src/RFM69.c   ****     SPI_transfer8(REG_AESKEY1 | 0x80);
 442:Src/RFM69.c   ****     for (uint8_t i = 0; i < 16; i++)
 443:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 444:Src/RFM69.c   ****     RFM69_unselect();
 445:Src/RFM69.c   ****   }
 446:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFE) | (key ? 1 : 0));
 447:Src/RFM69.c   **** }
 448:Src/RFM69.c   **** 
 449:Src/RFM69.c   **** // get the received signal strength indicator (RSSI)
 450:Src/RFM69.c   **** int16_t RFM69_readRSSI(bool forceTrigger) {
 451:Src/RFM69.c   ****   int16_t rssi = 0;
 452:Src/RFM69.c   ****   if (forceTrigger)
 453:Src/RFM69.c   ****   {
 454:Src/RFM69.c   ****     // RSSI trigger not needed if DAGC is in continuous mode
 455:Src/RFM69.c   ****     RFM69_writeReg(REG_RSSICONFIG, RF_RSSI_START);
 456:Src/RFM69.c   ****     while ((RFM69_readReg(REG_RSSICONFIG) & RF_RSSI_DONE) == 0x00); // wait for RSSI_Ready
 457:Src/RFM69.c   ****   }
 458:Src/RFM69.c   ****   rssi = -RFM69_readReg(REG_RSSIVALUE);
 459:Src/RFM69.c   ****   rssi >>= 1;
 460:Src/RFM69.c   ****   return rssi;
 461:Src/RFM69.c   **** }
 462:Src/RFM69.c   **** 
 463:Src/RFM69.c   **** // true  = disable filtering to capture all frames on network
 464:Src/RFM69.c   **** // false = enable node/broadcast filtering to capture only frames sent to this/broadcast address
 465:Src/RFM69.c   **** void RFM69_promiscuous(bool onOff)
 466:Src/RFM69.c   **** {
  76              		.loc 1 466 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
 467:Src/RFM69.c   ****   _promiscuousMode = onOff;
  81              		.loc 1 467 3 view .LVU10
  82              		.loc 1 467 20 is_stmt 0 view .LVU11
  83 0000 014B     		ldr	r3, .L9
  84 0002 1870     		strb	r0, [r3]
 468:Src/RFM69.c   ****   //RFM69_writeReg(REG_PACKETCONFIG1, (RFM69_readReg(REG_PACKETCONFIG1) & 0xF9) | (onOff ? RF_PACKE
 469:Src/RFM69.c   **** }
  85              		.loc 1 469 1 view .LVU12
  86 0004 7047     		bx	lr
  87              	.L10:
  88 0006 00BF     		.align	2
  89              	.L9:
  90 0008 00000000 		.word	.LANCHOR0
  91              		.cfi_endproc
  92              	.LFE146:
  94              		.section	.text.RFM69_select,"ax",%progbits
  95              		.align	1
  96              		.global	RFM69_select
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	RFM69_select:
 103              	.LFB154:
 470:Src/RFM69.c   **** /*
 471:Src/RFM69.c   **** // for RFM69HW only: you must call RFM69_setHighPower(true) after initialize() or else transmission
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 11


 472:Src/RFM69.c   **** void RFM69_setHighPower(bool onOff) {
 473:Src/RFM69.c   ****   RFM69_writeReg(REG_OCP, ISRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
 474:Src/RFM69.c   ****   if (ISRFM69HW) // turning ON
 475:Src/RFM69.c   ****     RFM69_writeReg(REG_PALEVEL, (RFM69_readReg(REG_PALEVEL) & 0x1F) | RF_PALEVEL_PA1_ON | RF_PALEVE
 476:Src/RFM69.c   ****   else
 477:Src/RFM69.c   ****     RFM69_writeReg(REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | _powe
 478:Src/RFM69.c   **** }
 479:Src/RFM69.c   **** 
 480:Src/RFM69.c   **** // internal function
 481:Src/RFM69.c   **** void RFM69_setHighPowerRegs(bool onOff)
 482:Src/RFM69.c   **** {
 483:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA1, onOff ? 0x5D : 0x55);
 484:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 485:Src/RFM69.c   **** }
 486:Src/RFM69.c   **** */
 487:Src/RFM69.c   **** // for RFM69HW only: you must call RFM69_setHighPower() after initialize() or else transmission won
 488:Src/RFM69.c   **** void RFM69_setHighPower()
 489:Src/RFM69.c   **** {
 490:Src/RFM69.c   ****   RFM69_writeReg(REG_OCP, ISRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
 491:Src/RFM69.c   ****   #if (ISRFM69HW == 1) // turning ON
 492:Src/RFM69.c   ****     RFM69_writeReg(REG_PALEVEL, (RFM69_readReg(REG_PALEVEL) & 0x1F) | RF_PALEVEL_PA1_ON | RF_PALEVE
 493:Src/RFM69.c   **** 
 494:Src/RFM69.c   ****   #elseif {
 495:Src/RFM69.c   ****     RFM69_writeReg(REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | _powe
 496:Src/RFM69.c   **** }
 497:Src/RFM69.c   ****   #endif
 498:Src/RFM69.c   **** }
 499:Src/RFM69.c   **** 
 500:Src/RFM69.c   **** // internal function
 501:Src/RFM69.c   **** void RFM69_setHighPowerRegs(bool onOff)
 502:Src/RFM69.c   **** {
 503:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA1, onOff ? 0x5D : 0x55);
 504:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 505:Src/RFM69.c   **** }
 506:Src/RFM69.c   **** 
 507:Src/RFM69.c   **** // for debugging
 508:Src/RFM69.c   **** #define REGISTER_DETAIL 1
 509:Src/RFM69.c   **** 
 510:Src/RFM69.c   **** void RFM69_readAllRegs() {
 511:Src/RFM69.c   ****   uint8_t regVal;
 512:Src/RFM69.c   **** 
 513:Src/RFM69.c   **** #if REGISTER_DETAIL
 514:Src/RFM69.c   ****   uint16_t capVal;
 515:Src/RFM69.c   **** 
 516:Src/RFM69.c   ****   //... State Variables for intelligent decoding
 517:Src/RFM69.c   ****   uint8_t modeFSK = 0;
 518:Src/RFM69.c   ****   uint64_t bitRate = 0;
 519:Src/RFM69.c   ****   uint32_t freqDev = 0;
 520:Src/RFM69.c   ****   uint32_t freqCenter = 0;
 521:Src/RFM69.c   **** #endif
 522:Src/RFM69.c   ****   char pcBuf[130];
 523:Src/RFM69.c   ****   debug_printf("\r\n");
 524:Src/RFM69.c   **** 
 525:Src/RFM69.c   ****   uint8_t regAddr;
 526:Src/RFM69.c   ****   debug_printf("Address | HEX\r\n");
 527:Src/RFM69.c   ****   for (regAddr = 1; regAddr <= 0x4F; regAddr++) {
 528:Src/RFM69.c   ****     RFM69_select();
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 12


 529:Src/RFM69.c   ****     SPI_transfer8(regAddr & 0x7F); // send address + r/w bit
 530:Src/RFM69.c   ****     regVal = SPI_transfer8(0);
 531:Src/RFM69.c   ****     RFM69_unselect();
 532:Src/RFM69.c   **** 
 533:Src/RFM69.c   ****     sprintf(log_buffer,"%02X|%02X : ", regAddr, regVal);
 534:Src/RFM69.c   ****     debug_printf(log_buffer);
 535:Src/RFM69.c   **** 
 536:Src/RFM69.c   **** #if REGISTER_DETAIL
 537:Src/RFM69.c   ****     switch (regAddr) {
 538:Src/RFM69.c   ****     case 0x1: {
 539:Src/RFM69.c   ****       debug_printf("Controls the automatic Sequencer ( see section 4.2 "
 540:Src/RFM69.c   ****                   ")\r\nSequencerOff : ");
 541:Src/RFM69.c   ****       if (0x80 & regVal) {
 542:Src/RFM69.c   ****         debug_printf("1 -> Mode is forced by the user\r\n");
 543:Src/RFM69.c   ****       } else {
 544:Src/RFM69.c   ****         debug_printf(
 545:Src/RFM69.c   ****             "0 -> Operating mode as selected with Mode bits in RegOpMode is "
 546:Src/RFM69.c   ****             "automatically reached with the Sequencer\r\n");
 547:Src/RFM69.c   ****       }
 548:Src/RFM69.c   **** 
 549:Src/RFM69.c   ****       debug_printf("\r\nEnables Listen mode, should be enabled whilst in "
 550:Src/RFM69.c   ****                   "Standby mode:\r\nListenOn : ");
 551:Src/RFM69.c   ****       if (0x40 & regVal) {
 552:Src/RFM69.c   ****         debug_printf("1 -> On\r\n");
 553:Src/RFM69.c   ****       } else {
 554:Src/RFM69.c   ****         debug_printf("0 -> Off ( see section 4.3)\r\n");
 555:Src/RFM69.c   ****       }
 556:Src/RFM69.c   **** 
 557:Src/RFM69.c   ****       debug_printf("\r\nAborts Listen mode when set together with ListenOn=0 "
 558:Src/RFM69.c   ****                   "See section 4.3.4 for details (Always reads 0.)\r\n");
 559:Src/RFM69.c   ****       if (0x20 & regVal) {
 560:Src/RFM69.c   ****         debug_printf("ERROR - ListenAbort should NEVER return 1 this is a write "
 561:Src/RFM69.c   ****                     "only register\r\n");
 562:Src/RFM69.c   ****       }
 563:Src/RFM69.c   **** 
 564:Src/RFM69.c   ****       debug_printf("\r\nTransceiver's operating modes:\r\nMode : ");
 565:Src/RFM69.c   ****       capVal = (regVal >> 2) & 0x7;
 566:Src/RFM69.c   ****       if (capVal == 0x0) {
 567:Src/RFM69.c   ****         debug_printf("000 -> Sleep mode (SLEEP)\r\n");
 568:Src/RFM69.c   ****       } else if (capVal == 0b001) {
 569:Src/RFM69.c   ****         debug_printf("001 -> Standby mode (STDBY)\r\n");
 570:Src/RFM69.c   ****       } else if (capVal == 0b010) {
 571:Src/RFM69.c   ****         debug_printf("010 -> Frequency Synthesizer mode (FS)\r\n");
 572:Src/RFM69.c   ****       } else if (capVal == 0b011) {
 573:Src/RFM69.c   ****         debug_printf("011 -> Transmitter mode (TX)\r\n");
 574:Src/RFM69.c   ****       } else if (capVal == 0b100) {
 575:Src/RFM69.c   ****         debug_printf("100 -> Receiver Mode (RX)\r\n");
 576:Src/RFM69.c   ****       } else {
 577:Src/RFM69.c   ****         // debug_printf( capVal, BIN );
 578:Src/RFM69.c   ****         sprintf(log_buffer,"%02X -> RESERVED\n", capVal );
 579:Src/RFM69.c   ****         debug_printf(log_buffer);
 580:Src/RFM69.c   ****       }
 581:Src/RFM69.c   ****       debug_printf("\r\n");
 582:Src/RFM69.c   ****       break;
 583:Src/RFM69.c   ****     }
 584:Src/RFM69.c   **** 
 585:Src/RFM69.c   ****     case 0x2: {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 13


 586:Src/RFM69.c   **** 
 587:Src/RFM69.c   ****       debug_printf("Data Processing mode:\r\nDataMode : ");
 588:Src/RFM69.c   ****       capVal = (regVal >> 5) & 0x3;
 589:Src/RFM69.c   ****       if (capVal == 0b00) {
 590:Src/RFM69.c   ****         debug_printf("00 -> Packet mode\r\n");
 591:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 592:Src/RFM69.c   ****         debug_printf("01 -> reserved\r\n");
 593:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 594:Src/RFM69.c   ****         debug_printf("10 -> Continuous mode with bit synchronizer\r\n");
 595:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 596:Src/RFM69.c   ****         debug_printf("11 -> Continuous mode without bit synchronizer\r\n");
 597:Src/RFM69.c   ****       }
 598:Src/RFM69.c   **** 
 599:Src/RFM69.c   ****       debug_printf("\r\nModulation scheme:\r\nModulation Type : ");
 600:Src/RFM69.c   ****       capVal = (regVal >> 3) & 0x3;
 601:Src/RFM69.c   ****       if (capVal == 0b00) {
 602:Src/RFM69.c   ****         debug_printf("00 -> FSK\r\n");
 603:Src/RFM69.c   ****         modeFSK = 1;
 604:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 605:Src/RFM69.c   ****         debug_printf("01 -> OOK\r\n");
 606:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 607:Src/RFM69.c   ****         debug_printf("10 -> reserved\r\n");
 608:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 609:Src/RFM69.c   ****         debug_printf("11 -> reserved\r\n");
 610:Src/RFM69.c   ****       }
 611:Src/RFM69.c   **** 
 612:Src/RFM69.c   ****       debug_printf("\r\nData shaping: ");
 613:Src/RFM69.c   ****       if (modeFSK) {
 614:Src/RFM69.c   ****         debug_printf("in FSK:\r\n");
 615:Src/RFM69.c   ****       } else {
 616:Src/RFM69.c   ****         debug_printf("in OOK:\r\n");
 617:Src/RFM69.c   ****       }
 618:Src/RFM69.c   ****       debug_printf("ModulationShaping : ");
 619:Src/RFM69.c   ****       capVal = regVal & 0x3;
 620:Src/RFM69.c   ****       if (modeFSK) {
 621:Src/RFM69.c   ****         if (capVal == 0b00) {
 622:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 623:Src/RFM69.c   ****         } else if (capVal == 0b01) {
 624:Src/RFM69.c   ****           debug_printf("01 -> Gaussian filter, BT = 1.0\r\n");
 625:Src/RFM69.c   ****         } else if (capVal == 0b10) {
 626:Src/RFM69.c   ****           debug_printf("10 -> Gaussian filter, BT = 0.5\r\n");
 627:Src/RFM69.c   ****         } else if (capVal == 0b11) {
 628:Src/RFM69.c   ****           debug_printf("11 -> Gaussian filter, BT = 0.3\r\n");
 629:Src/RFM69.c   ****         }
 630:Src/RFM69.c   ****       } else {
 631:Src/RFM69.c   ****         if (capVal == 0b00) {
 632:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 633:Src/RFM69.c   ****         } else if (capVal == 0b01) {
 634:Src/RFM69.c   ****           debug_printf("01 -> filtering with f(cutoff) = BR\r\n");
 635:Src/RFM69.c   ****         } else if (capVal == 0b10) {
 636:Src/RFM69.c   ****           debug_printf("10 -> filtering with f(cutoff) = 2*BR\r\n");
 637:Src/RFM69.c   ****         } else if (capVal == 0b11) {
 638:Src/RFM69.c   ****           debug_printf("ERROR - 11 is reserved\r\n");
 639:Src/RFM69.c   ****         }
 640:Src/RFM69.c   ****       }
 641:Src/RFM69.c   **** 
 642:Src/RFM69.c   ****       debug_printf("\r\n");
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 14


 643:Src/RFM69.c   ****       break;
 644:Src/RFM69.c   ****     }
 645:Src/RFM69.c   **** 
 646:Src/RFM69.c   ****     case 0x3: {
 647:Src/RFM69.c   ****       bitRate = (regVal << 8);
 648:Src/RFM69.c   ****       break;
 649:Src/RFM69.c   ****     }
 650:Src/RFM69.c   **** 
 651:Src/RFM69.c   ****     case 0x4: {
 652:Src/RFM69.c   ****       bitRate |= regVal;
 653:Src/RFM69.c   ****       debug_printf("Bit Rate (Chip Rate when Manchester encoding is enabled)\r\nBitRate : ");
 654:Src/RFM69.c   ****       uint64_t val = 32UL * 1000UL * 1000UL / bitRate;
 655:Src/RFM69.c   ****       sprintf(pcBuf, "%lld", val);
 656:Src/RFM69.c   ****       debug_printf(pcBuf);
 657:Src/RFM69.c   ****       debug_printf("\r\n");
 658:Src/RFM69.c   ****       break;
 659:Src/RFM69.c   ****     }
 660:Src/RFM69.c   **** 
 661:Src/RFM69.c   ****     case 0x5: {
 662:Src/RFM69.c   ****       freqDev = ((regVal & 0x3f) << 8);
 663:Src/RFM69.c   ****       break;
 664:Src/RFM69.c   ****     }
 665:Src/RFM69.c   **** 
 666:Src/RFM69.c   ****     case 0x6: {
 667:Src/RFM69.c   ****       freqDev |= regVal;
 668:Src/RFM69.c   ****       debug_printf("Frequency deviation\r\nFdev : ");
 669:Src/RFM69.c   ****       uint32_t val = 61UL * freqDev;
 670:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 671:Src/RFM69.c   ****       debug_printf(pcBuf);
 672:Src/RFM69.c   ****       debug_printf("\r\n");
 673:Src/RFM69.c   ****       break;
 674:Src/RFM69.c   ****     }
 675:Src/RFM69.c   **** 
 676:Src/RFM69.c   ****     case 0x7: {
 677:Src/RFM69.c   ****       unsigned long tempVal = regVal;
 678:Src/RFM69.c   ****       freqCenter = (tempVal << 16);
 679:Src/RFM69.c   ****       break;
 680:Src/RFM69.c   ****     }
 681:Src/RFM69.c   **** 
 682:Src/RFM69.c   ****     case 0x8: {
 683:Src/RFM69.c   ****       unsigned long tempVal = regVal;
 684:Src/RFM69.c   ****       freqCenter = freqCenter | (tempVal << 8);
 685:Src/RFM69.c   ****       break;
 686:Src/RFM69.c   ****     }
 687:Src/RFM69.c   **** 
 688:Src/RFM69.c   ****     case 0x9: {
 689:Src/RFM69.c   ****       freqCenter = freqCenter | regVal;
 690:Src/RFM69.c   ****       debug_printf("RF Carrier frequency\r\nFRF : ");
 691:Src/RFM69.c   ****       uint32_t val = 61UL * freqCenter;
 692:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 693:Src/RFM69.c   ****       debug_printf(pcBuf);
 694:Src/RFM69.c   ****       debug_printf("\r\n");
 695:Src/RFM69.c   ****       break;
 696:Src/RFM69.c   ****     }
 697:Src/RFM69.c   **** 
 698:Src/RFM69.c   ****     case 0xa: {
 699:Src/RFM69.c   ****       debug_printf("RC calibration control & status\r\nRcCalDone : ");
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 15


 700:Src/RFM69.c   ****       if (0x40 & regVal) {
 701:Src/RFM69.c   ****         debug_printf("1 -> RC calibration is over\r\n");
 702:Src/RFM69.c   ****       } else {
 703:Src/RFM69.c   ****         debug_printf("0 -> RC calibration is in progress\r\n");
 704:Src/RFM69.c   ****       }
 705:Src/RFM69.c   **** 
 706:Src/RFM69.c   ****       debug_printf("\r\n");
 707:Src/RFM69.c   ****       break;
 708:Src/RFM69.c   ****     }
 709:Src/RFM69.c   **** 
 710:Src/RFM69.c   ****     case 0xb: {
 711:Src/RFM69.c   ****       debug_printf(
 712:Src/RFM69.c   ****           "Improved AFC routine for signals with modulation index lower than "
 713:Src/RFM69.c   ****           "2.  Refer to section 3.4.16 for details\r\nAfcLowBetaOn : ");
 714:Src/RFM69.c   ****       if (0x20 & regVal) {
 715:Src/RFM69.c   ****         debug_printf("1 -> Improved AFC routine\r\n");
 716:Src/RFM69.c   ****       } else {
 717:Src/RFM69.c   ****         debug_printf("0 -> Standard AFC routine\r\n");
 718:Src/RFM69.c   ****       }
 719:Src/RFM69.c   ****       debug_printf("\r\n");
 720:Src/RFM69.c   ****       break;
 721:Src/RFM69.c   ****     }
 722:Src/RFM69.c   **** 
 723:Src/RFM69.c   ****     case 0xc: {
 724:Src/RFM69.c   ****       debug_printf("Reserved\r\n");
 725:Src/RFM69.c   ****       break;
 726:Src/RFM69.c   ****     }
 727:Src/RFM69.c   **** 
 728:Src/RFM69.c   ****     case 0xd: {
 729:Src/RFM69.c   ****       uint8_t val;
 730:Src/RFM69.c   ****       debug_printf("Resolution of Listen mode Idle time (calibrated RC osc):\r\nListenResolIdle : "
 731:Src/RFM69.c   ****       val = regVal >> 6;
 732:Src/RFM69.c   ****       if (val == 0b00) {
 733:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 734:Src/RFM69.c   ****       } else if (val == 0b01) {
 735:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
 736:Src/RFM69.c   ****       } else if (val == 0b10) {
 737:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 738:Src/RFM69.c   ****       } else if (val == 0b11) {
 739:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 740:Src/RFM69.c   ****       }
 741:Src/RFM69.c   **** 
 742:Src/RFM69.c   ****       debug_printf("\r\nResolution of Listen mode Rx time (calibrated RC osc):\r\nListenResolRx : "
 743:Src/RFM69.c   ****       val = (regVal >> 4) & 0x3;
 744:Src/RFM69.c   ****       if (val == 0b00) {
 745:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 746:Src/RFM69.c   ****       } else if (val == 0b01) {
 747:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
 748:Src/RFM69.c   ****       } else if (val == 0b10) {
 749:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 750:Src/RFM69.c   ****       } else if (val == 0b11) {
 751:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 752:Src/RFM69.c   ****       }
 753:Src/RFM69.c   **** 
 754:Src/RFM69.c   ****       debug_printf("\r\nCriteria for packet acceptance in Listen mode:\r\nListenCriteria : ");
 755:Src/RFM69.c   ****       if (0x8 & regVal) {
 756:Src/RFM69.c   ****         debug_printf("1 -> signal strength is above RssiThreshold and "
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 16


 757:Src/RFM69.c   ****                     "SyncAddress matched\r\n");
 758:Src/RFM69.c   ****       } else {
 759:Src/RFM69.c   ****         debug_printf("0 -> signal strength is above RssiThreshold\r\n");
 760:Src/RFM69.c   ****       }
 761:Src/RFM69.c   **** 
 762:Src/RFM69.c   ****       debug_printf("\r\nAction taken after acceptance of a packet in Listen mode:\r\nListenEnd : ")
 763:Src/RFM69.c   ****       val = (regVal >> 1) & 0x3;
 764:Src/RFM69.c   ****       if (val == 0b00) {
 765:Src/RFM69.c   ****         debug_printf("00 -> chip stays in Rx mode. Listen mode stops and must be disabled (see sect
 766:Src/RFM69.c   ****       } else if (val == 0b01) {
 767:Src/RFM69.c   ****         debug_printf(
 768:Src/RFM69.c   ****             "01 -> chip stays in Rx mode until PayloadReady or Timeout \r\n"
 769:Src/RFM69.c   ****             "interrupt occurs.  It then goes to the mode defined by Mode. \r\n"
 770:Src/RFM69.c   ****             "Listen mode stops and must be disabled (see section 4.3)\r\n");
 771:Src/RFM69.c   ****       } else if (val == 0b10) {
 772:Src/RFM69.c   ****         debug_printf("10 -> chip stays in Rx mode until PayloadReady or Timeout "
 773:Src/RFM69.c   ****                     "occurs.  Listen mode then resumes in Idle state.  FIFO "
 774:Src/RFM69.c   ****                     "content is lost at next Rx wakeup.\r\n");
 775:Src/RFM69.c   ****       } else if (val == 0b11) {
 776:Src/RFM69.c   ****         debug_printf("11 -> Reserved\r\n");
 777:Src/RFM69.c   ****       }
 778:Src/RFM69.c   ****       debug_printf("\r\n");
 779:Src/RFM69.c   **** 
 780:Src/RFM69.c   **** 
 781:Src/RFM69.c   ****       break;
 782:Src/RFM69.c   ****     }
 783:Src/RFM69.c   **** 
 784:Src/RFM69.c   ****     default: {}
 785:Src/RFM69.c   ****     }
 786:Src/RFM69.c   **** 
 787:Src/RFM69.c   **** #endif
 788:Src/RFM69.c   ****   }
 789:Src/RFM69.c   ****   RFM69_unselect();
 790:Src/RFM69.c   ****   debug_printf("\r\n");
 791:Src/RFM69.c   ****   debug_printf("\r\n");
 792:Src/RFM69.c   **** }
 793:Src/RFM69.c   **** 
 794:Src/RFM69.c   **** uint8_t RFM69_readTemperature(uint8_t calFactor) // returns centigrade
 795:Src/RFM69.c   **** {
 796:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 797:Src/RFM69.c   ****   RFM69_writeReg(REG_TEMP1, RF_TEMP1_MEAS_START);
 798:Src/RFM69.c   ****   while ((RFM69_readReg(REG_TEMP1) & RF_TEMP1_MEAS_RUNNING));
 799:Src/RFM69.c   ****   return ~RFM69_readReg(REG_TEMP2) + COURSE_TEMP_COEF + calFactor; // 'complement' corrects the slo
 800:Src/RFM69.c   **** } // COURSE_TEMP_COEF puts reading in the ballpark, user can add additional correction
 801:Src/RFM69.c   **** 
 802:Src/RFM69.c   **** void RFM69_rcCalibration()
 803:Src/RFM69.c   **** {
 804:Src/RFM69.c   ****   RFM69_writeReg(REG_OSC1, RF_OSC1_RCCAL_START);
 805:Src/RFM69.c   ****   while ((RFM69_readReg(REG_OSC1) & RF_OSC1_RCCAL_DONE) == 0x00);
 806:Src/RFM69.c   **** }
 807:Src/RFM69.c   **** 
 808:Src/RFM69.c   **** uint8_t RFM69_readReg(uint8_t addr)
 809:Src/RFM69.c   **** {
 810:Src/RFM69.c   ****   uint8_t regval;
 811:Src/RFM69.c   ****   RFM69_select();
 812:Src/RFM69.c   ****   SPI_transfer8(addr & 0x7F);
 813:Src/RFM69.c   ****   regval = SPI_transfer8(0);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 17


 814:Src/RFM69.c   ****   RFM69_unselect();
 815:Src/RFM69.c   ****   return regval;
 816:Src/RFM69.c   **** }
 817:Src/RFM69.c   **** 
 818:Src/RFM69.c   **** void RFM69_writeReg(uint8_t addr, uint8_t value)
 819:Src/RFM69.c   **** {
 820:Src/RFM69.c   ****   RFM69_select();
 821:Src/RFM69.c   ****   SPI_transfer8(addr | 0x80);
 822:Src/RFM69.c   ****   SPI_transfer8(value);
 823:Src/RFM69.c   ****   RFM69_unselect();
 824:Src/RFM69.c   **** }
 825:Src/RFM69.c   **** 
 826:Src/RFM69.c   **** // select the RFM69 transceiver (save SPI settings, set CS low)
 827:Src/RFM69.c   **** void RFM69_select()
 828:Src/RFM69.c   **** {
 104              		.loc 1 828 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 08B5     		push	{r3, lr}
 109              	.LCFI0:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 3, -8
 112              		.cfi_offset 14, -4
 829:Src/RFM69.c   ****   noInterrupts();
 113              		.loc 1 829 3 view .LVU14
 114 0002 FFF7FEFF 		bl	noInterrupts
 115              	.LVL1:
 830:Src/RFM69.c   ****   RFM69_SetCSPin(0);
 116              		.loc 1 830 3 view .LVU15
 117 0006 0020     		movs	r0, #0
 118 0008 FFF7FEFF 		bl	RFM69_SetCSPin
 119              	.LVL2:
 831:Src/RFM69.c   **** }
 120              		.loc 1 831 1 is_stmt 0 view .LVU16
 121 000c 08BD     		pop	{r3, pc}
 122              		.cfi_endproc
 123              	.LFE154:
 125              		.section	.text.RFM69_unselect,"ax",%progbits
 126              		.align	1
 127              		.global	RFM69_unselect
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	RFM69_unselect:
 134              	.LFB155:
 832:Src/RFM69.c   **** 
 833:Src/RFM69.c   **** // unselect the RFM69 transceiver (set CS high, restore SPI settings)
 834:Src/RFM69.c   **** void RFM69_unselect()
 835:Src/RFM69.c   **** {
 135              		.loc 1 835 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 08B5     		push	{r3, lr}
 140              	.LCFI1:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 18


 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
 836:Src/RFM69.c   ****   RFM69_SetCSPin(1);
 144              		.loc 1 836 3 view .LVU18
 145 0002 0120     		movs	r0, #1
 146 0004 FFF7FEFF 		bl	RFM69_SetCSPin
 147              	.LVL3:
 837:Src/RFM69.c   ****   interrupts();
 148              		.loc 1 837 3 view .LVU19
 149 0008 FFF7FEFF 		bl	interrupts
 150              	.LVL4:
 838:Src/RFM69.c   **** }
 151              		.loc 1 838 1 is_stmt 0 view .LVU20
 152 000c 08BD     		pop	{r3, pc}
 153              		.cfi_endproc
 154              	.LFE155:
 156              		.global	__aeabi_uldivmod
 157              		.section	.text.RFM69_readAllRegs,"ax",%progbits
 158              		.align	1
 159              		.global	RFM69_readAllRegs
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	RFM69_readAllRegs:
 166              	.LFB149:
 510:Src/RFM69.c   ****   uint8_t regVal;
 167              		.loc 1 510 26 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 144
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 2DE97047 		push	{r4, r5, r6, r8, r9, r10, lr}
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 28
 174              		.cfi_offset 4, -28
 175              		.cfi_offset 5, -24
 176              		.cfi_offset 6, -20
 177              		.cfi_offset 8, -16
 178              		.cfi_offset 9, -12
 179              		.cfi_offset 10, -8
 180              		.cfi_offset 14, -4
 181 0004 A5B0     		sub	sp, sp, #148
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 176
 511:Src/RFM69.c   **** 
 184              		.loc 1 511 3 view .LVU22
 514:Src/RFM69.c   **** 
 185              		.loc 1 514 3 view .LVU23
 517:Src/RFM69.c   ****   uint64_t bitRate = 0;
 186              		.loc 1 517 3 view .LVU24
 187              	.LVL5:
 518:Src/RFM69.c   ****   uint32_t freqDev = 0;
 188              		.loc 1 518 3 view .LVU25
 519:Src/RFM69.c   ****   uint32_t freqCenter = 0;
 189              		.loc 1 519 3 view .LVU26
 520:Src/RFM69.c   **** #endif
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 19


 190              		.loc 1 520 3 view .LVU27
 522:Src/RFM69.c   ****   debug_printf("\r\n");
 191              		.loc 1 522 3 view .LVU28
 523:Src/RFM69.c   **** 
 192              		.loc 1 523 3 view .LVU29
 193 0006 B848     		ldr	r0, .L116
 194 0008 FFF7FEFF 		bl	debug_printf
 195              	.LVL6:
 525:Src/RFM69.c   ****   debug_printf("Address | HEX\r\n");
 196              		.loc 1 525 3 view .LVU30
 526:Src/RFM69.c   ****   for (regAddr = 1; regAddr <= 0x4F; regAddr++) {
 197              		.loc 1 526 3 view .LVU31
 198 000c B748     		ldr	r0, .L116+4
 199 000e FFF7FEFF 		bl	debug_printf
 200              	.LVL7:
 527:Src/RFM69.c   ****     RFM69_select();
 201              		.loc 1 527 3 view .LVU32
 527:Src/RFM69.c   ****     RFM69_select();
 202              		.loc 1 527 16 is_stmt 0 view .LVU33
 203 0012 0124     		movs	r4, #1
 520:Src/RFM69.c   **** #endif
 204              		.loc 1 520 12 view .LVU34
 205 0014 4FF00008 		mov	r8, #0
 519:Src/RFM69.c   ****   uint32_t freqCenter = 0;
 206              		.loc 1 519 12 view .LVU35
 207 0018 C146     		mov	r9, r8
 518:Src/RFM69.c   ****   uint32_t freqDev = 0;
 208              		.loc 1 518 12 view .LVU36
 209 001a 0022     		movs	r2, #0
 210 001c 0023     		movs	r3, #0
 211 001e CDE90023 		strd	r2, [sp]
 517:Src/RFM69.c   ****   uint64_t bitRate = 0;
 212              		.loc 1 517 11 view .LVU37
 213 0022 C246     		mov	r10, r8
 527:Src/RFM69.c   ****     RFM69_select();
 214              		.loc 1 527 3 view .LVU38
 215 0024 43E0     		b	.L16
 216              	.LVL8:
 217              	.L31:
 539:Src/RFM69.c   ****                   ")\r\nSequencerOff : ");
 218              		.loc 1 539 7 is_stmt 1 view .LVU39
 219 0026 B248     		ldr	r0, .L116+8
 220 0028 FFF7FEFF 		bl	debug_printf
 221              	.LVL9:
 541:Src/RFM69.c   ****         debug_printf("1 -> Mode is forced by the user\r\n");
 222              		.loc 1 541 7 view .LVU40
 541:Src/RFM69.c   ****         debug_printf("1 -> Mode is forced by the user\r\n");
 223              		.loc 1 541 10 is_stmt 0 view .LVU41
 224 002c 15F0800F 		tst	r5, #128
 225 0030 29D1     		bne	.L81
 544:Src/RFM69.c   ****             "0 -> Operating mode as selected with Mode bits in RegOpMode is "
 226              		.loc 1 544 9 is_stmt 1 view .LVU42
 227 0032 B048     		ldr	r0, .L116+12
 228 0034 FFF7FEFF 		bl	debug_printf
 229              	.LVL10:
 230              	.L33:
 549:Src/RFM69.c   ****                   "Standby mode:\r\nListenOn : ");
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 20


 231              		.loc 1 549 7 view .LVU43
 232 0038 AF48     		ldr	r0, .L116+16
 233 003a FFF7FEFF 		bl	debug_printf
 234              	.LVL11:
 551:Src/RFM69.c   ****         debug_printf("1 -> On\r\n");
 235              		.loc 1 551 7 view .LVU44
 551:Src/RFM69.c   ****         debug_printf("1 -> On\r\n");
 236              		.loc 1 551 10 is_stmt 0 view .LVU45
 237 003e 15F0400F 		tst	r5, #64
 238 0042 24D0     		beq	.L34
 552:Src/RFM69.c   ****       } else {
 239              		.loc 1 552 9 is_stmt 1 view .LVU46
 240 0044 AD48     		ldr	r0, .L116+20
 241 0046 FFF7FEFF 		bl	debug_printf
 242              	.LVL12:
 243              	.L35:
 557:Src/RFM69.c   ****                   "See section 4.3.4 for details (Always reads 0.)\r\n");
 244              		.loc 1 557 7 view .LVU47
 245 004a AD48     		ldr	r0, .L116+24
 246 004c FFF7FEFF 		bl	debug_printf
 247              	.LVL13:
 559:Src/RFM69.c   ****         debug_printf("ERROR - ListenAbort should NEVER return 1 this is a write "
 248              		.loc 1 559 7 view .LVU48
 559:Src/RFM69.c   ****         debug_printf("ERROR - ListenAbort should NEVER return 1 this is a write "
 249              		.loc 1 559 10 is_stmt 0 view .LVU49
 250 0050 15F0200F 		tst	r5, #32
 251 0054 1FD1     		bne	.L82
 252              	.L36:
 564:Src/RFM69.c   ****       capVal = (regVal >> 2) & 0x7;
 253              		.loc 1 564 7 is_stmt 1 view .LVU50
 254 0056 AB48     		ldr	r0, .L116+28
 255 0058 FFF7FEFF 		bl	debug_printf
 256              	.LVL14:
 565:Src/RFM69.c   ****       if (capVal == 0x0) {
 257              		.loc 1 565 7 view .LVU51
 258 005c C5F38202 		ubfx	r2, r5, #2, #3
 565:Src/RFM69.c   ****       if (capVal == 0x0) {
 259              		.loc 1 565 14 is_stmt 0 view .LVU52
 260 0060 93B2     		uxth	r3, r2
 261              	.LVL15:
 566:Src/RFM69.c   ****         debug_printf("000 -> Sleep mode (SLEEP)\r\n");
 262              		.loc 1 566 7 is_stmt 1 view .LVU53
 566:Src/RFM69.c   ****         debug_printf("000 -> Sleep mode (SLEEP)\r\n");
 263              		.loc 1 566 10 is_stmt 0 view .LVU54
 264 0062 E3B1     		cbz	r3, .L83
 568:Src/RFM69.c   ****         debug_printf("001 -> Standby mode (STDBY)\r\n");
 265              		.loc 1 568 14 is_stmt 1 view .LVU55
 568:Src/RFM69.c   ****         debug_printf("001 -> Standby mode (STDBY)\r\n");
 266              		.loc 1 568 17 is_stmt 0 view .LVU56
 267 0064 012B     		cmp	r3, #1
 268 0066 5BD0     		beq	.L84
 570:Src/RFM69.c   ****         debug_printf("010 -> Frequency Synthesizer mode (FS)\r\n");
 269              		.loc 1 570 14 is_stmt 1 view .LVU57
 570:Src/RFM69.c   ****         debug_printf("010 -> Frequency Synthesizer mode (FS)\r\n");
 270              		.loc 1 570 17 is_stmt 0 view .LVU58
 271 0068 022B     		cmp	r3, #2
 272 006a 5DD0     		beq	.L85
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 21


 572:Src/RFM69.c   ****         debug_printf("011 -> Transmitter mode (TX)\r\n");
 273              		.loc 1 572 14 is_stmt 1 view .LVU59
 572:Src/RFM69.c   ****         debug_printf("011 -> Transmitter mode (TX)\r\n");
 274              		.loc 1 572 17 is_stmt 0 view .LVU60
 275 006c 032B     		cmp	r3, #3
 276 006e 5FD0     		beq	.L86
 574:Src/RFM69.c   ****         debug_printf("100 -> Receiver Mode (RX)\r\n");
 277              		.loc 1 574 14 is_stmt 1 view .LVU61
 574:Src/RFM69.c   ****         debug_printf("100 -> Receiver Mode (RX)\r\n");
 278              		.loc 1 574 17 is_stmt 0 view .LVU62
 279 0070 042B     		cmp	r3, #4
 280 0072 61D0     		beq	.L87
 578:Src/RFM69.c   ****         debug_printf(log_buffer);
 281              		.loc 1 578 9 is_stmt 1 view .LVU63
 282 0074 A44D     		ldr	r5, .L116+32
 283              	.LVL16:
 578:Src/RFM69.c   ****         debug_printf(log_buffer);
 284              		.loc 1 578 9 is_stmt 0 view .LVU64
 285 0076 A549     		ldr	r1, .L116+36
 286 0078 2846     		mov	r0, r5
 287 007a FFF7FEFF 		bl	sprintf
 288              	.LVL17:
 579:Src/RFM69.c   ****       }
 289              		.loc 1 579 9 is_stmt 1 view .LVU65
 290 007e 2846     		mov	r0, r5
 291 0080 FFF7FEFF 		bl	debug_printf
 292              	.LVL18:
 293 0084 0EE0     		b	.L38
 294              	.LVL19:
 295              	.L81:
 542:Src/RFM69.c   ****       } else {
 296              		.loc 1 542 9 view .LVU66
 297 0086 A248     		ldr	r0, .L116+40
 298 0088 FFF7FEFF 		bl	debug_printf
 299              	.LVL20:
 300 008c D4E7     		b	.L33
 301              	.L34:
 554:Src/RFM69.c   ****       }
 302              		.loc 1 554 9 view .LVU67
 303 008e A148     		ldr	r0, .L116+44
 304 0090 FFF7FEFF 		bl	debug_printf
 305              	.LVL21:
 306 0094 D9E7     		b	.L35
 307              	.L82:
 560:Src/RFM69.c   ****                     "only register\r\n");
 308              		.loc 1 560 9 view .LVU68
 309 0096 A048     		ldr	r0, .L116+48
 310 0098 FFF7FEFF 		bl	debug_printf
 311              	.LVL22:
 312 009c DBE7     		b	.L36
 313              	.LVL23:
 314              	.L83:
 567:Src/RFM69.c   ****       } else if (capVal == 0b001) {
 315              		.loc 1 567 9 view .LVU69
 316 009e 9F48     		ldr	r0, .L116+52
 317 00a0 FFF7FEFF 		bl	debug_printf
 318              	.LVL24:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 22


 319              	.L38:
 581:Src/RFM69.c   ****       break;
 320              		.loc 1 581 7 view .LVU70
 321 00a4 9048     		ldr	r0, .L116
 322 00a6 FFF7FEFF 		bl	debug_printf
 323              	.LVL25:
 582:Src/RFM69.c   ****     }
 324              		.loc 1 582 7 view .LVU71
 325              	.L17:
 784:Src/RFM69.c   ****     }
 326              		.loc 1 784 15 discriminator 2 view .LVU72
 527:Src/RFM69.c   ****     RFM69_select();
 327              		.loc 1 527 45 is_stmt 0 discriminator 2 view .LVU73
 328 00aa 0134     		adds	r4, r4, #1
 329              	.LVL26:
 527:Src/RFM69.c   ****     RFM69_select();
 330              		.loc 1 527 45 discriminator 2 view .LVU74
 331 00ac E4B2     		uxtb	r4, r4
 332              	.LVL27:
 333              	.L16:
 527:Src/RFM69.c   ****     RFM69_select();
 334              		.loc 1 527 3 discriminator 1 view .LVU75
 335 00ae 4F2C     		cmp	r4, #79
 336 00b0 00F20182 		bhi	.L88
 528:Src/RFM69.c   ****     SPI_transfer8(regAddr & 0x7F); // send address + r/w bit
 337              		.loc 1 528 5 is_stmt 1 view .LVU76
 338 00b4 FFF7FEFF 		bl	RFM69_select
 339              	.LVL28:
 529:Src/RFM69.c   ****     regVal = SPI_transfer8(0);
 340              		.loc 1 529 5 view .LVU77
 341 00b8 04F07F00 		and	r0, r4, #127
 342 00bc FFF7FEFF 		bl	SPI_transfer8
 343              	.LVL29:
 530:Src/RFM69.c   ****     RFM69_unselect();
 344              		.loc 1 530 5 view .LVU78
 530:Src/RFM69.c   ****     RFM69_unselect();
 345              		.loc 1 530 14 is_stmt 0 view .LVU79
 346 00c0 0020     		movs	r0, #0
 347 00c2 FFF7FEFF 		bl	SPI_transfer8
 348              	.LVL30:
 349 00c6 0546     		mov	r5, r0
 350              	.LVL31:
 531:Src/RFM69.c   **** 
 351              		.loc 1 531 5 is_stmt 1 view .LVU80
 352 00c8 FFF7FEFF 		bl	RFM69_unselect
 353              	.LVL32:
 533:Src/RFM69.c   ****     debug_printf(log_buffer);
 354              		.loc 1 533 5 view .LVU81
 355 00cc 8E4E     		ldr	r6, .L116+32
 356 00ce 2B46     		mov	r3, r5
 357 00d0 2246     		mov	r2, r4
 358 00d2 9349     		ldr	r1, .L116+56
 359 00d4 3046     		mov	r0, r6
 360 00d6 FFF7FEFF 		bl	sprintf
 361              	.LVL33:
 534:Src/RFM69.c   **** 
 362              		.loc 1 534 5 view .LVU82
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 23


 363 00da 3046     		mov	r0, r6
 364 00dc FFF7FEFF 		bl	debug_printf
 365              	.LVL34:
 537:Src/RFM69.c   ****     case 0x1: {
 366              		.loc 1 537 5 view .LVU83
 367 00e0 631E     		subs	r3, r4, #1
 368 00e2 0C2B     		cmp	r3, #12
 369 00e4 E1D8     		bhi	.L17
 370 00e6 01A2     		adr	r2, .L19
 371 00e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 372              		.p2align 2
 373              	.L19:
 374 00ec 27000000 		.word	.L31+1
 375 00f0 41010000 		.word	.L30+1
 376 00f4 43020000 		.word	.L29+1
 377 00f8 4F020000 		.word	.L28+1
 378 00fc 85020000 		.word	.L27+1
 379 0100 8D020000 		.word	.L26+1
 380 0104 B5020000 		.word	.L25+1
 381 0108 BB020000 		.word	.L24+1
 382 010c C1020000 		.word	.L23+1
 383 0110 A1030000 		.word	.L22+1
 384 0114 C3030000 		.word	.L21+1
 385 0118 E5030000 		.word	.L20+1
 386 011c ED030000 		.word	.L18+1
 387              	.LVL35:
 388              		.p2align 1
 389              	.L84:
 569:Src/RFM69.c   ****       } else if (capVal == 0b010) {
 390              		.loc 1 569 9 view .LVU84
 391 0120 8048     		ldr	r0, .L116+60
 392 0122 FFF7FEFF 		bl	debug_printf
 393              	.LVL36:
 569:Src/RFM69.c   ****       } else if (capVal == 0b010) {
 394              		.loc 1 569 9 is_stmt 0 view .LVU85
 395 0126 BDE7     		b	.L38
 396              	.LVL37:
 397              	.L85:
 571:Src/RFM69.c   ****       } else if (capVal == 0b011) {
 398              		.loc 1 571 9 is_stmt 1 view .LVU86
 399 0128 7F48     		ldr	r0, .L116+64
 400 012a FFF7FEFF 		bl	debug_printf
 401              	.LVL38:
 571:Src/RFM69.c   ****       } else if (capVal == 0b011) {
 402              		.loc 1 571 9 is_stmt 0 view .LVU87
 403 012e B9E7     		b	.L38
 404              	.LVL39:
 405              	.L86:
 573:Src/RFM69.c   ****       } else if (capVal == 0b100) {
 406              		.loc 1 573 9 is_stmt 1 view .LVU88
 407 0130 7E48     		ldr	r0, .L116+68
 408 0132 FFF7FEFF 		bl	debug_printf
 409              	.LVL40:
 573:Src/RFM69.c   ****       } else if (capVal == 0b100) {
 410              		.loc 1 573 9 is_stmt 0 view .LVU89
 411 0136 B5E7     		b	.L38
 412              	.LVL41:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 24


 413              	.L87:
 575:Src/RFM69.c   ****       } else {
 414              		.loc 1 575 9 is_stmt 1 view .LVU90
 415 0138 7D48     		ldr	r0, .L116+72
 416 013a FFF7FEFF 		bl	debug_printf
 417              	.LVL42:
 575:Src/RFM69.c   ****       } else {
 418              		.loc 1 575 9 is_stmt 0 view .LVU91
 419 013e B1E7     		b	.L38
 420              	.LVL43:
 421              	.L30:
 587:Src/RFM69.c   ****       capVal = (regVal >> 5) & 0x3;
 422              		.loc 1 587 7 is_stmt 1 view .LVU92
 423 0140 7C48     		ldr	r0, .L116+76
 424 0142 FFF7FEFF 		bl	debug_printf
 425              	.LVL44:
 588:Src/RFM69.c   ****       if (capVal == 0b00) {
 426              		.loc 1 588 7 view .LVU93
 588:Src/RFM69.c   ****       if (capVal == 0b00) {
 427              		.loc 1 588 14 is_stmt 0 view .LVU94
 428 0146 C5F34113 		ubfx	r3, r5, #5, #2
 429              	.LVL45:
 589:Src/RFM69.c   ****         debug_printf("00 -> Packet mode\r\n");
 430              		.loc 1 589 7 is_stmt 1 view .LVU95
 589:Src/RFM69.c   ****         debug_printf("00 -> Packet mode\r\n");
 431              		.loc 1 589 10 is_stmt 0 view .LVU96
 432 014a 6BB3     		cbz	r3, .L89
 591:Src/RFM69.c   ****         debug_printf("01 -> reserved\r\n");
 433              		.loc 1 591 14 is_stmt 1 view .LVU97
 591:Src/RFM69.c   ****         debug_printf("01 -> reserved\r\n");
 434              		.loc 1 591 17 is_stmt 0 view .LVU98
 435 014c 012B     		cmp	r3, #1
 436 014e 2FD0     		beq	.L90
 593:Src/RFM69.c   ****         debug_printf("10 -> Continuous mode with bit synchronizer\r\n");
 437              		.loc 1 593 14 is_stmt 1 view .LVU99
 593:Src/RFM69.c   ****         debug_printf("10 -> Continuous mode with bit synchronizer\r\n");
 438              		.loc 1 593 17 is_stmt 0 view .LVU100
 439 0150 022B     		cmp	r3, #2
 440 0152 31D0     		beq	.L91
 595:Src/RFM69.c   ****         debug_printf("11 -> Continuous mode without bit synchronizer\r\n");
 441              		.loc 1 595 14 is_stmt 1 view .LVU101
 595:Src/RFM69.c   ****         debug_printf("11 -> Continuous mode without bit synchronizer\r\n");
 442              		.loc 1 595 17 is_stmt 0 view .LVU102
 443 0154 032B     		cmp	r3, #3
 444 0156 33D0     		beq	.L92
 445              	.LVL46:
 446              	.L44:
 599:Src/RFM69.c   ****       capVal = (regVal >> 3) & 0x3;
 447              		.loc 1 599 7 is_stmt 1 view .LVU103
 448 0158 7748     		ldr	r0, .L116+80
 449 015a FFF7FEFF 		bl	debug_printf
 450              	.LVL47:
 600:Src/RFM69.c   ****       if (capVal == 0b00) {
 451              		.loc 1 600 7 view .LVU104
 600:Src/RFM69.c   ****       if (capVal == 0b00) {
 452              		.loc 1 600 14 is_stmt 0 view .LVU105
 453 015e C5F3C103 		ubfx	r3, r5, #3, #2
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 25


 454              	.LVL48:
 601:Src/RFM69.c   ****         debug_printf("00 -> FSK\r\n");
 455              		.loc 1 601 7 is_stmt 1 view .LVU106
 601:Src/RFM69.c   ****         debug_printf("00 -> FSK\r\n");
 456              		.loc 1 601 10 is_stmt 0 view .LVU107
 457 0162 8BB3     		cbz	r3, .L93
 604:Src/RFM69.c   ****         debug_printf("01 -> OOK\r\n");
 458              		.loc 1 604 14 is_stmt 1 view .LVU108
 604:Src/RFM69.c   ****         debug_printf("01 -> OOK\r\n");
 459              		.loc 1 604 17 is_stmt 0 view .LVU109
 460 0164 012B     		cmp	r3, #1
 461 0166 35D0     		beq	.L94
 606:Src/RFM69.c   ****         debug_printf("10 -> reserved\r\n");
 462              		.loc 1 606 14 is_stmt 1 view .LVU110
 606:Src/RFM69.c   ****         debug_printf("10 -> reserved\r\n");
 463              		.loc 1 606 17 is_stmt 0 view .LVU111
 464 0168 022B     		cmp	r3, #2
 465 016a 37D0     		beq	.L95
 608:Src/RFM69.c   ****         debug_printf("11 -> reserved\r\n");
 466              		.loc 1 608 14 is_stmt 1 view .LVU112
 608:Src/RFM69.c   ****         debug_printf("11 -> reserved\r\n");
 467              		.loc 1 608 17 is_stmt 0 view .LVU113
 468 016c 032B     		cmp	r3, #3
 469 016e 39D0     		beq	.L96
 470              	.LVL49:
 471              	.L48:
 612:Src/RFM69.c   ****       if (modeFSK) {
 472              		.loc 1 612 7 is_stmt 1 view .LVU114
 473 0170 7248     		ldr	r0, .L116+84
 474 0172 FFF7FEFF 		bl	debug_printf
 475              	.LVL50:
 613:Src/RFM69.c   ****         debug_printf("in FSK:\r\n");
 476              		.loc 1 613 7 view .LVU115
 613:Src/RFM69.c   ****         debug_printf("in FSK:\r\n");
 477              		.loc 1 613 10 is_stmt 0 view .LVU116
 478 0176 BAF1000F 		cmp	r10, #0
 479 017a 37D0     		beq	.L51
 614:Src/RFM69.c   ****       } else {
 480              		.loc 1 614 9 is_stmt 1 view .LVU117
 481 017c 7048     		ldr	r0, .L116+88
 482 017e FFF7FEFF 		bl	debug_printf
 483              	.LVL51:
 484              	.L52:
 618:Src/RFM69.c   ****       capVal = regVal & 0x3;
 485              		.loc 1 618 7 view .LVU118
 486 0182 7048     		ldr	r0, .L116+92
 487 0184 FFF7FEFF 		bl	debug_printf
 488              	.LVL52:
 619:Src/RFM69.c   ****       if (modeFSK) {
 489              		.loc 1 619 7 view .LVU119
 619:Src/RFM69.c   ****       if (modeFSK) {
 490              		.loc 1 619 14 is_stmt 0 view .LVU120
 491 0188 05F00305 		and	r5, r5, #3
 492              	.LVL53:
 620:Src/RFM69.c   ****         if (capVal == 0b00) {
 493              		.loc 1 620 7 is_stmt 1 view .LVU121
 620:Src/RFM69.c   ****         if (capVal == 0b00) {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 26


 494              		.loc 1 620 10 is_stmt 0 view .LVU122
 495 018c BAF1000F 		cmp	r10, #0
 496 0190 40D0     		beq	.L53
 621:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 497              		.loc 1 621 9 is_stmt 1 view .LVU123
 621:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 498              		.loc 1 621 12 is_stmt 0 view .LVU124
 499 0192 7DB3     		cbz	r5, .L97
 623:Src/RFM69.c   ****           debug_printf("01 -> Gaussian filter, BT = 1.0\r\n");
 500              		.loc 1 623 16 is_stmt 1 view .LVU125
 623:Src/RFM69.c   ****           debug_printf("01 -> Gaussian filter, BT = 1.0\r\n");
 501              		.loc 1 623 19 is_stmt 0 view .LVU126
 502 0194 012D     		cmp	r5, #1
 503 0196 31D0     		beq	.L98
 625:Src/RFM69.c   ****           debug_printf("10 -> Gaussian filter, BT = 0.5\r\n");
 504              		.loc 1 625 16 is_stmt 1 view .LVU127
 625:Src/RFM69.c   ****           debug_printf("10 -> Gaussian filter, BT = 0.5\r\n");
 505              		.loc 1 625 19 is_stmt 0 view .LVU128
 506 0198 022D     		cmp	r5, #2
 507 019a 33D0     		beq	.L99
 627:Src/RFM69.c   ****           debug_printf("11 -> Gaussian filter, BT = 0.3\r\n");
 508              		.loc 1 627 16 is_stmt 1 view .LVU129
 627:Src/RFM69.c   ****           debug_printf("11 -> Gaussian filter, BT = 0.3\r\n");
 509              		.loc 1 627 19 is_stmt 0 view .LVU130
 510 019c 032D     		cmp	r5, #3
 511 019e 35D0     		beq	.L100
 512              	.L55:
 642:Src/RFM69.c   ****       break;
 513              		.loc 1 642 7 is_stmt 1 view .LVU131
 514 01a0 5148     		ldr	r0, .L116
 515 01a2 FFF7FEFF 		bl	debug_printf
 516              	.LVL54:
 643:Src/RFM69.c   ****     }
 517              		.loc 1 643 7 view .LVU132
 518 01a6 80E7     		b	.L17
 519              	.LVL55:
 520              	.L89:
 590:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 521              		.loc 1 590 9 view .LVU133
 522 01a8 6748     		ldr	r0, .L116+96
 523 01aa FFF7FEFF 		bl	debug_printf
 524              	.LVL56:
 590:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 525              		.loc 1 590 9 is_stmt 0 view .LVU134
 526 01ae D3E7     		b	.L44
 527              	.LVL57:
 528              	.L90:
 592:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 529              		.loc 1 592 9 is_stmt 1 view .LVU135
 530 01b0 6648     		ldr	r0, .L116+100
 531 01b2 FFF7FEFF 		bl	debug_printf
 532              	.LVL58:
 592:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 533              		.loc 1 592 9 is_stmt 0 view .LVU136
 534 01b6 CFE7     		b	.L44
 535              	.LVL59:
 536              	.L91:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 27


 594:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 537              		.loc 1 594 9 is_stmt 1 view .LVU137
 538 01b8 6548     		ldr	r0, .L116+104
 539 01ba FFF7FEFF 		bl	debug_printf
 540              	.LVL60:
 594:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 541              		.loc 1 594 9 is_stmt 0 view .LVU138
 542 01be CBE7     		b	.L44
 543              	.LVL61:
 544              	.L92:
 596:Src/RFM69.c   ****       }
 545              		.loc 1 596 9 is_stmt 1 view .LVU139
 546 01c0 6448     		ldr	r0, .L116+108
 547 01c2 FFF7FEFF 		bl	debug_printf
 548              	.LVL62:
 596:Src/RFM69.c   ****       }
 549              		.loc 1 596 9 is_stmt 0 view .LVU140
 550 01c6 C7E7     		b	.L44
 551              	.LVL63:
 552              	.L93:
 602:Src/RFM69.c   ****         modeFSK = 1;
 553              		.loc 1 602 9 is_stmt 1 view .LVU141
 554 01c8 6348     		ldr	r0, .L116+112
 555 01ca FFF7FEFF 		bl	debug_printf
 556              	.LVL64:
 603:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 557              		.loc 1 603 9 view .LVU142
 603:Src/RFM69.c   ****       } else if (capVal == 0b01) {
 558              		.loc 1 603 17 is_stmt 0 view .LVU143
 559 01ce 4FF0010A 		mov	r10, #1
 560 01d2 CDE7     		b	.L48
 561              	.LVL65:
 562              	.L94:
 605:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 563              		.loc 1 605 9 is_stmt 1 view .LVU144
 564 01d4 6148     		ldr	r0, .L116+116
 565 01d6 FFF7FEFF 		bl	debug_printf
 566              	.LVL66:
 605:Src/RFM69.c   ****       } else if (capVal == 0b10) {
 567              		.loc 1 605 9 is_stmt 0 view .LVU145
 568 01da C9E7     		b	.L48
 569              	.LVL67:
 570              	.L95:
 607:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 571              		.loc 1 607 9 is_stmt 1 view .LVU146
 572 01dc 6048     		ldr	r0, .L116+120
 573 01de FFF7FEFF 		bl	debug_printf
 574              	.LVL68:
 607:Src/RFM69.c   ****       } else if (capVal == 0b11) {
 575              		.loc 1 607 9 is_stmt 0 view .LVU147
 576 01e2 C5E7     		b	.L48
 577              	.LVL69:
 578              	.L96:
 609:Src/RFM69.c   ****       }
 579              		.loc 1 609 9 is_stmt 1 view .LVU148
 580 01e4 5F48     		ldr	r0, .L116+124
 581 01e6 FFF7FEFF 		bl	debug_printf
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 28


 582              	.LVL70:
 609:Src/RFM69.c   ****       }
 583              		.loc 1 609 9 is_stmt 0 view .LVU149
 584 01ea C1E7     		b	.L48
 585              	.L51:
 616:Src/RFM69.c   ****       }
 586              		.loc 1 616 9 is_stmt 1 view .LVU150
 587 01ec 5E48     		ldr	r0, .L116+128
 588 01ee FFF7FEFF 		bl	debug_printf
 589              	.LVL71:
 590 01f2 C6E7     		b	.L52
 591              	.LVL72:
 592              	.L97:
 622:Src/RFM69.c   ****         } else if (capVal == 0b01) {
 593              		.loc 1 622 11 view .LVU151
 594 01f4 5D48     		ldr	r0, .L116+132
 595 01f6 FFF7FEFF 		bl	debug_printf
 596              	.LVL73:
 597 01fa D1E7     		b	.L55
 598              	.L98:
 624:Src/RFM69.c   ****         } else if (capVal == 0b10) {
 599              		.loc 1 624 11 view .LVU152
 600 01fc 5C48     		ldr	r0, .L116+136
 601 01fe FFF7FEFF 		bl	debug_printf
 602              	.LVL74:
 603 0202 CDE7     		b	.L55
 604              	.L99:
 626:Src/RFM69.c   ****         } else if (capVal == 0b11) {
 605              		.loc 1 626 11 view .LVU153
 606 0204 5B48     		ldr	r0, .L116+140
 607 0206 FFF7FEFF 		bl	debug_printf
 608              	.LVL75:
 609 020a C9E7     		b	.L55
 610              	.L100:
 628:Src/RFM69.c   ****         }
 611              		.loc 1 628 11 view .LVU154
 612 020c 5A48     		ldr	r0, .L116+144
 613 020e FFF7FEFF 		bl	debug_printf
 614              	.LVL76:
 615 0212 C5E7     		b	.L55
 616              	.L53:
 631:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 617              		.loc 1 631 9 view .LVU155
 631:Src/RFM69.c   ****           debug_printf("00 -> no shaping\r\n");
 618              		.loc 1 631 12 is_stmt 0 view .LVU156
 619 0214 4DB1     		cbz	r5, .L101
 633:Src/RFM69.c   ****           debug_printf("01 -> filtering with f(cutoff) = BR\r\n");
 620              		.loc 1 633 16 is_stmt 1 view .LVU157
 633:Src/RFM69.c   ****           debug_printf("01 -> filtering with f(cutoff) = BR\r\n");
 621              		.loc 1 633 19 is_stmt 0 view .LVU158
 622 0216 012D     		cmp	r5, #1
 623 0218 0BD0     		beq	.L102
 635:Src/RFM69.c   ****           debug_printf("10 -> filtering with f(cutoff) = 2*BR\r\n");
 624              		.loc 1 635 16 is_stmt 1 view .LVU159
 635:Src/RFM69.c   ****           debug_printf("10 -> filtering with f(cutoff) = 2*BR\r\n");
 625              		.loc 1 635 19 is_stmt 0 view .LVU160
 626 021a 022D     		cmp	r5, #2
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 29


 627 021c 0DD0     		beq	.L103
 637:Src/RFM69.c   ****           debug_printf("ERROR - 11 is reserved\r\n");
 628              		.loc 1 637 16 is_stmt 1 view .LVU161
 637:Src/RFM69.c   ****           debug_printf("ERROR - 11 is reserved\r\n");
 629              		.loc 1 637 19 is_stmt 0 view .LVU162
 630 021e 032D     		cmp	r5, #3
 631 0220 BED1     		bne	.L55
 638:Src/RFM69.c   ****         }
 632              		.loc 1 638 11 is_stmt 1 view .LVU163
 633 0222 5648     		ldr	r0, .L116+148
 634 0224 FFF7FEFF 		bl	debug_printf
 635              	.LVL77:
 636 0228 BAE7     		b	.L55
 637              	.L101:
 632:Src/RFM69.c   ****         } else if (capVal == 0b01) {
 638              		.loc 1 632 11 view .LVU164
 639 022a 5048     		ldr	r0, .L116+132
 640 022c FFF7FEFF 		bl	debug_printf
 641              	.LVL78:
 642 0230 B6E7     		b	.L55
 643              	.L102:
 634:Src/RFM69.c   ****         } else if (capVal == 0b10) {
 644              		.loc 1 634 11 view .LVU165
 645 0232 5348     		ldr	r0, .L116+152
 646 0234 FFF7FEFF 		bl	debug_printf
 647              	.LVL79:
 648 0238 B2E7     		b	.L55
 649              	.L103:
 636:Src/RFM69.c   ****         } else if (capVal == 0b11) {
 650              		.loc 1 636 11 view .LVU166
 651 023a 5248     		ldr	r0, .L116+156
 652 023c FFF7FEFF 		bl	debug_printf
 653              	.LVL80:
 654 0240 AEE7     		b	.L55
 655              	.LVL81:
 656              	.L29:
 647:Src/RFM69.c   ****       break;
 657              		.loc 1 647 7 view .LVU167
 647:Src/RFM69.c   ****       break;
 658              		.loc 1 647 25 is_stmt 0 view .LVU168
 659 0242 2D02     		lsls	r5, r5, #8
 660              	.LVL82:
 647:Src/RFM69.c   ****       break;
 661              		.loc 1 647 15 view .LVU169
 662 0244 2A46     		mov	r2, r5
 663 0246 EB17     		asrs	r3, r5, #31
 664 0248 CDE90023 		strd	r2, [sp]
 665              	.LVL83:
 648:Src/RFM69.c   ****     }
 666              		.loc 1 648 7 is_stmt 1 view .LVU170
 667 024c 2DE7     		b	.L17
 668              	.LVL84:
 669              	.L28:
 670              	.LBB2:
 652:Src/RFM69.c   ****       debug_printf("Bit Rate (Chip Rate when Manchester encoding is enabled)\r\nBitRate : ");
 671              		.loc 1 652 7 view .LVU171
 652:Src/RFM69.c   ****       debug_printf("Bit Rate (Chip Rate when Manchester encoding is enabled)\r\nBitRate : ");
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 30


 672              		.loc 1 652 15 is_stmt 0 view .LVU172
 673 024e DDE90012 		ldrd	r1, [sp]
 674 0252 0D43     		orrs	r5, r5, r1
 675              	.LVL85:
 652:Src/RFM69.c   ****       debug_printf("Bit Rate (Chip Rate when Manchester encoding is enabled)\r\nBitRate : ");
 676              		.loc 1 652 15 view .LVU173
 677 0254 0095     		str	r5, [sp]
 678              	.LVL86:
 652:Src/RFM69.c   ****       debug_printf("Bit Rate (Chip Rate when Manchester encoding is enabled)\r\nBitRate : ");
 679              		.loc 1 652 15 view .LVU174
 680 0256 0192     		str	r2, [sp, #4]
 681              	.LVL87:
 653:Src/RFM69.c   ****       uint64_t val = 32UL * 1000UL * 1000UL / bitRate;
 682              		.loc 1 653 7 is_stmt 1 view .LVU175
 683 0258 4B48     		ldr	r0, .L116+160
 684 025a FFF7FEFF 		bl	debug_printf
 685              	.LVL88:
 654:Src/RFM69.c   ****       sprintf(pcBuf, "%lld", val);
 686              		.loc 1 654 7 view .LVU176
 654:Src/RFM69.c   ****       sprintf(pcBuf, "%lld", val);
 687              		.loc 1 654 16 is_stmt 0 view .LVU177
 688 025e DDE90023 		ldrd	r2, [sp]
 689 0262 4A48     		ldr	r0, .L116+164
 690 0264 0021     		movs	r1, #0
 691 0266 FFF7FEFF 		bl	__aeabi_uldivmod
 692              	.LVL89:
 655:Src/RFM69.c   ****       debug_printf(pcBuf);
 693              		.loc 1 655 7 is_stmt 1 view .LVU178
 694 026a 0246     		mov	r2, r0
 695 026c 0B46     		mov	r3, r1
 696 026e 4849     		ldr	r1, .L116+168
 697 0270 03A8     		add	r0, sp, #12
 698              	.LVL90:
 655:Src/RFM69.c   ****       debug_printf(pcBuf);
 699              		.loc 1 655 7 is_stmt 0 view .LVU179
 700 0272 FFF7FEFF 		bl	sprintf
 701              	.LVL91:
 656:Src/RFM69.c   ****       debug_printf("\r\n");
 702              		.loc 1 656 7 is_stmt 1 view .LVU180
 703 0276 03A8     		add	r0, sp, #12
 704 0278 FFF7FEFF 		bl	debug_printf
 705              	.LVL92:
 657:Src/RFM69.c   ****       break;
 706              		.loc 1 657 7 view .LVU181
 707 027c 1A48     		ldr	r0, .L116
 708 027e FFF7FEFF 		bl	debug_printf
 709              	.LVL93:
 658:Src/RFM69.c   ****     }
 710              		.loc 1 658 7 view .LVU182
 711 0282 12E7     		b	.L17
 712              	.LVL94:
 713              	.L27:
 658:Src/RFM69.c   ****     }
 714              		.loc 1 658 7 is_stmt 0 view .LVU183
 715              	.LBE2:
 662:Src/RFM69.c   ****       break;
 716              		.loc 1 662 7 is_stmt 1 view .LVU184
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 31


 662:Src/RFM69.c   ****       break;
 717              		.loc 1 662 34 is_stmt 0 view .LVU185
 718 0284 2D02     		lsls	r5, r5, #8
 719              	.LVL95:
 662:Src/RFM69.c   ****       break;
 720              		.loc 1 662 15 view .LVU186
 721 0286 05F47C59 		and	r9, r5, #16128
 722              	.LVL96:
 663:Src/RFM69.c   ****     }
 723              		.loc 1 663 7 is_stmt 1 view .LVU187
 724 028a 0EE7     		b	.L17
 725              	.LVL97:
 726              	.L26:
 727              	.LBB3:
 667:Src/RFM69.c   ****       debug_printf("Frequency deviation\r\nFdev : ");
 728              		.loc 1 667 7 view .LVU188
 667:Src/RFM69.c   ****       debug_printf("Frequency deviation\r\nFdev : ");
 729              		.loc 1 667 15 is_stmt 0 view .LVU189
 730 028c 49EA0509 		orr	r9, r9, r5
 731              	.LVL98:
 668:Src/RFM69.c   ****       uint32_t val = 61UL * freqDev;
 732              		.loc 1 668 7 is_stmt 1 view .LVU190
 733 0290 4048     		ldr	r0, .L116+172
 734 0292 FFF7FEFF 		bl	debug_printf
 735              	.LVL99:
 669:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 736              		.loc 1 669 7 view .LVU191
 669:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 737              		.loc 1 669 16 is_stmt 0 view .LVU192
 738 0296 C9EB0912 		rsb	r2, r9, r9, lsl #4
 739              	.LVL100:
 670:Src/RFM69.c   ****       debug_printf(pcBuf);
 740              		.loc 1 670 7 is_stmt 1 view .LVU193
 741 029a 09EB8202 		add	r2, r9, r2, lsl #2
 742              	.LVL101:
 670:Src/RFM69.c   ****       debug_printf(pcBuf);
 743              		.loc 1 670 7 is_stmt 0 view .LVU194
 744 029e 3E49     		ldr	r1, .L116+176
 745 02a0 03A8     		add	r0, sp, #12
 746 02a2 FFF7FEFF 		bl	sprintf
 747              	.LVL102:
 671:Src/RFM69.c   ****       debug_printf("\r\n");
 748              		.loc 1 671 7 is_stmt 1 view .LVU195
 749 02a6 03A8     		add	r0, sp, #12
 750 02a8 FFF7FEFF 		bl	debug_printf
 751              	.LVL103:
 672:Src/RFM69.c   ****       break;
 752              		.loc 1 672 7 view .LVU196
 753 02ac 0E48     		ldr	r0, .L116
 754 02ae FFF7FEFF 		bl	debug_printf
 755              	.LVL104:
 673:Src/RFM69.c   ****     }
 756              		.loc 1 673 7 view .LVU197
 757 02b2 FAE6     		b	.L17
 758              	.LVL105:
 759              	.L25:
 673:Src/RFM69.c   ****     }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 32


 760              		.loc 1 673 7 is_stmt 0 view .LVU198
 761              	.LBE3:
 762              	.LBB4:
 677:Src/RFM69.c   ****       freqCenter = (tempVal << 16);
 763              		.loc 1 677 7 is_stmt 1 view .LVU199
 678:Src/RFM69.c   ****       break;
 764              		.loc 1 678 7 view .LVU200
 678:Src/RFM69.c   ****       break;
 765              		.loc 1 678 18 is_stmt 0 view .LVU201
 766 02b4 4FEA0548 		lsl	r8, r5, #16
 767              	.LVL106:
 679:Src/RFM69.c   ****     }
 768              		.loc 1 679 7 is_stmt 1 view .LVU202
 769 02b8 F7E6     		b	.L17
 770              	.LVL107:
 771              	.L24:
 679:Src/RFM69.c   ****     }
 772              		.loc 1 679 7 is_stmt 0 view .LVU203
 773              	.LBE4:
 774              	.LBB5:
 683:Src/RFM69.c   ****       freqCenter = freqCenter | (tempVal << 8);
 775              		.loc 1 683 7 is_stmt 1 view .LVU204
 684:Src/RFM69.c   ****       break;
 776              		.loc 1 684 7 view .LVU205
 684:Src/RFM69.c   ****       break;
 777              		.loc 1 684 18 is_stmt 0 view .LVU206
 778 02ba 48EA0528 		orr	r8, r8, r5, lsl #8
 779              	.LVL108:
 685:Src/RFM69.c   ****     }
 780              		.loc 1 685 7 is_stmt 1 view .LVU207
 781 02be F4E6     		b	.L17
 782              	.LVL109:
 783              	.L23:
 685:Src/RFM69.c   ****     }
 784              		.loc 1 685 7 is_stmt 0 view .LVU208
 785              	.LBE5:
 786              	.LBB6:
 689:Src/RFM69.c   ****       debug_printf("RF Carrier frequency\r\nFRF : ");
 787              		.loc 1 689 7 is_stmt 1 view .LVU209
 689:Src/RFM69.c   ****       debug_printf("RF Carrier frequency\r\nFRF : ");
 788              		.loc 1 689 18 is_stmt 0 view .LVU210
 789 02c0 48EA0508 		orr	r8, r8, r5
 790              	.LVL110:
 690:Src/RFM69.c   ****       uint32_t val = 61UL * freqCenter;
 791              		.loc 1 690 7 is_stmt 1 view .LVU211
 792 02c4 3548     		ldr	r0, .L116+180
 793 02c6 FFF7FEFF 		bl	debug_printf
 794              	.LVL111:
 691:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 795              		.loc 1 691 7 view .LVU212
 691:Src/RFM69.c   ****       sprintf(pcBuf, "%ld", val);
 796              		.loc 1 691 16 is_stmt 0 view .LVU213
 797 02ca C8EB0812 		rsb	r2, r8, r8, lsl #4
 798              	.LVL112:
 692:Src/RFM69.c   ****       debug_printf(pcBuf);
 799              		.loc 1 692 7 is_stmt 1 view .LVU214
 800 02ce 08EB8202 		add	r2, r8, r2, lsl #2
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 33


 801              	.LVL113:
 692:Src/RFM69.c   ****       debug_printf(pcBuf);
 802              		.loc 1 692 7 is_stmt 0 view .LVU215
 803 02d2 3149     		ldr	r1, .L116+176
 804 02d4 03A8     		add	r0, sp, #12
 805 02d6 FFF7FEFF 		bl	sprintf
 806              	.LVL114:
 693:Src/RFM69.c   ****       debug_printf("\r\n");
 807              		.loc 1 693 7 is_stmt 1 view .LVU216
 808 02da 03A8     		add	r0, sp, #12
 809 02dc FFF7FEFF 		bl	debug_printf
 810              	.LVL115:
 694:Src/RFM69.c   ****       break;
 811              		.loc 1 694 7 view .LVU217
 812 02e0 0148     		ldr	r0, .L116
 813 02e2 FFF7FEFF 		bl	debug_printf
 814              	.LVL116:
 695:Src/RFM69.c   ****     }
 815              		.loc 1 695 7 view .LVU218
 816 02e6 E0E6     		b	.L17
 817              	.L117:
 818              		.align	2
 819              	.L116:
 820 02e8 00000000 		.word	.LC0
 821 02ec 04000000 		.word	.LC1
 822 02f0 24000000 		.word	.LC3
 823 02f4 90000000 		.word	.LC5
 824 02f8 FC000000 		.word	.LC6
 825 02fc 4C010000 		.word	.LC7
 826 0300 78010000 		.word	.LC9
 827 0304 30020000 		.word	.LC11
 828 0308 00000000 		.word	log_buffer
 829 030c 00030000 		.word	.LC17
 830 0310 6C000000 		.word	.LC4
 831 0314 58010000 		.word	.LC8
 832 0318 E4010000 		.word	.LC10
 833 031c 5C020000 		.word	.LC12
 834 0320 14000000 		.word	.LC2
 835 0324 78020000 		.word	.LC13
 836 0328 98020000 		.word	.LC14
 837 032c C4020000 		.word	.LC15
 838 0330 E4020000 		.word	.LC16
 839 0334 14030000 		.word	.LC18
 840 0338 C4030000 		.word	.LC23
 841 033c 30040000 		.word	.LC28
 842 0340 44040000 		.word	.LC29
 843 0344 5C040000 		.word	.LC31
 844 0348 38030000 		.word	.LC19
 845 034c 4C030000 		.word	.LC20
 846 0350 60030000 		.word	.LC21
 847 0354 90030000 		.word	.LC22
 848 0358 F0030000 		.word	.LC24
 849 035c FC030000 		.word	.LC25
 850 0360 08040000 		.word	.LC26
 851 0364 1C040000 		.word	.LC27
 852 0368 50040000 		.word	.LC30
 853 036c 74040000 		.word	.LC32
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 34


 854 0370 88040000 		.word	.LC33
 855 0374 AC040000 		.word	.LC34
 856 0378 D0040000 		.word	.LC35
 857 037c 44050000 		.word	.LC38
 858 0380 F4040000 		.word	.LC36
 859 0384 1C050000 		.word	.LC37
 860 0388 60050000 		.word	.LC39
 861 038c 0048E801 		.word	32000000
 862 0390 A8050000 		.word	.LC40
 863 0394 B0050000 		.word	.LC41
 864 0398 D0050000 		.word	.LC42
 865 039c D4050000 		.word	.LC43
 866              	.LVL117:
 867              	.L22:
 695:Src/RFM69.c   ****     }
 868              		.loc 1 695 7 is_stmt 0 view .LVU219
 869              	.LBE6:
 699:Src/RFM69.c   ****       if (0x40 & regVal) {
 870              		.loc 1 699 7 is_stmt 1 view .LVU220
 871 03a0 4B48     		ldr	r0, .L118
 872 03a2 FFF7FEFF 		bl	debug_printf
 873              	.LVL118:
 700:Src/RFM69.c   ****         debug_printf("1 -> RC calibration is over\r\n");
 874              		.loc 1 700 7 view .LVU221
 700:Src/RFM69.c   ****         debug_printf("1 -> RC calibration is over\r\n");
 875              		.loc 1 700 10 is_stmt 0 view .LVU222
 876 03a6 15F0400F 		tst	r5, #64
 877 03aa 06D0     		beq	.L61
 701:Src/RFM69.c   ****       } else {
 878              		.loc 1 701 9 is_stmt 1 view .LVU223
 879 03ac 4948     		ldr	r0, .L118+4
 880 03ae FFF7FEFF 		bl	debug_printf
 881              	.LVL119:
 882              	.L62:
 706:Src/RFM69.c   ****       break;
 883              		.loc 1 706 7 view .LVU224
 884 03b2 4948     		ldr	r0, .L118+8
 885 03b4 FFF7FEFF 		bl	debug_printf
 886              	.LVL120:
 707:Src/RFM69.c   ****     }
 887              		.loc 1 707 7 view .LVU225
 888 03b8 77E6     		b	.L17
 889              	.L61:
 703:Src/RFM69.c   ****       }
 890              		.loc 1 703 9 view .LVU226
 891 03ba 4848     		ldr	r0, .L118+12
 892 03bc FFF7FEFF 		bl	debug_printf
 893              	.LVL121:
 894 03c0 F7E7     		b	.L62
 895              	.L21:
 711:Src/RFM69.c   ****           "Improved AFC routine for signals with modulation index lower than "
 896              		.loc 1 711 7 view .LVU227
 897 03c2 4748     		ldr	r0, .L118+16
 898 03c4 FFF7FEFF 		bl	debug_printf
 899              	.LVL122:
 714:Src/RFM69.c   ****         debug_printf("1 -> Improved AFC routine\r\n");
 900              		.loc 1 714 7 view .LVU228
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 35


 714:Src/RFM69.c   ****         debug_printf("1 -> Improved AFC routine\r\n");
 901              		.loc 1 714 10 is_stmt 0 view .LVU229
 902 03c8 15F0200F 		tst	r5, #32
 903 03cc 06D0     		beq	.L63
 715:Src/RFM69.c   ****       } else {
 904              		.loc 1 715 9 is_stmt 1 view .LVU230
 905 03ce 4548     		ldr	r0, .L118+20
 906 03d0 FFF7FEFF 		bl	debug_printf
 907              	.LVL123:
 908              	.L64:
 719:Src/RFM69.c   ****       break;
 909              		.loc 1 719 7 view .LVU231
 910 03d4 4048     		ldr	r0, .L118+8
 911 03d6 FFF7FEFF 		bl	debug_printf
 912              	.LVL124:
 720:Src/RFM69.c   ****     }
 913              		.loc 1 720 7 view .LVU232
 914 03da 66E6     		b	.L17
 915              	.L63:
 717:Src/RFM69.c   ****       }
 916              		.loc 1 717 9 view .LVU233
 917 03dc 4248     		ldr	r0, .L118+24
 918 03de FFF7FEFF 		bl	debug_printf
 919              	.LVL125:
 920 03e2 F7E7     		b	.L64
 921              	.L20:
 724:Src/RFM69.c   ****       break;
 922              		.loc 1 724 7 view .LVU234
 923 03e4 4148     		ldr	r0, .L118+28
 924 03e6 FFF7FEFF 		bl	debug_printf
 925              	.LVL126:
 725:Src/RFM69.c   ****     }
 926              		.loc 1 725 7 view .LVU235
 927 03ea 5EE6     		b	.L17
 928              	.L18:
 929              	.LBB7:
 729:Src/RFM69.c   ****       debug_printf("Resolution of Listen mode Idle time (calibrated RC osc):\r\nListenResolIdle : "
 930              		.loc 1 729 7 view .LVU236
 730:Src/RFM69.c   ****       val = regVal >> 6;
 931              		.loc 1 730 7 view .LVU237
 932 03ec 4048     		ldr	r0, .L118+32
 933 03ee FFF7FEFF 		bl	debug_printf
 934              	.LVL127:
 731:Src/RFM69.c   ****       if (val == 0b00) {
 935              		.loc 1 731 7 view .LVU238
 731:Src/RFM69.c   ****       if (val == 0b00) {
 936              		.loc 1 731 11 is_stmt 0 view .LVU239
 937 03f2 C5F38713 		ubfx	r3, r5, #6, #8
 938              	.LVL128:
 732:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 939              		.loc 1 732 7 is_stmt 1 view .LVU240
 732:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 940              		.loc 1 732 10 is_stmt 0 view .LVU241
 941 03f6 53B3     		cbz	r3, .L104
 734:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
 942              		.loc 1 734 14 is_stmt 1 view .LVU242
 734:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 36


 943              		.loc 1 734 17 is_stmt 0 view .LVU243
 944 03f8 012B     		cmp	r3, #1
 945 03fa 2CD0     		beq	.L105
 736:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 946              		.loc 1 736 14 is_stmt 1 view .LVU244
 736:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 947              		.loc 1 736 17 is_stmt 0 view .LVU245
 948 03fc 022B     		cmp	r3, #2
 949 03fe 2ED0     		beq	.L106
 738:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 950              		.loc 1 738 14 is_stmt 1 view .LVU246
 738:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 951              		.loc 1 738 17 is_stmt 0 view .LVU247
 952 0400 032B     		cmp	r3, #3
 953 0402 30D0     		beq	.L107
 954              	.LVL129:
 955              	.L66:
 742:Src/RFM69.c   ****       val = (regVal >> 4) & 0x3;
 956              		.loc 1 742 7 is_stmt 1 view .LVU248
 957 0404 3B48     		ldr	r0, .L118+36
 958 0406 FFF7FEFF 		bl	debug_printf
 959              	.LVL130:
 743:Src/RFM69.c   ****       if (val == 0b00) {
 960              		.loc 1 743 7 view .LVU249
 743:Src/RFM69.c   ****       if (val == 0b00) {
 961              		.loc 1 743 11 is_stmt 0 view .LVU250
 962 040a C5F30113 		ubfx	r3, r5, #4, #2
 963              	.LVL131:
 744:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 964              		.loc 1 744 7 is_stmt 1 view .LVU251
 744:Src/RFM69.c   ****         debug_printf("00 -> reserved\r\n");
 965              		.loc 1 744 10 is_stmt 0 view .LVU252
 966 040e 73B3     		cbz	r3, .L108
 746:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
 967              		.loc 1 746 14 is_stmt 1 view .LVU253
 746:Src/RFM69.c   ****         debug_printf("01 -> 64 us\r\n");
 968              		.loc 1 746 17 is_stmt 0 view .LVU254
 969 0410 012B     		cmp	r3, #1
 970 0412 30D0     		beq	.L109
 748:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 971              		.loc 1 748 14 is_stmt 1 view .LVU255
 748:Src/RFM69.c   ****         debug_printf("10 -> 4.1 ms\r\n");
 972              		.loc 1 748 17 is_stmt 0 view .LVU256
 973 0414 022B     		cmp	r3, #2
 974 0416 32D0     		beq	.L110
 750:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 975              		.loc 1 750 14 is_stmt 1 view .LVU257
 750:Src/RFM69.c   ****         debug_printf("11 -> 262 ms\r\n");
 976              		.loc 1 750 17 is_stmt 0 view .LVU258
 977 0418 032B     		cmp	r3, #3
 978 041a 34D0     		beq	.L111
 979              	.LVL132:
 980              	.L70:
 754:Src/RFM69.c   ****       if (0x8 & regVal) {
 981              		.loc 1 754 7 is_stmt 1 view .LVU259
 982 041c 3648     		ldr	r0, .L118+40
 983 041e FFF7FEFF 		bl	debug_printf
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 37


 984              	.LVL133:
 755:Src/RFM69.c   ****         debug_printf("1 -> signal strength is above RssiThreshold and "
 985              		.loc 1 755 7 view .LVU260
 755:Src/RFM69.c   ****         debug_printf("1 -> signal strength is above RssiThreshold and "
 986              		.loc 1 755 10 is_stmt 0 view .LVU261
 987 0422 15F0080F 		tst	r5, #8
 988 0426 32D0     		beq	.L73
 756:Src/RFM69.c   ****                     "SyncAddress matched\r\n");
 989              		.loc 1 756 9 is_stmt 1 view .LVU262
 990 0428 3448     		ldr	r0, .L118+44
 991 042a FFF7FEFF 		bl	debug_printf
 992              	.LVL134:
 993              	.L74:
 762:Src/RFM69.c   ****       val = (regVal >> 1) & 0x3;
 994              		.loc 1 762 7 view .LVU263
 995 042e 3448     		ldr	r0, .L118+48
 996 0430 FFF7FEFF 		bl	debug_printf
 997              	.LVL135:
 763:Src/RFM69.c   ****       if (val == 0b00) {
 998              		.loc 1 763 7 view .LVU264
 763:Src/RFM69.c   ****       if (val == 0b00) {
 999              		.loc 1 763 11 is_stmt 0 view .LVU265
 1000 0434 C5F34105 		ubfx	r5, r5, #1, #2
 1001              	.LVL136:
 764:Src/RFM69.c   ****         debug_printf("00 -> chip stays in Rx mode. Listen mode stops and must be disabled (see sect
 1002              		.loc 1 764 7 is_stmt 1 view .LVU266
 764:Src/RFM69.c   ****         debug_printf("00 -> chip stays in Rx mode. Listen mode stops and must be disabled (see sect
 1003              		.loc 1 764 10 is_stmt 0 view .LVU267
 1004 0438 6DB3     		cbz	r5, .L112
 766:Src/RFM69.c   ****         debug_printf(
 1005              		.loc 1 766 14 is_stmt 1 view .LVU268
 766:Src/RFM69.c   ****         debug_printf(
 1006              		.loc 1 766 17 is_stmt 0 view .LVU269
 1007 043a 012D     		cmp	r5, #1
 1008 043c 2FD0     		beq	.L113
 771:Src/RFM69.c   ****         debug_printf("10 -> chip stays in Rx mode until PayloadReady or Timeout "
 1009              		.loc 1 771 14 is_stmt 1 view .LVU270
 771:Src/RFM69.c   ****         debug_printf("10 -> chip stays in Rx mode until PayloadReady or Timeout "
 1010              		.loc 1 771 17 is_stmt 0 view .LVU271
 1011 043e 022D     		cmp	r5, #2
 1012 0440 31D0     		beq	.L114
 775:Src/RFM69.c   ****         debug_printf("11 -> Reserved\r\n");
 1013              		.loc 1 775 14 is_stmt 1 view .LVU272
 775:Src/RFM69.c   ****         debug_printf("11 -> Reserved\r\n");
 1014              		.loc 1 775 17 is_stmt 0 view .LVU273
 1015 0442 032D     		cmp	r5, #3
 1016 0444 33D0     		beq	.L115
 1017              	.L76:
 778:Src/RFM69.c   **** 
 1018              		.loc 1 778 7 is_stmt 1 view .LVU274
 1019 0446 2448     		ldr	r0, .L118+8
 1020 0448 FFF7FEFF 		bl	debug_printf
 1021              	.LVL137:
 781:Src/RFM69.c   ****     }
 1022              		.loc 1 781 7 view .LVU275
 1023 044c 2DE6     		b	.L17
 1024              	.LVL138:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 38


 1025              	.L104:
 733:Src/RFM69.c   ****       } else if (val == 0b01) {
 1026              		.loc 1 733 9 view .LVU276
 1027 044e 2D48     		ldr	r0, .L118+52
 1028 0450 FFF7FEFF 		bl	debug_printf
 1029              	.LVL139:
 733:Src/RFM69.c   ****       } else if (val == 0b01) {
 1030              		.loc 1 733 9 is_stmt 0 view .LVU277
 1031 0454 D6E7     		b	.L66
 1032              	.LVL140:
 1033              	.L105:
 735:Src/RFM69.c   ****       } else if (val == 0b10) {
 1034              		.loc 1 735 9 is_stmt 1 view .LVU278
 1035 0456 2C48     		ldr	r0, .L118+56
 1036 0458 FFF7FEFF 		bl	debug_printf
 1037              	.LVL141:
 735:Src/RFM69.c   ****       } else if (val == 0b10) {
 1038              		.loc 1 735 9 is_stmt 0 view .LVU279
 1039 045c D2E7     		b	.L66
 1040              	.LVL142:
 1041              	.L106:
 737:Src/RFM69.c   ****       } else if (val == 0b11) {
 1042              		.loc 1 737 9 is_stmt 1 view .LVU280
 1043 045e 2B48     		ldr	r0, .L118+60
 1044 0460 FFF7FEFF 		bl	debug_printf
 1045              	.LVL143:
 737:Src/RFM69.c   ****       } else if (val == 0b11) {
 1046              		.loc 1 737 9 is_stmt 0 view .LVU281
 1047 0464 CEE7     		b	.L66
 1048              	.LVL144:
 1049              	.L107:
 739:Src/RFM69.c   ****       }
 1050              		.loc 1 739 9 is_stmt 1 view .LVU282
 1051 0466 2A48     		ldr	r0, .L118+64
 1052 0468 FFF7FEFF 		bl	debug_printf
 1053              	.LVL145:
 739:Src/RFM69.c   ****       }
 1054              		.loc 1 739 9 is_stmt 0 view .LVU283
 1055 046c CAE7     		b	.L66
 1056              	.LVL146:
 1057              	.L108:
 745:Src/RFM69.c   ****       } else if (val == 0b01) {
 1058              		.loc 1 745 9 is_stmt 1 view .LVU284
 1059 046e 2548     		ldr	r0, .L118+52
 1060 0470 FFF7FEFF 		bl	debug_printf
 1061              	.LVL147:
 745:Src/RFM69.c   ****       } else if (val == 0b01) {
 1062              		.loc 1 745 9 is_stmt 0 view .LVU285
 1063 0474 D2E7     		b	.L70
 1064              	.LVL148:
 1065              	.L109:
 747:Src/RFM69.c   ****       } else if (val == 0b10) {
 1066              		.loc 1 747 9 is_stmt 1 view .LVU286
 1067 0476 2448     		ldr	r0, .L118+56
 1068 0478 FFF7FEFF 		bl	debug_printf
 1069              	.LVL149:
 747:Src/RFM69.c   ****       } else if (val == 0b10) {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 39


 1070              		.loc 1 747 9 is_stmt 0 view .LVU287
 1071 047c CEE7     		b	.L70
 1072              	.LVL150:
 1073              	.L110:
 749:Src/RFM69.c   ****       } else if (val == 0b11) {
 1074              		.loc 1 749 9 is_stmt 1 view .LVU288
 1075 047e 2348     		ldr	r0, .L118+60
 1076 0480 FFF7FEFF 		bl	debug_printf
 1077              	.LVL151:
 749:Src/RFM69.c   ****       } else if (val == 0b11) {
 1078              		.loc 1 749 9 is_stmt 0 view .LVU289
 1079 0484 CAE7     		b	.L70
 1080              	.LVL152:
 1081              	.L111:
 751:Src/RFM69.c   ****       }
 1082              		.loc 1 751 9 is_stmt 1 view .LVU290
 1083 0486 2248     		ldr	r0, .L118+64
 1084 0488 FFF7FEFF 		bl	debug_printf
 1085              	.LVL153:
 751:Src/RFM69.c   ****       }
 1086              		.loc 1 751 9 is_stmt 0 view .LVU291
 1087 048c C6E7     		b	.L70
 1088              	.L73:
 759:Src/RFM69.c   ****       }
 1089              		.loc 1 759 9 is_stmt 1 view .LVU292
 1090 048e 2148     		ldr	r0, .L118+68
 1091 0490 FFF7FEFF 		bl	debug_printf
 1092              	.LVL154:
 1093 0494 CBE7     		b	.L74
 1094              	.LVL155:
 1095              	.L112:
 765:Src/RFM69.c   ****       } else if (val == 0b01) {
 1096              		.loc 1 765 9 view .LVU293
 1097 0496 2048     		ldr	r0, .L118+72
 1098 0498 FFF7FEFF 		bl	debug_printf
 1099              	.LVL156:
 1100 049c D3E7     		b	.L76
 1101              	.L113:
 767:Src/RFM69.c   ****             "01 -> chip stays in Rx mode until PayloadReady or Timeout \r\n"
 1102              		.loc 1 767 9 view .LVU294
 1103 049e 1F48     		ldr	r0, .L118+76
 1104 04a0 FFF7FEFF 		bl	debug_printf
 1105              	.LVL157:
 1106 04a4 CFE7     		b	.L76
 1107              	.L114:
 772:Src/RFM69.c   ****                     "occurs.  Listen mode then resumes in Idle state.  FIFO "
 1108              		.loc 1 772 9 view .LVU295
 1109 04a6 1E48     		ldr	r0, .L118+80
 1110 04a8 FFF7FEFF 		bl	debug_printf
 1111              	.LVL158:
 1112 04ac CBE7     		b	.L76
 1113              	.L115:
 776:Src/RFM69.c   ****       }
 1114              		.loc 1 776 9 view .LVU296
 1115 04ae 1D48     		ldr	r0, .L118+84
 1116 04b0 FFF7FEFF 		bl	debug_printf
 1117              	.LVL159:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 40


 1118 04b4 C7E7     		b	.L76
 1119              	.LVL160:
 1120              	.L88:
 776:Src/RFM69.c   ****       }
 1121              		.loc 1 776 9 is_stmt 0 view .LVU297
 1122              	.LBE7:
 789:Src/RFM69.c   ****   debug_printf("\r\n");
 1123              		.loc 1 789 3 is_stmt 1 view .LVU298
 1124 04b6 FFF7FEFF 		bl	RFM69_unselect
 1125              	.LVL161:
 790:Src/RFM69.c   ****   debug_printf("\r\n");
 1126              		.loc 1 790 3 view .LVU299
 1127 04ba 074C     		ldr	r4, .L118+8
 1128              	.LVL162:
 790:Src/RFM69.c   ****   debug_printf("\r\n");
 1129              		.loc 1 790 3 is_stmt 0 view .LVU300
 1130 04bc 2046     		mov	r0, r4
 1131 04be FFF7FEFF 		bl	debug_printf
 1132              	.LVL163:
 791:Src/RFM69.c   **** }
 1133              		.loc 1 791 3 is_stmt 1 view .LVU301
 1134 04c2 2046     		mov	r0, r4
 1135 04c4 FFF7FEFF 		bl	debug_printf
 1136              	.LVL164:
 792:Src/RFM69.c   **** 
 1137              		.loc 1 792 1 is_stmt 0 view .LVU302
 1138 04c8 25B0     		add	sp, sp, #148
 1139              	.LCFI4:
 1140              		.cfi_def_cfa_offset 28
 1141              	.LVL165:
 792:Src/RFM69.c   **** 
 1142              		.loc 1 792 1 view .LVU303
 1143              		@ sp needed
 1144 04ca BDE87087 		pop	{r4, r5, r6, r8, r9, r10, pc}
 1145              	.LVL166:
 1146              	.L119:
 792:Src/RFM69.c   **** 
 1147              		.loc 1 792 1 view .LVU304
 1148 04ce 00BF     		.align	2
 1149              	.L118:
 1150 04d0 F4050000 		.word	.LC44
 1151 04d4 24060000 		.word	.LC45
 1152 04d8 00000000 		.word	.LC0
 1153 04dc 44060000 		.word	.LC46
 1154 04e0 6C060000 		.word	.LC47
 1155 04e4 E8060000 		.word	.LC48
 1156 04e8 04070000 		.word	.LC49
 1157 04ec 20070000 		.word	.LC50
 1158 04f0 2C070000 		.word	.LC51
 1159 04f4 C0070000 		.word	.LC56
 1160 04f8 0C080000 		.word	.LC57
 1161 04fc 50080000 		.word	.LC58
 1162 0500 C8080000 		.word	.LC60
 1163 0504 7C070000 		.word	.LC52
 1164 0508 90070000 		.word	.LC53
 1165 050c A0070000 		.word	.LC54
 1166 0510 B0070000 		.word	.LC55
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 41


 1167 0514 98080000 		.word	.LC59
 1168 0518 14090000 		.word	.LC61
 1169 051c 6C090000 		.word	.LC62
 1170 0520 240A0000 		.word	.LC63
 1171 0524 BC0A0000 		.word	.LC64
 1172              		.cfi_endproc
 1173              	.LFE149:
 1175              		.section	.text.RFM69_readReg,"ax",%progbits
 1176              		.align	1
 1177              		.global	RFM69_readReg
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	RFM69_readReg:
 1184              	.LVL167:
 1185              	.LFB152:
 809:Src/RFM69.c   ****   uint8_t regval;
 1186              		.loc 1 809 1 is_stmt 1 view -0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 809:Src/RFM69.c   ****   uint8_t regval;
 1190              		.loc 1 809 1 is_stmt 0 view .LVU306
 1191 0000 10B5     		push	{r4, lr}
 1192              	.LCFI5:
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 4, -8
 1195              		.cfi_offset 14, -4
 1196 0002 0446     		mov	r4, r0
 810:Src/RFM69.c   ****   RFM69_select();
 1197              		.loc 1 810 3 is_stmt 1 view .LVU307
 811:Src/RFM69.c   ****   SPI_transfer8(addr & 0x7F);
 1198              		.loc 1 811 3 view .LVU308
 1199 0004 FFF7FEFF 		bl	RFM69_select
 1200              	.LVL168:
 812:Src/RFM69.c   ****   regval = SPI_transfer8(0);
 1201              		.loc 1 812 3 view .LVU309
 1202 0008 04F07F00 		and	r0, r4, #127
 1203 000c FFF7FEFF 		bl	SPI_transfer8
 1204              	.LVL169:
 813:Src/RFM69.c   ****   RFM69_unselect();
 1205              		.loc 1 813 3 view .LVU310
 813:Src/RFM69.c   ****   RFM69_unselect();
 1206              		.loc 1 813 12 is_stmt 0 view .LVU311
 1207 0010 0020     		movs	r0, #0
 1208 0012 FFF7FEFF 		bl	SPI_transfer8
 1209              	.LVL170:
 1210 0016 0446     		mov	r4, r0
 1211              	.LVL171:
 814:Src/RFM69.c   ****   return regval;
 1212              		.loc 1 814 3 is_stmt 1 view .LVU312
 1213 0018 FFF7FEFF 		bl	RFM69_unselect
 1214              	.LVL172:
 815:Src/RFM69.c   **** }
 1215              		.loc 1 815 3 view .LVU313
 816:Src/RFM69.c   **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 42


 1216              		.loc 1 816 1 is_stmt 0 view .LVU314
 1217 001c 2046     		mov	r0, r4
 1218 001e 10BD     		pop	{r4, pc}
 816:Src/RFM69.c   **** 
 1219              		.loc 1 816 1 view .LVU315
 1220              		.cfi_endproc
 1221              	.LFE152:
 1223              		.global	__aeabi_ui2d
 1224              		.global	__aeabi_dmul
 1225              		.global	__aeabi_d2uiz
 1226              		.section	.text.RFM69_getFrequency,"ax",%progbits
 1227              		.align	1
 1228              		.global	RFM69_getFrequency
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu fpv4-sp-d16
 1234              	RFM69_getFrequency:
 1235              	.LFB127:
 152:Src/RFM69.c   ****   return RF69_FSTEP * (((uint32_t) RFM69_readReg(REG_FRFMSB) << 16) + ((uint16_t) RFM69_readReg(REG
 1236              		.loc 1 152 1 is_stmt 1 view -0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240 0000 10B5     		push	{r4, lr}
 1241              	.LCFI6:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 4, -8
 1244              		.cfi_offset 14, -4
 153:Src/RFM69.c   **** }
 1245              		.loc 1 153 3 view .LVU317
 153:Src/RFM69.c   **** }
 1246              		.loc 1 153 36 is_stmt 0 view .LVU318
 1247 0002 0720     		movs	r0, #7
 1248 0004 FFF7FEFF 		bl	RFM69_readReg
 1249              	.LVL173:
 153:Src/RFM69.c   **** }
 1250              		.loc 1 153 62 view .LVU319
 1251 0008 0404     		lsls	r4, r0, #16
 153:Src/RFM69.c   **** }
 1252              		.loc 1 153 83 view .LVU320
 1253 000a 0820     		movs	r0, #8
 1254 000c FFF7FEFF 		bl	RFM69_readReg
 1255              	.LVL174:
 153:Src/RFM69.c   **** }
 1256              		.loc 1 153 69 view .LVU321
 1257 0010 04EB0024 		add	r4, r4, r0, lsl #8
 153:Src/RFM69.c   **** }
 1258              		.loc 1 153 117 view .LVU322
 1259 0014 0920     		movs	r0, #9
 1260 0016 FFF7FEFF 		bl	RFM69_readReg
 1261              	.LVL175:
 153:Src/RFM69.c   **** }
 1262              		.loc 1 153 21 view .LVU323
 1263 001a 2044     		add	r0, r0, r4
 1264 001c FFF7FEFF 		bl	__aeabi_ui2d
 1265              	.LVL176:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 43


 1266 0020 03A3     		adr	r3, .L124
 1267 0022 D3E90023 		ldrd	r2, [r3]
 1268 0026 FFF7FEFF 		bl	__aeabi_dmul
 1269              	.LVL177:
 1270 002a FFF7FEFF 		bl	__aeabi_d2uiz
 1271              	.LVL178:
 154:Src/RFM69.c   **** 
 1272              		.loc 1 154 1 view .LVU324
 1273 002e 10BD     		pop	{r4, pc}
 1274              	.L125:
 1275              		.align	3
 1276              	.L124:
 1277 0030 00000000 		.word	0
 1278 0034 80844E40 		.word	1078887552
 1279              		.cfi_endproc
 1280              	.LFE127:
 1282              		.section	.text.RFM69_writeReg,"ax",%progbits
 1283              		.align	1
 1284              		.global	RFM69_writeReg
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	RFM69_writeReg:
 1291              	.LVL179:
 1292              	.LFB153:
 819:Src/RFM69.c   ****   RFM69_select();
 1293              		.loc 1 819 1 is_stmt 1 view -0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 819:Src/RFM69.c   ****   RFM69_select();
 1297              		.loc 1 819 1 is_stmt 0 view .LVU326
 1298 0000 38B5     		push	{r3, r4, r5, lr}
 1299              	.LCFI7:
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 3, -16
 1302              		.cfi_offset 4, -12
 1303              		.cfi_offset 5, -8
 1304              		.cfi_offset 14, -4
 1305 0002 0546     		mov	r5, r0
 1306 0004 0C46     		mov	r4, r1
 820:Src/RFM69.c   ****   SPI_transfer8(addr | 0x80);
 1307              		.loc 1 820 3 is_stmt 1 view .LVU327
 1308 0006 FFF7FEFF 		bl	RFM69_select
 1309              	.LVL180:
 821:Src/RFM69.c   ****   SPI_transfer8(value);
 1310              		.loc 1 821 3 view .LVU328
 1311 000a 45F08000 		orr	r0, r5, #128
 1312 000e FFF7FEFF 		bl	SPI_transfer8
 1313              	.LVL181:
 822:Src/RFM69.c   ****   RFM69_unselect();
 1314              		.loc 1 822 3 view .LVU329
 1315 0012 2046     		mov	r0, r4
 1316 0014 FFF7FEFF 		bl	SPI_transfer8
 1317              	.LVL182:
 823:Src/RFM69.c   **** }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 44


 1318              		.loc 1 823 3 view .LVU330
 1319 0018 FFF7FEFF 		bl	RFM69_unselect
 1320              	.LVL183:
 824:Src/RFM69.c   **** 
 1321              		.loc 1 824 1 is_stmt 0 view .LVU331
 1322 001c 38BD     		pop	{r3, r4, r5, pc}
 1323              		.cfi_endproc
 1324              	.LFE153:
 1326              		.section	.text.RFM69_setMode,"ax",%progbits
 1327              		.align	1
 1328              		.global	RFM69_setMode
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv4-sp-d16
 1334              	RFM69_setMode:
 1335              	.LVL184:
 1336              	.LFB129:
 174:Src/RFM69.c   ****   if (newMode == _mode)
 1337              		.loc 1 174 1 is_stmt 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 175:Src/RFM69.c   ****     return;
 1341              		.loc 1 175 3 view .LVU333
 175:Src/RFM69.c   ****     return;
 1342              		.loc 1 175 15 is_stmt 0 view .LVU334
 1343 0000 2C4B     		ldr	r3, .L143
 1344 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175:Src/RFM69.c   ****     return;
 1345              		.loc 1 175 6 view .LVU335
 1346 0004 8342     		cmp	r3, r0
 1347 0006 54D0     		beq	.L140
 174:Src/RFM69.c   ****   if (newMode == _mode)
 1348              		.loc 1 174 1 view .LVU336
 1349 0008 10B5     		push	{r4, lr}
 1350              	.LCFI8:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 4, -8
 1353              		.cfi_offset 14, -4
 1354 000a 0446     		mov	r4, r0
 178:Src/RFM69.c   ****     case RF69_MODE_TX:
 1355              		.loc 1 178 3 is_stmt 1 view .LVU337
 1356 000c 0428     		cmp	r0, #4
 1357 000e 1CD8     		bhi	.L128
 1358 0010 DFE800F0 		tbb	[pc, r0]
 1359              	.L131:
 1360 0014 46       		.byte	(.L135-.L131)/2
 1361 0015 38       		.byte	(.L134-.L131)/2
 1362 0016 2A       		.byte	(.L133-.L131)/2
 1363 0017 1C       		.byte	(.L132-.L131)/2
 1364 0018 03       		.byte	(.L130-.L131)/2
 1365 0019 00       		.p2align 1
 1366              	.L130:
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 1367              		.loc 1 180 7 view .LVU338
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 45


 1368              		.loc 1 180 35 is_stmt 0 view .LVU339
 1369 001a 0120     		movs	r0, #1
 1370              	.LVL185:
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 1371              		.loc 1 180 35 view .LVU340
 1372 001c FFF7FEFF 		bl	RFM69_readReg
 1373              	.LVL186:
 1374 0020 41B2     		sxtb	r1, r0
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 1375              		.loc 1 180 61 view .LVU341
 1376 0022 21F01C01 		bic	r1, r1, #28
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 1377              		.loc 1 180 69 view .LVU342
 1378 0026 41F00C01 		orr	r1, r1, #12
 180:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(true);
 1379              		.loc 1 180 7 view .LVU343
 1380 002a 01F0EF01 		and	r1, r1, #239
 1381 002e 0120     		movs	r0, #1
 1382 0030 FFF7FEFF 		bl	RFM69_writeReg
 1383              	.LVL187:
 181:Src/RFM69.c   ****       break;
 1384              		.loc 1 181 7 is_stmt 1 view .LVU344
 182:Src/RFM69.c   ****     case RF69_MODE_RX:
 1385              		.loc 1 182 7 view .LVU345
 1386              	.L138:
 202:Src/RFM69.c   **** 
 1387              		.loc 1 202 102 discriminator 3 view .LVU346
 202:Src/RFM69.c   **** 
 1388              		.loc 1 202 16 is_stmt 0 discriminator 3 view .LVU347
 1389 0034 1F4B     		ldr	r3, .L143
 1390 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 202:Src/RFM69.c   **** 
 1391              		.loc 1 202 9 discriminator 3 view .LVU348
 1392 0038 2BB9     		cbnz	r3, .L137
 202:Src/RFM69.c   **** 
 1393              		.loc 1 202 39 discriminator 2 view .LVU349
 1394 003a 2720     		movs	r0, #39
 1395 003c FFF7FEFF 		bl	RFM69_readReg
 1396              	.LVL188:
 202:Src/RFM69.c   **** 
 1397              		.loc 1 202 35 discriminator 2 view .LVU350
 1398 0040 10F0800F 		tst	r0, #128
 1399 0044 F6D0     		beq	.L138
 1400              	.L137:
 204:Src/RFM69.c   **** }
 1401              		.loc 1 204 3 is_stmt 1 view .LVU351
 204:Src/RFM69.c   **** }
 1402              		.loc 1 204 9 is_stmt 0 view .LVU352
 1403 0046 1B4B     		ldr	r3, .L143
 1404 0048 1C70     		strb	r4, [r3]
 1405              	.L128:
 205:Src/RFM69.c   **** 
 1406              		.loc 1 205 1 view .LVU353
 1407 004a 10BD     		pop	{r4, pc}
 1408              	.LVL189:
 1409              	.L132:
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 46


 1410              		.loc 1 184 7 is_stmt 1 view .LVU354
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 1411              		.loc 1 184 35 is_stmt 0 view .LVU355
 1412 004c 0120     		movs	r0, #1
 1413              	.LVL190:
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 1414              		.loc 1 184 35 view .LVU356
 1415 004e FFF7FEFF 		bl	RFM69_readReg
 1416              	.LVL191:
 1417 0052 41B2     		sxtb	r1, r0
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 1418              		.loc 1 184 61 view .LVU357
 1419 0054 21F01C01 		bic	r1, r1, #28
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 1420              		.loc 1 184 69 view .LVU358
 1421 0058 41F01001 		orr	r1, r1, #16
 184:Src/RFM69.c   ****       if (ISRFM69HW) RFM69_setHighPowerRegs(false);
 1422              		.loc 1 184 7 view .LVU359
 1423 005c 01F0F301 		and	r1, r1, #243
 1424 0060 0120     		movs	r0, #1
 1425 0062 FFF7FEFF 		bl	RFM69_writeReg
 1426              	.LVL192:
 185:Src/RFM69.c   ****       break;
 1427              		.loc 1 185 7 is_stmt 1 view .LVU360
 186:Src/RFM69.c   ****     case RF69_MODE_SYNTH:
 1428              		.loc 1 186 7 view .LVU361
 1429 0066 E5E7     		b	.L138
 1430              	.LVL193:
 1431              	.L133:
 188:Src/RFM69.c   ****       break;
 1432              		.loc 1 188 7 view .LVU362
 188:Src/RFM69.c   ****       break;
 1433              		.loc 1 188 35 is_stmt 0 view .LVU363
 1434 0068 0120     		movs	r0, #1
 1435              	.LVL194:
 188:Src/RFM69.c   ****       break;
 1436              		.loc 1 188 35 view .LVU364
 1437 006a FFF7FEFF 		bl	RFM69_readReg
 1438              	.LVL195:
 1439 006e 41B2     		sxtb	r1, r0
 188:Src/RFM69.c   ****       break;
 1440              		.loc 1 188 61 view .LVU365
 1441 0070 21F01C01 		bic	r1, r1, #28
 188:Src/RFM69.c   ****       break;
 1442              		.loc 1 188 69 view .LVU366
 1443 0074 41F00801 		orr	r1, r1, #8
 188:Src/RFM69.c   ****       break;
 1444              		.loc 1 188 7 view .LVU367
 1445 0078 01F0EB01 		and	r1, r1, #235
 1446 007c 0120     		movs	r0, #1
 1447 007e FFF7FEFF 		bl	RFM69_writeReg
 1448              	.LVL196:
 189:Src/RFM69.c   ****     case RF69_MODE_STANDBY:
 1449              		.loc 1 189 7 is_stmt 1 view .LVU368
 1450 0082 D7E7     		b	.L138
 1451              	.LVL197:
 1452              	.L134:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 47


 191:Src/RFM69.c   ****       break;
 1453              		.loc 1 191 7 view .LVU369
 191:Src/RFM69.c   ****       break;
 1454              		.loc 1 191 35 is_stmt 0 view .LVU370
 1455 0084 0120     		movs	r0, #1
 1456              	.LVL198:
 191:Src/RFM69.c   ****       break;
 1457              		.loc 1 191 35 view .LVU371
 1458 0086 FFF7FEFF 		bl	RFM69_readReg
 1459              	.LVL199:
 1460 008a 41B2     		sxtb	r1, r0
 191:Src/RFM69.c   ****       break;
 1461              		.loc 1 191 61 view .LVU372
 1462 008c 21F01C01 		bic	r1, r1, #28
 191:Src/RFM69.c   ****       break;
 1463              		.loc 1 191 69 view .LVU373
 1464 0090 41F00401 		orr	r1, r1, #4
 191:Src/RFM69.c   ****       break;
 1465              		.loc 1 191 7 view .LVU374
 1466 0094 01F0E701 		and	r1, r1, #231
 1467 0098 0120     		movs	r0, #1
 1468 009a FFF7FEFF 		bl	RFM69_writeReg
 1469              	.LVL200:
 192:Src/RFM69.c   ****     case RF69_MODE_SLEEP:
 1470              		.loc 1 192 7 is_stmt 1 view .LVU375
 1471 009e C9E7     		b	.L138
 1472              	.LVL201:
 1473              	.L135:
 194:Src/RFM69.c   ****       break;
 1474              		.loc 1 194 7 view .LVU376
 194:Src/RFM69.c   ****       break;
 1475              		.loc 1 194 35 is_stmt 0 view .LVU377
 1476 00a0 0120     		movs	r0, #1
 1477              	.LVL202:
 194:Src/RFM69.c   ****       break;
 1478              		.loc 1 194 35 view .LVU378
 1479 00a2 FFF7FEFF 		bl	RFM69_readReg
 1480              	.LVL203:
 194:Src/RFM69.c   ****       break;
 1481              		.loc 1 194 7 view .LVU379
 1482 00a6 00F0E301 		and	r1, r0, #227
 1483 00aa 0120     		movs	r0, #1
 1484 00ac FFF7FEFF 		bl	RFM69_writeReg
 1485              	.LVL204:
 195:Src/RFM69.c   ****     default:
 1486              		.loc 1 195 7 is_stmt 1 view .LVU380
 1487 00b0 C0E7     		b	.L138
 1488              	.LVL205:
 1489              	.L140:
 1490              	.LCFI9:
 1491              		.cfi_def_cfa_offset 0
 1492              		.cfi_restore 4
 1493              		.cfi_restore 14
 195:Src/RFM69.c   ****     default:
 1494              		.loc 1 195 7 is_stmt 0 view .LVU381
 1495 00b2 7047     		bx	lr
 1496              	.L144:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 48


 1497              		.align	2
 1498              	.L143:
 1499 00b4 00000000 		.word	.LANCHOR1
 1500              		.cfi_endproc
 1501              	.LFE129:
 1503              		.section	.text.RFM69_sleep,"ax",%progbits
 1504              		.align	1
 1505              		.global	RFM69_sleep
 1506              		.syntax unified
 1507              		.thumb
 1508              		.thumb_func
 1509              		.fpu fpv4-sp-d16
 1511              	RFM69_sleep:
 1512              	.LFB130:
 208:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_SLEEP);
 1513              		.loc 1 208 20 is_stmt 1 view -0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 1517 0000 08B5     		push	{r3, lr}
 1518              	.LCFI10:
 1519              		.cfi_def_cfa_offset 8
 1520              		.cfi_offset 3, -8
 1521              		.cfi_offset 14, -4
 209:Src/RFM69.c   **** }
 1522              		.loc 1 209 3 view .LVU383
 1523 0002 0020     		movs	r0, #0
 1524 0004 FFF7FEFF 		bl	RFM69_setMode
 1525              	.LVL206:
 210:Src/RFM69.c   **** 
 1526              		.loc 1 210 1 is_stmt 0 view .LVU384
 1527 0008 08BD     		pop	{r3, pc}
 1528              		.cfi_endproc
 1529              	.LFE130:
 1531              		.global	__aeabi_ddiv
 1532              		.section	.text.RFM69_setFrequency,"ax",%progbits
 1533              		.align	1
 1534              		.global	RFM69_setFrequency
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1538              		.fpu fpv4-sp-d16
 1540              	RFM69_setFrequency:
 1541              	.LVL207:
 1542              	.LFB128:
 158:Src/RFM69.c   ****   uint8_t oldMode = _mode;
 1543              		.loc 1 158 1 is_stmt 1 view -0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Src/RFM69.c   ****   uint8_t oldMode = _mode;
 1547              		.loc 1 158 1 is_stmt 0 view .LVU386
 1548 0000 38B5     		push	{r3, r4, r5, lr}
 1549              	.LCFI11:
 1550              		.cfi_def_cfa_offset 16
 1551              		.cfi_offset 3, -16
 1552              		.cfi_offset 4, -12
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 49


 1553              		.cfi_offset 5, -8
 1554              		.cfi_offset 14, -4
 1555 0002 0546     		mov	r5, r0
 159:Src/RFM69.c   ****   if (oldMode == RF69_MODE_TX) {
 1556              		.loc 1 159 3 is_stmt 1 view .LVU387
 159:Src/RFM69.c   ****   if (oldMode == RF69_MODE_TX) {
 1557              		.loc 1 159 11 is_stmt 0 view .LVU388
 1558 0004 184B     		ldr	r3, .L153+8
 1559 0006 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1560              	.LVL208:
 160:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_RX);
 1561              		.loc 1 160 3 is_stmt 1 view .LVU389
 160:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_RX);
 1562              		.loc 1 160 6 is_stmt 0 view .LVU390
 1563 0008 042C     		cmp	r4, #4
 1564 000a 1ED0     		beq	.L151
 1565              	.LVL209:
 1566              	.L148:
 163:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMSB, freqHz >> 16);
 1567              		.loc 1 163 3 is_stmt 1 view .LVU391
 163:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMSB, freqHz >> 16);
 1568              		.loc 1 163 10 is_stmt 0 view .LVU392
 1569 000c 2846     		mov	r0, r5
 1570 000e FFF7FEFF 		bl	__aeabi_ui2d
 1571              	.LVL210:
 1572 0012 13A3     		adr	r3, .L153
 1573 0014 D3E90023 		ldrd	r2, [r3]
 1574 0018 FFF7FEFF 		bl	__aeabi_ddiv
 1575              	.LVL211:
 1576 001c FFF7FEFF 		bl	__aeabi_d2uiz
 1577              	.LVL212:
 1578 0020 0546     		mov	r5, r0
 1579              	.LVL213:
 164:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMID, freqHz >> 8);
 1580              		.loc 1 164 3 is_stmt 1 view .LVU393
 1581 0022 C0F30741 		ubfx	r1, r0, #16, #8
 1582 0026 0720     		movs	r0, #7
 1583              	.LVL214:
 164:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFMID, freqHz >> 8);
 1584              		.loc 1 164 3 is_stmt 0 view .LVU394
 1585 0028 FFF7FEFF 		bl	RFM69_writeReg
 1586              	.LVL215:
 165:Src/RFM69.c   ****   RFM69_writeReg(REG_FRFLSB, freqHz);
 1587              		.loc 1 165 3 is_stmt 1 view .LVU395
 1588 002c C5F30721 		ubfx	r1, r5, #8, #8
 1589 0030 0820     		movs	r0, #8
 1590 0032 FFF7FEFF 		bl	RFM69_writeReg
 1591              	.LVL216:
 166:Src/RFM69.c   ****   if (oldMode == RF69_MODE_RX) {
 1592              		.loc 1 166 3 view .LVU396
 1593 0036 E9B2     		uxtb	r1, r5
 1594 0038 0920     		movs	r0, #9
 1595 003a FFF7FEFF 		bl	RFM69_writeReg
 1596              	.LVL217:
 167:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_SYNTH);
 1597              		.loc 1 167 3 view .LVU397
 167:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_SYNTH);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 50


 1598              		.loc 1 167 6 is_stmt 0 view .LVU398
 1599 003e 032C     		cmp	r4, #3
 1600 0040 07D0     		beq	.L152
 1601              	.L149:
 170:Src/RFM69.c   **** }
 1602              		.loc 1 170 3 is_stmt 1 view .LVU399
 1603 0042 2046     		mov	r0, r4
 1604 0044 FFF7FEFF 		bl	RFM69_setMode
 1605              	.LVL218:
 171:Src/RFM69.c   **** 
 1606              		.loc 1 171 1 is_stmt 0 view .LVU400
 1607 0048 38BD     		pop	{r3, r4, r5, pc}
 1608              	.LVL219:
 1609              	.L151:
 161:Src/RFM69.c   ****   }
 1610              		.loc 1 161 5 is_stmt 1 view .LVU401
 1611 004a 0320     		movs	r0, #3
 1612              	.LVL220:
 161:Src/RFM69.c   ****   }
 1613              		.loc 1 161 5 is_stmt 0 view .LVU402
 1614 004c FFF7FEFF 		bl	RFM69_setMode
 1615              	.LVL221:
 1616 0050 DCE7     		b	.L148
 1617              	.L152:
 168:Src/RFM69.c   ****   }
 1618              		.loc 1 168 5 is_stmt 1 view .LVU403
 1619 0052 0220     		movs	r0, #2
 1620 0054 FFF7FEFF 		bl	RFM69_setMode
 1621              	.LVL222:
 1622 0058 F3E7     		b	.L149
 1623              	.L154:
 1624 005a 00BFAFF3 		.align	3
 1624      0080
 1625              	.L153:
 1626 0060 00000000 		.word	0
 1627 0064 80844E40 		.word	1078887552
 1628 0068 00000000 		.word	.LANCHOR1
 1629              		.cfi_endproc
 1630              	.LFE128:
 1632              		.section	.text.RFM69_setAddress,"ax",%progbits
 1633              		.align	1
 1634              		.global	RFM69_setAddress
 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
 1638              		.fpu fpv4-sp-d16
 1640              	RFM69_setAddress:
 1641              	.LVL223:
 1642              	.LFB131:
 214:Src/RFM69.c   ****   _address = addr;
 1643              		.loc 1 214 1 view -0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 214:Src/RFM69.c   ****   _address = addr;
 1647              		.loc 1 214 1 is_stmt 0 view .LVU405
 1648 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 51


 1649              	.LCFI12:
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 3, -8
 1652              		.cfi_offset 14, -4
 1653 0002 0146     		mov	r1, r0
 215:Src/RFM69.c   ****   RFM69_writeReg(REG_NODEADRS, _address);
 1654              		.loc 1 215 3 is_stmt 1 view .LVU406
 215:Src/RFM69.c   ****   RFM69_writeReg(REG_NODEADRS, _address);
 1655              		.loc 1 215 12 is_stmt 0 view .LVU407
 1656 0004 024B     		ldr	r3, .L157
 1657 0006 1870     		strb	r0, [r3]
 216:Src/RFM69.c   **** }
 1658              		.loc 1 216 3 is_stmt 1 view .LVU408
 1659 0008 3920     		movs	r0, #57
 1660              	.LVL224:
 216:Src/RFM69.c   **** }
 1661              		.loc 1 216 3 is_stmt 0 view .LVU409
 1662 000a FFF7FEFF 		bl	RFM69_writeReg
 1663              	.LVL225:
 217:Src/RFM69.c   **** 
 1664              		.loc 1 217 1 view .LVU410
 1665 000e 08BD     		pop	{r3, pc}
 1666              	.L158:
 1667              		.align	2
 1668              	.L157:
 1669 0010 00000000 		.word	_address
 1670              		.cfi_endproc
 1671              	.LFE131:
 1673              		.section	.text.RFM69_setNetwork,"ax",%progbits
 1674              		.align	1
 1675              		.global	RFM69_setNetwork
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1679              		.fpu fpv4-sp-d16
 1681              	RFM69_setNetwork:
 1682              	.LVL226:
 1683              	.LFB132:
 221:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE1, (uint8_t)(networkID & 0x00FF));
 1684              		.loc 1 221 1 is_stmt 1 view -0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 221:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE1, (uint8_t)(networkID & 0x00FF));
 1688              		.loc 1 221 1 is_stmt 0 view .LVU412
 1689 0000 10B5     		push	{r4, lr}
 1690              	.LCFI13:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 14, -4
 1694 0002 0446     		mov	r4, r0
 222:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE2, (uint8_t)(networkID >> 8));
 1695              		.loc 1 222 3 is_stmt 1 view .LVU413
 1696 0004 C1B2     		uxtb	r1, r0
 1697 0006 2F20     		movs	r0, #47
 1698              	.LVL227:
 222:Src/RFM69.c   ****   RFM69_writeReg(REG_SYNCVALUE2, (uint8_t)(networkID >> 8));
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 52


 1699              		.loc 1 222 3 is_stmt 0 view .LVU414
 1700 0008 FFF7FEFF 		bl	RFM69_writeReg
 1701              	.LVL228:
 223:Src/RFM69.c   **** }
 1702              		.loc 1 223 3 is_stmt 1 view .LVU415
 1703 000c 210A     		lsrs	r1, r4, #8
 1704 000e 3020     		movs	r0, #48
 1705 0010 FFF7FEFF 		bl	RFM69_writeReg
 1706              	.LVL229:
 224:Src/RFM69.c   **** 
 1707              		.loc 1 224 1 is_stmt 0 view .LVU416
 1708 0014 10BD     		pop	{r4, pc}
 1709              		.cfi_endproc
 1710              	.LFE132:
 1712              		.section	.text.RFM69_setPowerLevel,"ax",%progbits
 1713              		.align	1
 1714              		.global	RFM69_setPowerLevel
 1715              		.syntax unified
 1716              		.thumb
 1717              		.thumb_func
 1718              		.fpu fpv4-sp-d16
 1720              	RFM69_setPowerLevel:
 1721              	.LVL230:
 1722              	.LFB133:
 234:Src/RFM69.c   ****   _powerLevel = (powerLevel > 31 ? 31 : powerLevel);
 1723              		.loc 1 234 1 is_stmt 1 view -0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 234:Src/RFM69.c   ****   _powerLevel = (powerLevel > 31 ? 31 : powerLevel);
 1727              		.loc 1 234 1 is_stmt 0 view .LVU418
 1728 0000 10B5     		push	{r4, lr}
 1729              	.LCFI14:
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 4, -8
 1732              		.cfi_offset 14, -4
 235:Src/RFM69.c   ****   if (ISRFM69HW)
 1733              		.loc 1 235 3 is_stmt 1 view .LVU419
 235:Src/RFM69.c   ****   if (ISRFM69HW)
 1734              		.loc 1 235 39 is_stmt 0 view .LVU420
 1735 0002 1F28     		cmp	r0, #31
 1736 0004 28BF     		it	cs
 1737 0006 1F20     		movcs	r0, #31
 1738              	.LVL231:
 235:Src/RFM69.c   ****   if (ISRFM69HW)
 1739              		.loc 1 235 15 view .LVU421
 1740 0008 074C     		ldr	r4, .L163
 1741 000a 2070     		strb	r0, [r4]
 236:Src/RFM69.c   ****   {
 1742              		.loc 1 236 3 is_stmt 1 view .LVU422
 240:Src/RFM69.c   **** }
 1743              		.loc 1 240 3 view .LVU423
 240:Src/RFM69.c   **** }
 1744              		.loc 1 240 32 is_stmt 0 view .LVU424
 1745 000c 1120     		movs	r0, #17
 1746 000e FFF7FEFF 		bl	RFM69_readReg
 1747              	.LVL232:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 53


 1748 0012 41B2     		sxtb	r1, r0
 240:Src/RFM69.c   **** }
 1749              		.loc 1 240 59 view .LVU425
 1750 0014 21F01F01 		bic	r1, r1, #31
 240:Src/RFM69.c   **** }
 1751              		.loc 1 240 67 view .LVU426
 1752 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1753 001a 0143     		orrs	r1, r1, r0
 240:Src/RFM69.c   **** }
 1754              		.loc 1 240 3 view .LVU427
 1755 001c C9B2     		uxtb	r1, r1
 1756 001e 1120     		movs	r0, #17
 1757 0020 FFF7FEFF 		bl	RFM69_writeReg
 1758              	.LVL233:
 241:Src/RFM69.c   **** 
 1759              		.loc 1 241 1 view .LVU428
 1760 0024 10BD     		pop	{r4, pc}
 1761              	.L164:
 1762 0026 00BF     		.align	2
 1763              	.L163:
 1764 0028 00000000 		.word	.LANCHOR2
 1765              		.cfi_endproc
 1766              	.LFE133:
 1768              		.section	.text.RFM69_receiveBegin,"ax",%progbits
 1769              		.align	1
 1770              		.global	RFM69_receiveBegin
 1771              		.syntax unified
 1772              		.thumb
 1773              		.thumb_func
 1774              		.fpu fpv4-sp-d16
 1776              	RFM69_receiveBegin:
 1777              	.LFB142:
 399:Src/RFM69.c   ****   datalen = 0;
 1778              		.loc 1 399 1 is_stmt 1 view -0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782 0000 08B5     		push	{r3, lr}
 1783              	.LCFI15:
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 3, -8
 1786              		.cfi_offset 14, -4
 400:Src/RFM69.c   ****   senderID = 0;
 1787              		.loc 1 400 3 view .LVU430
 400:Src/RFM69.c   ****   senderID = 0;
 1788              		.loc 1 400 11 is_stmt 0 view .LVU431
 1789 0002 0023     		movs	r3, #0
 1790 0004 124A     		ldr	r2, .L169
 1791 0006 1370     		strb	r3, [r2]
 401:Src/RFM69.c   ****   targetID = 0;
 1792              		.loc 1 401 3 is_stmt 1 view .LVU432
 401:Src/RFM69.c   ****   targetID = 0;
 1793              		.loc 1 401 12 is_stmt 0 view .LVU433
 1794 0008 124A     		ldr	r2, .L169+4
 1795 000a 1370     		strb	r3, [r2]
 402:Src/RFM69.c   ****   payloadLen = 0;
 1796              		.loc 1 402 3 is_stmt 1 view .LVU434
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 54


 402:Src/RFM69.c   ****   payloadLen = 0;
 1797              		.loc 1 402 12 is_stmt 0 view .LVU435
 1798 000c 124A     		ldr	r2, .L169+8
 1799 000e 1370     		strb	r3, [r2]
 403:Src/RFM69.c   ****   ACK_Requested = 0;
 1800              		.loc 1 403 3 is_stmt 1 view .LVU436
 403:Src/RFM69.c   ****   ACK_Requested = 0;
 1801              		.loc 1 403 14 is_stmt 0 view .LVU437
 1802 0010 124A     		ldr	r2, .L169+12
 1803 0012 1370     		strb	r3, [r2]
 404:Src/RFM69.c   ****   ACK_RECEIVED = 0;
 1804              		.loc 1 404 3 is_stmt 1 view .LVU438
 404:Src/RFM69.c   ****   ACK_RECEIVED = 0;
 1805              		.loc 1 404 17 is_stmt 0 view .LVU439
 1806 0014 124A     		ldr	r2, .L169+16
 1807 0016 1370     		strb	r3, [r2]
 405:Src/RFM69.c   ****   rssi = 0;
 1808              		.loc 1 405 3 is_stmt 1 view .LVU440
 405:Src/RFM69.c   ****   rssi = 0;
 1809              		.loc 1 405 16 is_stmt 0 view .LVU441
 1810 0018 124A     		ldr	r2, .L169+20
 1811 001a 1370     		strb	r3, [r2]
 406:Src/RFM69.c   ****   if (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY)
 1812              		.loc 1 406 3 is_stmt 1 view .LVU442
 406:Src/RFM69.c   ****   if (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY)
 1813              		.loc 1 406 8 is_stmt 0 view .LVU443
 1814 001c 124A     		ldr	r2, .L169+24
 1815 001e 1380     		strh	r3, [r2]	@ movhi
 407:Src/RFM69.c   ****     RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXREST
 1816              		.loc 1 407 3 is_stmt 1 view .LVU444
 407:Src/RFM69.c   ****     RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXREST
 1817              		.loc 1 407 7 is_stmt 0 view .LVU445
 1818 0020 2820     		movs	r0, #40
 1819 0022 FFF7FEFF 		bl	RFM69_readReg
 1820              	.LVL234:
 407:Src/RFM69.c   ****     RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXREST
 1821              		.loc 1 407 6 view .LVU446
 1822 0026 10F0040F 		tst	r0, #4
 1823 002a 07D1     		bne	.L168
 1824              	.L166:
 409:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_RX);
 1825              		.loc 1 409 3 is_stmt 1 view .LVU447
 1826 002c 4021     		movs	r1, #64
 1827 002e 2520     		movs	r0, #37
 1828 0030 FFF7FEFF 		bl	RFM69_writeReg
 1829              	.LVL235:
 410:Src/RFM69.c   **** }
 1830              		.loc 1 410 3 view .LVU448
 1831 0034 0320     		movs	r0, #3
 1832 0036 FFF7FEFF 		bl	RFM69_setMode
 1833              	.LVL236:
 411:Src/RFM69.c   **** 
 1834              		.loc 1 411 1 is_stmt 0 view .LVU449
 1835 003a 08BD     		pop	{r3, pc}
 1836              	.L168:
 408:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01); // set DIO0 to "PAYLOADREADY" in receive
 1837              		.loc 1 408 5 is_stmt 1 view .LVU450
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 55


 408:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01); // set DIO0 to "PAYLOADREADY" in receive
 1838              		.loc 1 408 40 is_stmt 0 view .LVU451
 1839 003c 3D20     		movs	r0, #61
 1840 003e FFF7FEFF 		bl	RFM69_readReg
 1841              	.LVL237:
 408:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01); // set DIO0 to "PAYLOADREADY" in receive
 1842              		.loc 1 408 5 view .LVU452
 1843 0042 40F00401 		orr	r1, r0, #4
 1844 0046 C9B2     		uxtb	r1, r1
 1845 0048 3D20     		movs	r0, #61
 1846 004a FFF7FEFF 		bl	RFM69_writeReg
 1847              	.LVL238:
 1848 004e EDE7     		b	.L166
 1849              	.L170:
 1850              		.align	2
 1851              	.L169:
 1852 0050 00000000 		.word	datalen
 1853 0054 00000000 		.word	senderID
 1854 0058 00000000 		.word	targetID
 1855 005c 00000000 		.word	payloadLen
 1856 0060 00000000 		.word	ACK_Requested
 1857 0064 00000000 		.word	ACK_RECEIVED
 1858 0068 00000000 		.word	rssi
 1859              		.cfi_endproc
 1860              	.LFE142:
 1862              		.section	.text.RFM69_receiveDone,"ax",%progbits
 1863              		.align	1
 1864              		.global	RFM69_receiveDone
 1865              		.syntax unified
 1866              		.thumb
 1867              		.thumb_func
 1868              		.fpu fpv4-sp-d16
 1870              	RFM69_receiveDone:
 1871              	.LFB143:
 415:Src/RFM69.c   **** //ATOMIC_BLOCK(ATOMIC_FORCEON)
 1872              		.loc 1 415 1 is_stmt 1 view -0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876 0000 08B5     		push	{r3, lr}
 1877              	.LCFI16:
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 3, -8
 1880              		.cfi_offset 14, -4
 417:Src/RFM69.c   ****   if (_mode == RF69_MODE_RX && payloadLen > 0)
 1881              		.loc 1 417 3 view .LVU454
 1882 0002 FFF7FEFF 		bl	noInterrupts
 1883              	.LVL239:
 418:Src/RFM69.c   ****   {
 1884              		.loc 1 418 3 view .LVU455
 418:Src/RFM69.c   ****   {
 1885              		.loc 1 418 13 is_stmt 0 view .LVU456
 1886 0006 0B4B     		ldr	r3, .L178
 1887 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 418:Src/RFM69.c   ****   {
 1888              		.loc 1 418 6 view .LVU457
 1889 000a 032B     		cmp	r3, #3
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 56


 1890 000c 05D0     		beq	.L176
 1891              	.L172:
 423:Src/RFM69.c   ****   {
 1892              		.loc 1 423 8 is_stmt 1 view .LVU458
 423:Src/RFM69.c   ****   {
 1893              		.loc 1 423 11 is_stmt 0 view .LVU459
 1894 000e 032B     		cmp	r3, #3
 1895 0010 0CD0     		beq	.L177
 428:Src/RFM69.c   ****   return false;
 1896              		.loc 1 428 3 is_stmt 1 view .LVU460
 1897 0012 FFF7FEFF 		bl	RFM69_receiveBegin
 1898              	.LVL240:
 429:Src/RFM69.c   **** }
 1899              		.loc 1 429 3 view .LVU461
 429:Src/RFM69.c   **** }
 1900              		.loc 1 429 10 is_stmt 0 view .LVU462
 1901 0016 0020     		movs	r0, #0
 1902              	.L173:
 430:Src/RFM69.c   **** 
 1903              		.loc 1 430 1 view .LVU463
 1904 0018 08BD     		pop	{r3, pc}
 1905              	.L176:
 418:Src/RFM69.c   ****   {
 1906              		.loc 1 418 43 discriminator 1 view .LVU464
 1907 001a 074A     		ldr	r2, .L178+4
 1908 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 418:Src/RFM69.c   ****   {
 1909              		.loc 1 418 29 discriminator 1 view .LVU465
 1910 001e 002A     		cmp	r2, #0
 1911 0020 F5D0     		beq	.L172
 420:Src/RFM69.c   ****     return true;
 1912              		.loc 1 420 5 is_stmt 1 view .LVU466
 1913 0022 0120     		movs	r0, #1
 1914 0024 FFF7FEFF 		bl	RFM69_setMode
 1915              	.LVL241:
 421:Src/RFM69.c   ****   }
 1916              		.loc 1 421 5 view .LVU467
 421:Src/RFM69.c   ****   }
 1917              		.loc 1 421 12 is_stmt 0 view .LVU468
 1918 0028 0120     		movs	r0, #1
 1919 002a F5E7     		b	.L173
 1920              	.L177:
 425:Src/RFM69.c   ****     return false;
 1921              		.loc 1 425 5 is_stmt 1 view .LVU469
 1922 002c FFF7FEFF 		bl	interrupts
 1923              	.LVL242:
 426:Src/RFM69.c   ****   }
 1924              		.loc 1 426 5 view .LVU470
 426:Src/RFM69.c   ****   }
 1925              		.loc 1 426 12 is_stmt 0 view .LVU471
 1926 0030 0020     		movs	r0, #0
 1927 0032 F1E7     		b	.L173
 1928              	.L179:
 1929              		.align	2
 1930              	.L178:
 1931 0034 00000000 		.word	.LANCHOR1
 1932 0038 00000000 		.word	payloadLen
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 57


 1933              		.cfi_endproc
 1934              	.LFE143:
 1936              		.section	.text.RFM69_ACKReceived,"ax",%progbits
 1937              		.align	1
 1938              		.global	RFM69_ACKReceived
 1939              		.syntax unified
 1940              		.thumb
 1941              		.thumb_func
 1942              		.fpu fpv4-sp-d16
 1944              	RFM69_ACKReceived:
 1945              	.LVL243:
 1946              	.LFB137:
 288:Src/RFM69.c   ****   if (RFM69_receiveDone())
 1947              		.loc 1 288 1 is_stmt 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 288:Src/RFM69.c   ****   if (RFM69_receiveDone())
 1951              		.loc 1 288 1 is_stmt 0 view .LVU473
 1952 0000 10B5     		push	{r4, lr}
 1953              	.LCFI17:
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 4, -8
 1956              		.cfi_offset 14, -4
 1957 0002 0446     		mov	r4, r0
 289:Src/RFM69.c   ****     return (senderID == fromNodeID || fromNodeID == RF69_BROADCAST_ADDR) && ACK_RECEIVED;
 1958              		.loc 1 289 3 is_stmt 1 view .LVU474
 289:Src/RFM69.c   ****     return (senderID == fromNodeID || fromNodeID == RF69_BROADCAST_ADDR) && ACK_RECEIVED;
 1959              		.loc 1 289 7 is_stmt 0 view .LVU475
 1960 0004 FFF7FEFF 		bl	RFM69_receiveDone
 1961              	.LVL244:
 289:Src/RFM69.c   ****     return (senderID == fromNodeID || fromNodeID == RF69_BROADCAST_ADDR) && ACK_RECEIVED;
 1962              		.loc 1 289 6 view .LVU476
 1963 0008 0346     		mov	r3, r0
 1964 000a 08B9     		cbnz	r0, .L187
 1965              	.L181:
 292:Src/RFM69.c   **** 
 1966              		.loc 1 292 1 view .LVU477
 1967 000c 1846     		mov	r0, r3
 1968 000e 10BD     		pop	{r4, pc}
 1969              	.L187:
 290:Src/RFM69.c   ****   return false;
 1970              		.loc 1 290 5 is_stmt 1 view .LVU478
 290:Src/RFM69.c   ****   return false;
 1971              		.loc 1 290 22 is_stmt 0 view .LVU479
 1972 0010 064B     		ldr	r3, .L188
 1973 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 290:Src/RFM69.c   ****   return false;
 1974              		.loc 1 290 74 view .LVU480
 1975 0014 A342     		cmp	r3, r4
 1976 0016 03D0     		beq	.L182
 290:Src/RFM69.c   ****   return false;
 1977              		.loc 1 290 36 discriminator 2 view .LVU481
 1978 0018 FF2C     		cmp	r4, #255
 1979 001a 01D0     		beq	.L182
 290:Src/RFM69.c   ****   return false;
 1980              		.loc 1 290 74 view .LVU482
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 58


 1981 001c 0023     		movs	r3, #0
 1982 001e F5E7     		b	.L181
 1983              	.L182:
 290:Src/RFM69.c   ****   return false;
 1984              		.loc 1 290 74 discriminator 3 view .LVU483
 1985 0020 034B     		ldr	r3, .L188+4
 1986 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1987 0024 002B     		cmp	r3, #0
 1988 0026 F1D0     		beq	.L181
 290:Src/RFM69.c   ****   return false;
 1989              		.loc 1 290 74 view .LVU484
 1990 0028 0123     		movs	r3, #1
 1991 002a EFE7     		b	.L181
 1992              	.L189:
 1993              		.align	2
 1994              	.L188:
 1995 002c 00000000 		.word	senderID
 1996 0030 00000000 		.word	ACK_RECEIVED
 1997              		.cfi_endproc
 1998              	.LFE137:
 2000              		.section	.text.RFM69_readRSSI,"ax",%progbits
 2001              		.align	1
 2002              		.global	RFM69_readRSSI
 2003              		.syntax unified
 2004              		.thumb
 2005              		.thumb_func
 2006              		.fpu fpv4-sp-d16
 2008              	RFM69_readRSSI:
 2009              	.LVL245:
 2010              	.LFB145:
 450:Src/RFM69.c   ****   int16_t rssi = 0;
 2011              		.loc 1 450 43 is_stmt 1 view -0
 2012              		.cfi_startproc
 2013              		@ args = 0, pretend = 0, frame = 0
 2014              		@ frame_needed = 0, uses_anonymous_args = 0
 450:Src/RFM69.c   ****   int16_t rssi = 0;
 2015              		.loc 1 450 43 is_stmt 0 view .LVU486
 2016 0000 08B5     		push	{r3, lr}
 2017              	.LCFI18:
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 3, -8
 2020              		.cfi_offset 14, -4
 451:Src/RFM69.c   ****   if (forceTrigger)
 2021              		.loc 1 451 3 is_stmt 1 view .LVU487
 2022              	.LVL246:
 452:Src/RFM69.c   ****   {
 2023              		.loc 1 452 3 view .LVU488
 452:Src/RFM69.c   ****   {
 2024              		.loc 1 452 6 is_stmt 0 view .LVU489
 2025 0002 38B9     		cbnz	r0, .L194
 2026              	.LVL247:
 2027              	.L191:
 458:Src/RFM69.c   ****   rssi >>= 1;
 2028              		.loc 1 458 3 is_stmt 1 view .LVU490
 458:Src/RFM69.c   ****   rssi >>= 1;
 2029              		.loc 1 458 11 is_stmt 0 view .LVU491
 2030 0004 2420     		movs	r0, #36
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 59


 2031 0006 FFF7FEFF 		bl	RFM69_readReg
 2032              	.LVL248:
 2033 000a 80B2     		uxth	r0, r0
 458:Src/RFM69.c   ****   rssi >>= 1;
 2034              		.loc 1 458 8 view .LVU492
 2035 000c 4042     		rsbs	r0, r0, #0
 2036              	.LVL249:
 459:Src/RFM69.c   ****   return rssi;
 2037              		.loc 1 459 3 is_stmt 1 view .LVU493
 460:Src/RFM69.c   **** }
 2038              		.loc 1 460 3 view .LVU494
 461:Src/RFM69.c   **** 
 2039              		.loc 1 461 1 is_stmt 0 view .LVU495
 2040 000e 40F34E00 		sbfx	r0, r0, #1, #15
 2041              	.LVL250:
 461:Src/RFM69.c   **** 
 2042              		.loc 1 461 1 view .LVU496
 2043 0012 08BD     		pop	{r3, pc}
 2044              	.LVL251:
 2045              	.L194:
 455:Src/RFM69.c   ****     while ((RFM69_readReg(REG_RSSICONFIG) & RF_RSSI_DONE) == 0x00); // wait for RSSI_Ready
 2046              		.loc 1 455 5 is_stmt 1 view .LVU497
 2047 0014 0121     		movs	r1, #1
 2048 0016 2320     		movs	r0, #35
 2049              	.LVL252:
 455:Src/RFM69.c   ****     while ((RFM69_readReg(REG_RSSICONFIG) & RF_RSSI_DONE) == 0x00); // wait for RSSI_Ready
 2050              		.loc 1 455 5 is_stmt 0 view .LVU498
 2051 0018 FFF7FEFF 		bl	RFM69_writeReg
 2052              	.LVL253:
 456:Src/RFM69.c   ****   }
 2053              		.loc 1 456 5 is_stmt 1 view .LVU499
 2054              	.L192:
 456:Src/RFM69.c   ****   }
 2055              		.loc 1 456 67 discriminator 1 view .LVU500
 456:Src/RFM69.c   ****   }
 2056              		.loc 1 456 13 is_stmt 0 discriminator 1 view .LVU501
 2057 001c 2320     		movs	r0, #35
 2058 001e FFF7FEFF 		bl	RFM69_readReg
 2059              	.LVL254:
 456:Src/RFM69.c   ****   }
 2060              		.loc 1 456 11 discriminator 1 view .LVU502
 2061 0022 10F0020F 		tst	r0, #2
 2062 0026 F9D0     		beq	.L192
 2063 0028 ECE7     		b	.L191
 2064              		.cfi_endproc
 2065              	.LFE145:
 2067              		.section	.text.RFM69_canSend,"ax",%progbits
 2068              		.align	1
 2069              		.global	RFM69_canSend
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2073              		.fpu fpv4-sp-d16
 2075              	RFM69_canSend:
 2076              	.LFB134:
 244:Src/RFM69.c   ****   if (_mode == RF69_MODE_RX && payloadLen == 0 && RFM69_readRSSI(false) < CSMA_LIMIT) // if signal 
 2077              		.loc 1 244 1 is_stmt 1 view -0
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 60


 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081 0000 08B5     		push	{r3, lr}
 2082              	.LCFI19:
 2083              		.cfi_def_cfa_offset 8
 2084              		.cfi_offset 3, -8
 2085              		.cfi_offset 14, -4
 245:Src/RFM69.c   ****   {
 2086              		.loc 1 245 3 view .LVU504
 245:Src/RFM69.c   ****   {
 2087              		.loc 1 245 13 is_stmt 0 view .LVU505
 2088 0002 0C4B     		ldr	r3, .L204
 2089 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245:Src/RFM69.c   ****   {
 2090              		.loc 1 245 6 view .LVU506
 2091 0006 032B     		cmp	r3, #3
 2092 0008 01D0     		beq	.L201
 250:Src/RFM69.c   **** }
 2093              		.loc 1 250 10 view .LVU507
 2094 000a 0020     		movs	r0, #0
 2095              	.L196:
 251:Src/RFM69.c   **** 
 2096              		.loc 1 251 1 view .LVU508
 2097 000c 08BD     		pop	{r3, pc}
 2098              	.L201:
 245:Src/RFM69.c   ****   {
 2099              		.loc 1 245 43 discriminator 1 view .LVU509
 2100 000e 0A4B     		ldr	r3, .L204+4
 2101 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245:Src/RFM69.c   ****   {
 2102              		.loc 1 245 29 discriminator 1 view .LVU510
 2103 0012 0BB1     		cbz	r3, .L202
 250:Src/RFM69.c   **** }
 2104              		.loc 1 250 10 view .LVU511
 2105 0014 0020     		movs	r0, #0
 2106 0016 F9E7     		b	.L196
 2107              	.L202:
 245:Src/RFM69.c   ****   {
 2108              		.loc 1 245 51 discriminator 2 view .LVU512
 2109 0018 0020     		movs	r0, #0
 2110 001a FFF7FEFF 		bl	RFM69_readRSSI
 2111              	.LVL255:
 245:Src/RFM69.c   ****   {
 2112              		.loc 1 245 48 discriminator 2 view .LVU513
 2113 001e 10F15A0F 		cmn	r0, #90
 2114 0022 01DB     		blt	.L203
 250:Src/RFM69.c   **** }
 2115              		.loc 1 250 10 view .LVU514
 2116 0024 0020     		movs	r0, #0
 2117 0026 F1E7     		b	.L196
 2118              	.L203:
 247:Src/RFM69.c   ****     return true;
 2119              		.loc 1 247 5 is_stmt 1 view .LVU515
 2120 0028 0120     		movs	r0, #1
 2121 002a FFF7FEFF 		bl	RFM69_setMode
 2122              	.LVL256:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 61


 248:Src/RFM69.c   ****   }
 2123              		.loc 1 248 5 view .LVU516
 248:Src/RFM69.c   ****   }
 2124              		.loc 1 248 12 is_stmt 0 view .LVU517
 2125 002e 0120     		movs	r0, #1
 2126 0030 ECE7     		b	.L196
 2127              	.L205:
 2128 0032 00BF     		.align	2
 2129              	.L204:
 2130 0034 00000000 		.word	.LANCHOR1
 2131 0038 00000000 		.word	payloadLen
 2132              		.cfi_endproc
 2133              	.LFE134:
 2135              		.section	.text.RFM69_setHighPower,"ax",%progbits
 2136              		.align	1
 2137              		.global	RFM69_setHighPower
 2138              		.syntax unified
 2139              		.thumb
 2140              		.thumb_func
 2141              		.fpu fpv4-sp-d16
 2143              	RFM69_setHighPower:
 2144              	.LFB147:
 489:Src/RFM69.c   ****   RFM69_writeReg(REG_OCP, ISRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
 2145              		.loc 1 489 1 is_stmt 1 view -0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149 0000 08B5     		push	{r3, lr}
 2150              	.LCFI20:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 3, -8
 2153              		.cfi_offset 14, -4
 490:Src/RFM69.c   ****   #if (ISRFM69HW == 1) // turning ON
 2154              		.loc 1 490 3 view .LVU519
 2155 0002 1A21     		movs	r1, #26
 2156 0004 1320     		movs	r0, #19
 2157 0006 FFF7FEFF 		bl	RFM69_writeReg
 2158              	.LVL257:
 498:Src/RFM69.c   **** 
 2159              		.loc 1 498 1 is_stmt 0 view .LVU520
 2160 000a 08BD     		pop	{r3, pc}
 2161              		.cfi_endproc
 2162              	.LFE147:
 2164              		.section	.text.RFM69_setHighPowerRegs,"ax",%progbits
 2165              		.align	1
 2166              		.global	RFM69_setHighPowerRegs
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu fpv4-sp-d16
 2172              	RFM69_setHighPowerRegs:
 2173              	.LVL258:
 2174              	.LFB148:
 502:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA1, onOff ? 0x5D : 0x55);
 2175              		.loc 1 502 1 is_stmt 1 view -0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 62


 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 502:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA1, onOff ? 0x5D : 0x55);
 2179              		.loc 1 502 1 is_stmt 0 view .LVU522
 2180 0000 10B5     		push	{r4, lr}
 2181              	.LCFI21:
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 4, -8
 2184              		.cfi_offset 14, -4
 503:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 2185              		.loc 1 503 3 is_stmt 1 view .LVU523
 2186 0002 0446     		mov	r4, r0
 2187 0004 48B1     		cbz	r0, .L211
 2188 0006 5D21     		movs	r1, #93
 2189              	.L209:
 503:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 2190              		.loc 1 503 3 is_stmt 0 discriminator 4 view .LVU524
 2191 0008 5A20     		movs	r0, #90
 2192              	.LVL259:
 503:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 2193              		.loc 1 503 3 discriminator 4 view .LVU525
 2194 000a FFF7FEFF 		bl	RFM69_writeReg
 2195              	.LVL260:
 504:Src/RFM69.c   **** }
 2196              		.loc 1 504 3 is_stmt 1 discriminator 4 view .LVU526
 2197 000e 34B1     		cbz	r4, .L212
 504:Src/RFM69.c   **** }
 2198              		.loc 1 504 3 is_stmt 0 view .LVU527
 2199 0010 7C21     		movs	r1, #124
 2200              	.L210:
 504:Src/RFM69.c   **** }
 2201              		.loc 1 504 3 discriminator 4 view .LVU528
 2202 0012 5C20     		movs	r0, #92
 2203 0014 FFF7FEFF 		bl	RFM69_writeReg
 2204              	.LVL261:
 505:Src/RFM69.c   **** 
 2205              		.loc 1 505 1 discriminator 4 view .LVU529
 2206 0018 10BD     		pop	{r4, pc}
 2207              	.LVL262:
 2208              	.L211:
 503:Src/RFM69.c   ****   RFM69_writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
 2209              		.loc 1 503 3 view .LVU530
 2210 001a 5521     		movs	r1, #85
 2211 001c F4E7     		b	.L209
 2212              	.LVL263:
 2213              	.L212:
 504:Src/RFM69.c   **** }
 2214              		.loc 1 504 3 view .LVU531
 2215 001e 7021     		movs	r1, #112
 2216 0020 F7E7     		b	.L210
 2217              		.cfi_endproc
 2218              	.LFE148:
 2220              		.section	.text.RFM69_readTemperature,"ax",%progbits
 2221              		.align	1
 2222              		.global	RFM69_readTemperature
 2223              		.syntax unified
 2224              		.thumb
 2225              		.thumb_func
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 63


 2226              		.fpu fpv4-sp-d16
 2228              	RFM69_readTemperature:
 2229              	.LVL264:
 2230              	.LFB150:
 795:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 2231              		.loc 1 795 1 is_stmt 1 view -0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 2235              		.loc 1 795 1 is_stmt 0 view .LVU533
 2236 0000 10B5     		push	{r4, lr}
 2237              	.LCFI22:
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 4, -8
 2240              		.cfi_offset 14, -4
 2241 0002 0446     		mov	r4, r0
 796:Src/RFM69.c   ****   RFM69_writeReg(REG_TEMP1, RF_TEMP1_MEAS_START);
 2242              		.loc 1 796 3 is_stmt 1 view .LVU534
 2243 0004 0120     		movs	r0, #1
 2244              	.LVL265:
 796:Src/RFM69.c   ****   RFM69_writeReg(REG_TEMP1, RF_TEMP1_MEAS_START);
 2245              		.loc 1 796 3 is_stmt 0 view .LVU535
 2246 0006 FFF7FEFF 		bl	RFM69_setMode
 2247              	.LVL266:
 797:Src/RFM69.c   ****   while ((RFM69_readReg(REG_TEMP1) & RF_TEMP1_MEAS_RUNNING));
 2248              		.loc 1 797 3 is_stmt 1 view .LVU536
 2249 000a 0821     		movs	r1, #8
 2250 000c 4E20     		movs	r0, #78
 2251 000e FFF7FEFF 		bl	RFM69_writeReg
 2252              	.LVL267:
 798:Src/RFM69.c   ****   return ~RFM69_readReg(REG_TEMP2) + COURSE_TEMP_COEF + calFactor; // 'complement' corrects the slo
 2253              		.loc 1 798 3 view .LVU537
 2254              	.L215:
 798:Src/RFM69.c   ****   return ~RFM69_readReg(REG_TEMP2) + COURSE_TEMP_COEF + calFactor; // 'complement' corrects the slo
 2255              		.loc 1 798 61 discriminator 1 view .LVU538
 798:Src/RFM69.c   ****   return ~RFM69_readReg(REG_TEMP2) + COURSE_TEMP_COEF + calFactor; // 'complement' corrects the slo
 2256              		.loc 1 798 11 is_stmt 0 discriminator 1 view .LVU539
 2257 0012 4E20     		movs	r0, #78
 2258 0014 FFF7FEFF 		bl	RFM69_readReg
 2259              	.LVL268:
 798:Src/RFM69.c   ****   return ~RFM69_readReg(REG_TEMP2) + COURSE_TEMP_COEF + calFactor; // 'complement' corrects the slo
 2260              		.loc 1 798 9 discriminator 1 view .LVU540
 2261 0018 10F0040F 		tst	r0, #4
 2262 001c F9D1     		bne	.L215
 799:Src/RFM69.c   **** } // COURSE_TEMP_COEF puts reading in the ballpark, user can add additional correction
 2263              		.loc 1 799 3 is_stmt 1 view .LVU541
 799:Src/RFM69.c   **** } // COURSE_TEMP_COEF puts reading in the ballpark, user can add additional correction
 2264              		.loc 1 799 11 is_stmt 0 view .LVU542
 2265 001e 4F20     		movs	r0, #79
 2266 0020 FFF7FEFF 		bl	RFM69_readReg
 2267              	.LVL269:
 799:Src/RFM69.c   **** } // COURSE_TEMP_COEF puts reading in the ballpark, user can add additional correction
 2268              		.loc 1 799 55 view .LVU543
 2269 0024 201A     		subs	r0, r4, r0
 2270 0026 5B38     		subs	r0, r0, #91
 800:Src/RFM69.c   **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 64


 2271              		.loc 1 800 1 view .LVU544
 2272 0028 C0B2     		uxtb	r0, r0
 2273 002a 10BD     		pop	{r4, pc}
 2274              		.cfi_endproc
 2275              	.LFE150:
 2277              		.section	.text.RFM69_rcCalibration,"ax",%progbits
 2278              		.align	1
 2279              		.global	RFM69_rcCalibration
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv4-sp-d16
 2285              	RFM69_rcCalibration:
 2286              	.LFB151:
 803:Src/RFM69.c   ****   RFM69_writeReg(REG_OSC1, RF_OSC1_RCCAL_START);
 2287              		.loc 1 803 1 is_stmt 1 view -0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291 0000 08B5     		push	{r3, lr}
 2292              	.LCFI23:
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 3, -8
 2295              		.cfi_offset 14, -4
 804:Src/RFM69.c   ****   while ((RFM69_readReg(REG_OSC1) & RF_OSC1_RCCAL_DONE) == 0x00);
 2296              		.loc 1 804 3 view .LVU546
 2297 0002 8021     		movs	r1, #128
 2298 0004 0A20     		movs	r0, #10
 2299 0006 FFF7FEFF 		bl	RFM69_writeReg
 2300              	.LVL270:
 805:Src/RFM69.c   **** }
 2301              		.loc 1 805 3 view .LVU547
 2302              	.L218:
 805:Src/RFM69.c   **** }
 2303              		.loc 1 805 65 discriminator 1 view .LVU548
 805:Src/RFM69.c   **** }
 2304              		.loc 1 805 11 is_stmt 0 discriminator 1 view .LVU549
 2305 000a 0A20     		movs	r0, #10
 2306 000c FFF7FEFF 		bl	RFM69_readReg
 2307              	.LVL271:
 805:Src/RFM69.c   **** }
 2308              		.loc 1 805 9 discriminator 1 view .LVU550
 2309 0010 10F0400F 		tst	r0, #64
 2310 0014 F9D0     		beq	.L218
 806:Src/RFM69.c   **** 
 2311              		.loc 1 806 1 view .LVU551
 2312 0016 08BD     		pop	{r3, pc}
 2313              		.cfi_endproc
 2314              	.LFE151:
 2316              		.section	.text.RFM69_sendFrame,"ax",%progbits
 2317              		.align	1
 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2321              		.fpu fpv4-sp-d16
 2323              	RFM69_sendFrame:
 2324              	.LVL272:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 65


 2325              	.LFB140:
 319:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY); // turn off receiver to prevent reception while filling fifo
 2326              		.loc 1 319 1 is_stmt 1 view -0
 2327              		.cfi_startproc
 2328              		@ args = 4, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 319:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY); // turn off receiver to prevent reception while filling fifo
 2330              		.loc 1 319 1 is_stmt 0 view .LVU553
 2331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2332              	.LCFI24:
 2333              		.cfi_def_cfa_offset 24
 2334              		.cfi_offset 4, -24
 2335              		.cfi_offset 5, -20
 2336              		.cfi_offset 6, -16
 2337              		.cfi_offset 7, -12
 2338              		.cfi_offset 8, -8
 2339              		.cfi_offset 14, -4
 2340 0004 0446     		mov	r4, r0
 2341 0006 0E46     		mov	r6, r1
 2342 0008 1546     		mov	r5, r2
 2343 000a 9846     		mov	r8, r3
 2344 000c 9DF81870 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 320:Src/RFM69.c   ****   while ((RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
 2345              		.loc 1 320 3 is_stmt 1 view .LVU554
 2346 0010 0120     		movs	r0, #1
 2347              	.LVL273:
 320:Src/RFM69.c   ****   while ((RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
 2348              		.loc 1 320 3 is_stmt 0 view .LVU555
 2349 0012 FFF7FEFF 		bl	RFM69_setMode
 2350              	.LVL274:
 321:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
 2351              		.loc 1 321 3 is_stmt 1 view .LVU556
 2352              	.L221:
 321:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
 2353              		.loc 1 321 74 discriminator 1 view .LVU557
 321:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
 2354              		.loc 1 321 11 is_stmt 0 discriminator 1 view .LVU558
 2355 0016 2720     		movs	r0, #39
 2356 0018 FFF7FEFF 		bl	RFM69_readReg
 2357              	.LVL275:
 321:Src/RFM69.c   ****   RFM69_writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
 2358              		.loc 1 321 9 discriminator 1 view .LVU559
 2359 001c 10F0800F 		tst	r0, #128
 2360 0020 F9D0     		beq	.L221
 322:Src/RFM69.c   ****   if (bufferSize > RF69_MAX_DATA_LEN) bufferSize = RF69_MAX_DATA_LEN;
 2361              		.loc 1 322 3 is_stmt 1 view .LVU560
 2362 0022 0021     		movs	r1, #0
 2363 0024 2520     		movs	r0, #37
 2364 0026 FFF7FEFF 		bl	RFM69_writeReg
 2365              	.LVL276:
 323:Src/RFM69.c   **** 
 2366              		.loc 1 323 3 view .LVU561
 323:Src/RFM69.c   **** 
 2367              		.loc 1 323 6 is_stmt 0 view .LVU562
 2368 002a 3D2D     		cmp	r5, #61
 2369 002c 00D9     		bls	.L222
 323:Src/RFM69.c   **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 66


 2370              		.loc 1 323 50 view .LVU563
 2371 002e 3D25     		movs	r5, #61
 2372              	.L222:
 2373              	.LVL277:
 326:Src/RFM69.c   ****   if (sendACK)
 2374              		.loc 1 326 3 is_stmt 1 view .LVU564
 327:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_SENDACK;
 2375              		.loc 1 327 3 view .LVU565
 327:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_SENDACK;
 2376              		.loc 1 327 6 is_stmt 0 view .LVU566
 2377 0030 27B9     		cbnz	r7, .L229
 329:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_REQACK;
 2378              		.loc 1 329 8 is_stmt 1 view .LVU567
 329:Src/RFM69.c   ****     CTLbyte = RFM69_CTL_REQACK;
 2379              		.loc 1 329 11 is_stmt 0 view .LVU568
 2380 0032 B8F1000F 		cmp	r8, #0
 2381 0036 02D0     		beq	.L223
 330:Src/RFM69.c   **** 
 2382              		.loc 1 330 13 view .LVU569
 2383 0038 4027     		movs	r7, #64
 2384 003a 00E0     		b	.L223
 2385              	.L229:
 328:Src/RFM69.c   ****   else if (requestACK)
 2386              		.loc 1 328 13 view .LVU570
 2387 003c 8027     		movs	r7, #128
 2388              	.L223:
 2389              	.LVL278:
 333:Src/RFM69.c   ****   SPI_transfer8(REG_FIFO | 0x80);
 2390              		.loc 1 333 3 is_stmt 1 view .LVU571
 2391 003e FFF7FEFF 		bl	RFM69_select
 2392              	.LVL279:
 334:Src/RFM69.c   ****   SPI_transfer8(bufferSize + 3);
 2393              		.loc 1 334 3 view .LVU572
 2394 0042 8020     		movs	r0, #128
 2395 0044 FFF7FEFF 		bl	SPI_transfer8
 2396              	.LVL280:
 335:Src/RFM69.c   ****   SPI_transfer8(toAddress);
 2397              		.loc 1 335 3 view .LVU573
 2398 0048 E81C     		adds	r0, r5, #3
 2399 004a C0B2     		uxtb	r0, r0
 2400 004c FFF7FEFF 		bl	SPI_transfer8
 2401              	.LVL281:
 336:Src/RFM69.c   ****   SPI_transfer8(_address);
 2402              		.loc 1 336 3 view .LVU574
 2403 0050 2046     		mov	r0, r4
 2404 0052 FFF7FEFF 		bl	SPI_transfer8
 2405              	.LVL282:
 337:Src/RFM69.c   ****   SPI_transfer8(CTLbyte);
 2406              		.loc 1 337 3 view .LVU575
 2407 0056 124B     		ldr	r3, .L233
 2408 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2409 005a FFF7FEFF 		bl	SPI_transfer8
 2410              	.LVL283:
 338:Src/RFM69.c   **** 
 2411              		.loc 1 338 3 view .LVU576
 2412 005e 3846     		mov	r0, r7
 2413 0060 FFF7FEFF 		bl	SPI_transfer8
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 67


 2414              	.LVL284:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2415              		.loc 1 340 3 view .LVU577
 2416              	.LBB8:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2417              		.loc 1 340 8 view .LVU578
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2418              		.loc 1 340 16 is_stmt 0 view .LVU579
 2419 0064 0024     		movs	r4, #0
 2420              	.LVL285:
 2421              	.L224:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2422              		.loc 1 340 3 discriminator 1 view .LVU580
 2423 0066 A542     		cmp	r5, r4
 2424 0068 05D9     		bls	.L232
 341:Src/RFM69.c   ****   RFM69_unselect();
 2425              		.loc 1 341 5 is_stmt 1 discriminator 3 view .LVU581
 2426 006a 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 2427 006c FFF7FEFF 		bl	SPI_transfer8
 2428              	.LVL286:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2429              		.loc 1 340 40 is_stmt 0 discriminator 3 view .LVU582
 2430 0070 0134     		adds	r4, r4, #1
 2431              	.LVL287:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2432              		.loc 1 340 40 discriminator 3 view .LVU583
 2433 0072 E4B2     		uxtb	r4, r4
 2434              	.LVL288:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2435              		.loc 1 340 40 discriminator 3 view .LVU584
 2436 0074 F7E7     		b	.L224
 2437              	.L232:
 340:Src/RFM69.c   ****     SPI_transfer8(((uint8_t*) buffer)[i]);
 2438              		.loc 1 340 40 discriminator 3 view .LVU585
 2439              	.LBE8:
 342:Src/RFM69.c   **** 
 2440              		.loc 1 342 3 is_stmt 1 view .LVU586
 2441 0076 FFF7FEFF 		bl	RFM69_unselect
 2442              	.LVL289:
 345:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_TX_LIMIT_MS);
 2443              		.loc 1 345 3 view .LVU587
 2444 007a 0420     		movs	r0, #4
 2445 007c FFF7FEFF 		bl	RFM69_setMode
 2446              	.LVL290:
 346:Src/RFM69.c   ****   while (RFM69_ReadDIO0Pin() == 0 && !Timeout_IsTimeout1()); // wait for DIO0 to turn HIGH signalli
 2447              		.loc 1 346 3 view .LVU588
 2448 0080 4FF47A70 		mov	r0, #1000
 2449 0084 FFF7FEFF 		bl	Timeout_SetTimeout1
 2450              	.LVL291:
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2451              		.loc 1 347 3 view .LVU589
 2452              	.L227:
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2453              		.loc 1 347 60 discriminator 2 view .LVU590
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2454              		.loc 1 347 10 is_stmt 0 discriminator 2 view .LVU591
 2455 0088 FFF7FEFF 		bl	RFM69_ReadDIO0Pin
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 68


 2456              	.LVL292:
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2457              		.loc 1 347 9 discriminator 2 view .LVU592
 2458 008c 18B9     		cbnz	r0, .L226
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2459              		.loc 1 347 39 discriminator 1 view .LVU593
 2460 008e FFF7FEFF 		bl	Timeout_IsTimeout1
 2461              	.LVL293:
 347:Src/RFM69.c   ****   //while (RFM69_readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PACKETSENT == 0x00); // wait for ModeReady
 2462              		.loc 1 347 35 discriminator 1 view .LVU594
 2463 0092 0028     		cmp	r0, #0
 2464 0094 F8D0     		beq	.L227
 2465              	.L226:
 349:Src/RFM69.c   **** }
 2466              		.loc 1 349 3 is_stmt 1 view .LVU595
 2467 0096 0120     		movs	r0, #1
 2468 0098 FFF7FEFF 		bl	RFM69_setMode
 2469              	.LVL294:
 350:Src/RFM69.c   **** 
 2470              		.loc 1 350 1 is_stmt 0 view .LVU596
 2471 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2472              	.LVL295:
 2473              	.L234:
 350:Src/RFM69.c   **** 
 2474              		.loc 1 350 1 view .LVU597
 2475              		.align	2
 2476              	.L233:
 2477 00a0 00000000 		.word	_address
 2478              		.cfi_endproc
 2479              	.LFE140:
 2481              		.section	.text.RFM69_send,"ax",%progbits
 2482              		.align	1
 2483              		.global	RFM69_send
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2487              		.fpu fpv4-sp-d16
 2489              	RFM69_send:
 2490              	.LVL296:
 2491              	.LFB135:
 254:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 2492              		.loc 1 254 1 is_stmt 1 view -0
 2493              		.cfi_startproc
 2494              		@ args = 0, pretend = 0, frame = 0
 2495              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 2496              		.loc 1 254 1 is_stmt 0 view .LVU599
 2497 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2498              	.LCFI25:
 2499              		.cfi_def_cfa_offset 20
 2500              		.cfi_offset 4, -20
 2501              		.cfi_offset 5, -16
 2502              		.cfi_offset 6, -12
 2503              		.cfi_offset 7, -8
 2504              		.cfi_offset 14, -4
 2505 0002 83B0     		sub	sp, sp, #12
 2506              	.LCFI26:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 69


 2507              		.cfi_def_cfa_offset 32
 2508 0004 0446     		mov	r4, r0
 2509 0006 0D46     		mov	r5, r1
 2510 0008 1646     		mov	r6, r2
 2511 000a 1F46     		mov	r7, r3
 255:Src/RFM69.c   ****   //uint32_t now = millis();
 2512              		.loc 1 255 3 is_stmt 1 view .LVU600
 255:Src/RFM69.c   ****   //uint32_t now = millis();
 2513              		.loc 1 255 38 is_stmt 0 view .LVU601
 2514 000c 3D20     		movs	r0, #61
 2515              	.LVL297:
 255:Src/RFM69.c   ****   //uint32_t now = millis();
 2516              		.loc 1 255 38 view .LVU602
 2517 000e FFF7FEFF 		bl	RFM69_readReg
 2518              	.LVL298:
 255:Src/RFM69.c   ****   //uint32_t now = millis();
 2519              		.loc 1 255 3 view .LVU603
 2520 0012 40F00401 		orr	r1, r0, #4
 2521 0016 C9B2     		uxtb	r1, r1
 2522 0018 3D20     		movs	r0, #61
 2523 001a FFF7FEFF 		bl	RFM69_writeReg
 2524              	.LVL299:
 257:Src/RFM69.c   ****   RFM69_sendFrame(toAddress, buffer, bufferSize, requestACK, false);
 2525              		.loc 1 257 3 is_stmt 1 view .LVU604
 2526              	.L236:
 257:Src/RFM69.c   ****   RFM69_sendFrame(toAddress, buffer, bufferSize, requestACK, false);
 2527              		.loc 1 257 11 is_stmt 0 discriminator 1 view .LVU605
 2528 001e FFF7FEFF 		bl	RFM69_canSend
 2529              	.LVL300:
 257:Src/RFM69.c   ****   RFM69_sendFrame(toAddress, buffer, bufferSize, requestACK, false);
 2530              		.loc 1 257 9 discriminator 1 view .LVU606
 2531 0022 10B9     		cbnz	r0, .L239
 257:Src/RFM69.c   ****   RFM69_sendFrame(toAddress, buffer, bufferSize, requestACK, false);
 2532              		.loc 1 257 71 is_stmt 1 discriminator 2 view .LVU607
 2533 0024 FFF7FEFF 		bl	RFM69_receiveDone
 2534              	.LVL301:
 2535 0028 F9E7     		b	.L236
 2536              	.L239:
 258:Src/RFM69.c   **** }
 2537              		.loc 1 258 3 view .LVU608
 2538 002a 0023     		movs	r3, #0
 2539 002c 0093     		str	r3, [sp]
 2540 002e 3B46     		mov	r3, r7
 2541 0030 3246     		mov	r2, r6
 2542 0032 2946     		mov	r1, r5
 2543 0034 2046     		mov	r0, r4
 2544 0036 FFF7FEFF 		bl	RFM69_sendFrame
 2545              	.LVL302:
 259:Src/RFM69.c   **** 
 2546              		.loc 1 259 1 is_stmt 0 view .LVU609
 2547 003a 03B0     		add	sp, sp, #12
 2548              	.LCFI27:
 2549              		.cfi_def_cfa_offset 20
 2550              		@ sp needed
 2551 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 259:Src/RFM69.c   **** 
 2552              		.loc 1 259 1 view .LVU610
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 70


 2553              		.cfi_endproc
 2554              	.LFE135:
 2556              		.section	.text.RFM69_sendWithRetry,"ax",%progbits
 2557              		.align	1
 2558              		.global	RFM69_sendWithRetry
 2559              		.syntax unified
 2560              		.thumb
 2561              		.thumb_func
 2562              		.fpu fpv4-sp-d16
 2564              	RFM69_sendWithRetry:
 2565              	.LVL303:
 2566              	.LFB136:
 268:Src/RFM69.c   ****   for (uint8_t i = 0; i <= retries; i++)
 2567              		.loc 1 268 1 is_stmt 1 view -0
 2568              		.cfi_startproc
 2569              		@ args = 4, pretend = 0, frame = 0
 2570              		@ frame_needed = 0, uses_anonymous_args = 0
 268:Src/RFM69.c   ****   for (uint8_t i = 0; i <= retries; i++)
 2571              		.loc 1 268 1 is_stmt 0 view .LVU612
 2572 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2573              	.LCFI28:
 2574              		.cfi_def_cfa_offset 32
 2575              		.cfi_offset 3, -32
 2576              		.cfi_offset 4, -28
 2577              		.cfi_offset 5, -24
 2578              		.cfi_offset 6, -20
 2579              		.cfi_offset 7, -16
 2580              		.cfi_offset 8, -12
 2581              		.cfi_offset 9, -8
 2582              		.cfi_offset 14, -4
 2583 0004 0446     		mov	r4, r0
 2584 0006 8946     		mov	r9, r1
 2585 0008 9046     		mov	r8, r2
 2586 000a 1E46     		mov	r6, r3
 2587 000c 9DF82070 		ldrb	r7, [sp, #32]	@ zero_extendqisi2
 269:Src/RFM69.c   ****   {
 2588              		.loc 1 269 3 is_stmt 1 view .LVU613
 2589              	.LBB9:
 269:Src/RFM69.c   ****   {
 2590              		.loc 1 269 8 view .LVU614
 2591              	.LVL304:
 269:Src/RFM69.c   ****   {
 2592              		.loc 1 269 16 is_stmt 0 view .LVU615
 2593 0010 0025     		movs	r5, #0
 2594              	.LVL305:
 2595              	.L241:
 269:Src/RFM69.c   ****   {
 2596              		.loc 1 269 3 discriminator 1 view .LVU616
 2597 0012 B542     		cmp	r5, r6
 2598 0014 17D8     		bhi	.L247
 271:Src/RFM69.c   ****     Timeout_SetTimeout1(retryWaitTime);
 2599              		.loc 1 271 5 is_stmt 1 view .LVU617
 2600 0016 0123     		movs	r3, #1
 2601 0018 4246     		mov	r2, r8
 2602 001a 4946     		mov	r1, r9
 2603 001c 2046     		mov	r0, r4
 2604 001e FFF7FEFF 		bl	RFM69_send
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 71


 2605              	.LVL306:
 272:Src/RFM69.c   ****     while (!Timeout_IsTimeout1())
 2606              		.loc 1 272 5 view .LVU618
 2607 0022 3846     		mov	r0, r7
 2608 0024 FFF7FEFF 		bl	Timeout_SetTimeout1
 2609              	.LVL307:
 273:Src/RFM69.c   ****     {
 2610              		.loc 1 273 5 view .LVU619
 2611              	.L242:
 273:Src/RFM69.c   ****     {
 2612              		.loc 1 273 13 is_stmt 0 view .LVU620
 2613 0028 FFF7FEFF 		bl	Timeout_IsTimeout1
 2614              	.LVL308:
 273:Src/RFM69.c   ****     {
 2615              		.loc 1 273 11 view .LVU621
 2616 002c 40B9     		cbnz	r0, .L248
 275:Src/RFM69.c   ****       {
 2617              		.loc 1 275 7 is_stmt 1 view .LVU622
 275:Src/RFM69.c   ****       {
 2618              		.loc 1 275 11 is_stmt 0 view .LVU623
 2619 002e 2046     		mov	r0, r4
 2620 0030 FFF7FEFF 		bl	RFM69_ACKReceived
 2621              	.LVL309:
 275:Src/RFM69.c   ****       {
 2622              		.loc 1 275 10 view .LVU624
 2623 0034 0346     		mov	r3, r0
 2624 0036 0028     		cmp	r0, #0
 2625 0038 F6D0     		beq	.L242
 2626              	.L243:
 275:Src/RFM69.c   ****       {
 2627              		.loc 1 275 10 view .LVU625
 2628              	.LBE9:
 284:Src/RFM69.c   **** 
 2629              		.loc 1 284 1 view .LVU626
 2630 003a 1846     		mov	r0, r3
 2631 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2632              	.LVL310:
 2633              	.L248:
 2634              	.LBB10:
 269:Src/RFM69.c   ****   {
 2635              		.loc 1 269 38 discriminator 2 view .LVU627
 2636 0040 0135     		adds	r5, r5, #1
 2637              	.LVL311:
 269:Src/RFM69.c   ****   {
 2638              		.loc 1 269 38 discriminator 2 view .LVU628
 2639 0042 EDB2     		uxtb	r5, r5
 2640              	.LVL312:
 269:Src/RFM69.c   ****   {
 2641              		.loc 1 269 38 discriminator 2 view .LVU629
 2642 0044 E5E7     		b	.L241
 2643              	.L247:
 269:Src/RFM69.c   ****   {
 2644              		.loc 1 269 38 discriminator 2 view .LVU630
 2645              	.LBE10:
 283:Src/RFM69.c   **** }
 2646              		.loc 1 283 10 view .LVU631
 2647 0046 0023     		movs	r3, #0
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 72


 2648 0048 F7E7     		b	.L243
 2649              		.cfi_endproc
 2650              	.LFE136:
 2652              		.section	.text.RFM69_sendACK,"ax",%progbits
 2653              		.align	1
 2654              		.global	RFM69_sendACK
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu fpv4-sp-d16
 2660              	RFM69_sendACK:
 2661              	.LVL313:
 2662              	.LFB139:
 302:Src/RFM69.c   ****   ACK_Requested = 0;   // TWS added to make sure we don't end up in a timing race and infinite loop
 2663              		.loc 1 302 1 is_stmt 1 view -0
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 0
 2666              		@ frame_needed = 0, uses_anonymous_args = 0
 302:Src/RFM69.c   ****   ACK_Requested = 0;   // TWS added to make sure we don't end up in a timing race and infinite loop
 2667              		.loc 1 302 1 is_stmt 0 view .LVU633
 2668 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2669              	.LCFI29:
 2670              		.cfi_def_cfa_offset 20
 2671              		.cfi_offset 4, -20
 2672              		.cfi_offset 5, -16
 2673              		.cfi_offset 6, -12
 2674              		.cfi_offset 7, -8
 2675              		.cfi_offset 14, -4
 2676 0002 83B0     		sub	sp, sp, #12
 2677              	.LCFI30:
 2678              		.cfi_def_cfa_offset 32
 2679 0004 0646     		mov	r6, r0
 2680 0006 0F46     		mov	r7, r1
 303:Src/RFM69.c   ****   uint8_t sender = senderID;
 2681              		.loc 1 303 3 is_stmt 1 view .LVU634
 303:Src/RFM69.c   ****   uint8_t sender = senderID;
 2682              		.loc 1 303 17 is_stmt 0 view .LVU635
 2683 0008 154B     		ldr	r3, .L254
 2684 000a 0022     		movs	r2, #0
 2685 000c 1A70     		strb	r2, [r3]
 304:Src/RFM69.c   ****   int16_t l_rssi = rssi; // save payload received RSSI value
 2686              		.loc 1 304 3 is_stmt 1 view .LVU636
 304:Src/RFM69.c   ****   int16_t l_rssi = rssi; // save payload received RSSI value
 2687              		.loc 1 304 11 is_stmt 0 view .LVU637
 2688 000e 154B     		ldr	r3, .L254+4
 2689 0010 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2690              	.LVL314:
 305:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 2691              		.loc 1 305 3 is_stmt 1 view .LVU638
 305:Src/RFM69.c   ****   RFM69_writeReg(REG_PACKETCONFIG2, (RFM69_readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTAR
 2692              		.loc 1 305 11 is_stmt 0 view .LVU639
 2693 0012 154B     		ldr	r3, .L254+8
 2694 0014 B3F90050 		ldrsh	r5, [r3]
 2695              	.LVL315:
 306:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_CSMA_LIMIT_MS);
 2696              		.loc 1 306 3 is_stmt 1 view .LVU640
 306:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_CSMA_LIMIT_MS);
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 73


 2697              		.loc 1 306 38 is_stmt 0 view .LVU641
 2698 0018 3D20     		movs	r0, #61
 2699              	.LVL316:
 306:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_CSMA_LIMIT_MS);
 2700              		.loc 1 306 38 view .LVU642
 2701 001a FFF7FEFF 		bl	RFM69_readReg
 2702              	.LVL317:
 306:Src/RFM69.c   ****   Timeout_SetTimeout1(RF69_CSMA_LIMIT_MS);
 2703              		.loc 1 306 3 view .LVU643
 2704 001e 40F00401 		orr	r1, r0, #4
 2705 0022 C9B2     		uxtb	r1, r1
 2706 0024 3D20     		movs	r0, #61
 2707 0026 FFF7FEFF 		bl	RFM69_writeReg
 2708              	.LVL318:
 307:Src/RFM69.c   ****   while (!RFM69_canSend() && !Timeout_IsTimeout1())
 2709              		.loc 1 307 3 is_stmt 1 view .LVU644
 2710 002a 4FF47A70 		mov	r0, #1000
 2711 002e FFF7FEFF 		bl	Timeout_SetTimeout1
 2712              	.LVL319:
 308:Src/RFM69.c   ****   {
 2713              		.loc 1 308 3 view .LVU645
 2714              	.L250:
 308:Src/RFM69.c   ****   {
 2715              		.loc 1 308 11 is_stmt 0 view .LVU646
 2716 0032 FFF7FEFF 		bl	RFM69_canSend
 2717              	.LVL320:
 308:Src/RFM69.c   ****   {
 2718              		.loc 1 308 9 view .LVU647
 2719 0036 28B9     		cbnz	r0, .L251
 308:Src/RFM69.c   ****   {
 2720              		.loc 1 308 31 discriminator 1 view .LVU648
 2721 0038 FFF7FEFF 		bl	Timeout_IsTimeout1
 2722              	.LVL321:
 308:Src/RFM69.c   ****   {
 2723              		.loc 1 308 27 discriminator 1 view .LVU649
 2724 003c 10B9     		cbnz	r0, .L251
 310:Src/RFM69.c   ****   }
 2725              		.loc 1 310 5 is_stmt 1 view .LVU650
 2726 003e FFF7FEFF 		bl	RFM69_receiveDone
 2727              	.LVL322:
 2728 0042 F6E7     		b	.L250
 2729              	.L251:
 312:Src/RFM69.c   ****   RFM69_sendFrame(sender, buffer, bufferSize, false, true);
 2730              		.loc 1 312 3 view .LVU651
 312:Src/RFM69.c   ****   RFM69_sendFrame(sender, buffer, bufferSize, false, true);
 2731              		.loc 1 312 12 is_stmt 0 view .LVU652
 2732 0044 074B     		ldr	r3, .L254+4
 2733 0046 1C70     		strb	r4, [r3]
 313:Src/RFM69.c   ****   rssi = l_rssi; // restore payload RSSI
 2734              		.loc 1 313 3 is_stmt 1 view .LVU653
 2735 0048 0123     		movs	r3, #1
 2736 004a 0093     		str	r3, [sp]
 2737 004c 0023     		movs	r3, #0
 2738 004e 3A46     		mov	r2, r7
 2739 0050 3146     		mov	r1, r6
 2740 0052 2046     		mov	r0, r4
 2741 0054 FFF7FEFF 		bl	RFM69_sendFrame
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 74


 2742              	.LVL323:
 314:Src/RFM69.c   **** }
 2743              		.loc 1 314 3 view .LVU654
 314:Src/RFM69.c   **** }
 2744              		.loc 1 314 8 is_stmt 0 view .LVU655
 2745 0058 034B     		ldr	r3, .L254+8
 2746 005a 1D80     		strh	r5, [r3]	@ movhi
 315:Src/RFM69.c   **** 
 2747              		.loc 1 315 1 view .LVU656
 2748 005c 03B0     		add	sp, sp, #12
 2749              	.LCFI31:
 2750              		.cfi_def_cfa_offset 20
 2751              		@ sp needed
 2752 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 2753              	.LVL324:
 2754              	.L255:
 315:Src/RFM69.c   **** 
 2755              		.loc 1 315 1 view .LVU657
 2756              		.align	2
 2757              	.L254:
 2758 0060 00000000 		.word	ACK_Requested
 2759 0064 00000000 		.word	senderID
 2760 0068 00000000 		.word	rssi
 2761              		.cfi_endproc
 2762              	.LFE139:
 2764              		.section	.text.RFM69_encrypt,"ax",%progbits
 2765              		.align	1
 2766              		.global	RFM69_encrypt
 2767              		.syntax unified
 2768              		.thumb
 2769              		.thumb_func
 2770              		.fpu fpv4-sp-d16
 2772              	RFM69_encrypt:
 2773              	.LVL325:
 2774              	.LFB144:
 436:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 2775              		.loc 1 436 1 is_stmt 1 view -0
 2776              		.cfi_startproc
 2777              		@ args = 0, pretend = 0, frame = 0
 2778              		@ frame_needed = 0, uses_anonymous_args = 0
 436:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 2779              		.loc 1 436 1 is_stmt 0 view .LVU659
 2780 0000 38B5     		push	{r3, r4, r5, lr}
 2781              	.LCFI32:
 2782              		.cfi_def_cfa_offset 16
 2783              		.cfi_offset 3, -16
 2784              		.cfi_offset 4, -12
 2785              		.cfi_offset 5, -8
 2786              		.cfi_offset 14, -4
 2787 0002 0546     		mov	r5, r0
 437:Src/RFM69.c   ****   if (key != 0)
 2788              		.loc 1 437 3 is_stmt 1 view .LVU660
 2789 0004 0120     		movs	r0, #1
 2790              	.LVL326:
 437:Src/RFM69.c   ****   if (key != 0)
 2791              		.loc 1 437 3 is_stmt 0 view .LVU661
 2792 0006 FFF7FEFF 		bl	RFM69_setMode
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 75


 2793              	.LVL327:
 438:Src/RFM69.c   ****   {
 2794              		.loc 1 438 3 is_stmt 1 view .LVU662
 438:Src/RFM69.c   ****   {
 2795              		.loc 1 438 6 is_stmt 0 view .LVU663
 2796 000a 7DB1     		cbz	r5, .L257
 440:Src/RFM69.c   ****     SPI_transfer8(REG_AESKEY1 | 0x80);
 2797              		.loc 1 440 5 is_stmt 1 view .LVU664
 2798 000c FFF7FEFF 		bl	RFM69_select
 2799              	.LVL328:
 441:Src/RFM69.c   ****     for (uint8_t i = 0; i < 16; i++)
 2800              		.loc 1 441 5 view .LVU665
 2801 0010 BE20     		movs	r0, #190
 2802 0012 FFF7FEFF 		bl	SPI_transfer8
 2803              	.LVL329:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2804              		.loc 1 442 5 view .LVU666
 2805              	.LBB11:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2806              		.loc 1 442 10 view .LVU667
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2807              		.loc 1 442 18 is_stmt 0 view .LVU668
 2808 0016 0024     		movs	r4, #0
 2809              	.LVL330:
 2810              	.L258:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2811              		.loc 1 442 5 discriminator 1 view .LVU669
 2812 0018 0F2C     		cmp	r4, #15
 2813 001a 05D8     		bhi	.L261
 443:Src/RFM69.c   ****     RFM69_unselect();
 2814              		.loc 1 443 7 is_stmt 1 discriminator 3 view .LVU670
 2815 001c 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 2816 001e FFF7FEFF 		bl	SPI_transfer8
 2817              	.LVL331:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2818              		.loc 1 442 34 is_stmt 0 discriminator 3 view .LVU671
 2819 0022 0134     		adds	r4, r4, #1
 2820              	.LVL332:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2821              		.loc 1 442 34 discriminator 3 view .LVU672
 2822 0024 E4B2     		uxtb	r4, r4
 2823              	.LVL333:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2824              		.loc 1 442 34 discriminator 3 view .LVU673
 2825 0026 F7E7     		b	.L258
 2826              	.L261:
 442:Src/RFM69.c   ****       SPI_transfer8(key[i]);
 2827              		.loc 1 442 34 discriminator 3 view .LVU674
 2828              	.LBE11:
 444:Src/RFM69.c   ****   }
 2829              		.loc 1 444 5 is_stmt 1 view .LVU675
 2830 0028 FFF7FEFF 		bl	RFM69_unselect
 2831              	.LVL334:
 2832              	.L257:
 446:Src/RFM69.c   **** }
 2833              		.loc 1 446 3 view .LVU676
 446:Src/RFM69.c   **** }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 76


 2834              		.loc 1 446 38 is_stmt 0 view .LVU677
 2835 002c 3D20     		movs	r0, #61
 2836 002e FFF7FEFF 		bl	RFM69_readReg
 2837              	.LVL335:
 2838 0032 41B2     		sxtb	r1, r0
 446:Src/RFM69.c   **** }
 2839              		.loc 1 446 71 view .LVU678
 2840 0034 21F00101 		bic	r1, r1, #1
 446:Src/RFM69.c   **** }
 2841              		.loc 1 446 79 view .LVU679
 2842 0038 002D     		cmp	r5, #0
 2843 003a 18BF     		it	ne
 2844 003c 41F00101 		orrne	r1, r1, #1
 446:Src/RFM69.c   **** }
 2845              		.loc 1 446 3 view .LVU680
 2846 0040 C9B2     		uxtb	r1, r1
 2847 0042 3D20     		movs	r0, #61
 2848 0044 FFF7FEFF 		bl	RFM69_writeReg
 2849              	.LVL336:
 447:Src/RFM69.c   **** 
 2850              		.loc 1 447 1 view .LVU681
 2851 0048 38BD     		pop	{r3, r4, r5, pc}
 447:Src/RFM69.c   **** 
 2852              		.loc 1 447 1 view .LVU682
 2853              		.cfi_endproc
 2854              	.LFE144:
 2856              		.section	.text.RFM69_initialize,"ax",%progbits
 2857              		.align	1
 2858              		.global	RFM69_initialize
 2859              		.syntax unified
 2860              		.thumb
 2861              		.thumb_func
 2862              		.fpu fpv4-sp-d16
 2864              	RFM69_initialize:
 2865              	.LVL337:
 2866              	.LFB126:
  57:Src/RFM69.c   ****   const uint8_t CONFIG[][2] =
 2867              		.loc 1 57 1 is_stmt 1 view -0
 2868              		.cfi_startproc
 2869              		@ args = 0, pretend = 0, frame = 48
 2870              		@ frame_needed = 0, uses_anonymous_args = 0
  57:Src/RFM69.c   ****   const uint8_t CONFIG[][2] =
 2871              		.loc 1 57 1 is_stmt 0 view .LVU684
 2872 0000 70B5     		push	{r4, r5, r6, lr}
 2873              	.LCFI33:
 2874              		.cfi_def_cfa_offset 16
 2875              		.cfi_offset 4, -16
 2876              		.cfi_offset 5, -12
 2877              		.cfi_offset 6, -8
 2878              		.cfi_offset 14, -4
 2879 0002 8CB0     		sub	sp, sp, #48
 2880              	.LCFI34:
 2881              		.cfi_def_cfa_offset 64
 2882 0004 0E46     		mov	r6, r1
  58:Src/RFM69.c   ****   {
 2883              		.loc 1 58 3 is_stmt 1 view .LVU685
  58:Src/RFM69.c   ****   {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 77


 2884              		.loc 1 58 17 is_stmt 0 view .LVU686
 2885 0006 0123     		movs	r3, #1
 2886 0008 8DF80030 		strb	r3, [sp]
 2887 000c 0421     		movs	r1, #4
 2888              	.LVL338:
  58:Src/RFM69.c   ****   {
 2889              		.loc 1 58 17 view .LVU687
 2890 000e 8DF80110 		strb	r1, [sp, #1]
 2891 0012 0224     		movs	r4, #2
 2892 0014 8DF80240 		strb	r4, [sp, #2]
 2893 0018 0023     		movs	r3, #0
 2894 001a 8DF80330 		strb	r3, [sp, #3]
 2895 001e 0323     		movs	r3, #3
 2896 0020 8DF80430 		strb	r3, [sp, #4]
 2897 0024 8DF80540 		strb	r4, [sp, #5]
 2898 0028 8DF80610 		strb	r1, [sp, #6]
 2899 002c 4021     		movs	r1, #64
 2900 002e 8DF80710 		strb	r1, [sp, #7]
 2901 0032 0521     		movs	r1, #5
 2902 0034 8DF80810 		strb	r1, [sp, #8]
 2903 0038 8DF80930 		strb	r3, [sp, #9]
 2904 003c 0623     		movs	r3, #6
 2905 003e 8DF80A30 		strb	r3, [sp, #10]
 2906 0042 3323     		movs	r3, #51
 2907 0044 8DF80B30 		strb	r3, [sp, #11]
 2908 0048 0723     		movs	r3, #7
 2909 004a 8DF80C30 		strb	r3, [sp, #12]
 2910 004e 40F23B13 		movw	r3, #315
 2911 0052 9842     		cmp	r0, r3
 2912 0054 0AD0     		beq	.L273
  58:Src/RFM69.c   ****   {
 2913              		.loc 1 58 17 discriminator 1 view .LVU688
 2914 0056 40F2B113 		movw	r3, #433
 2915 005a 9842     		cmp	r0, r3
 2916 005c 19D0     		beq	.L274
  58:Src/RFM69.c   ****   {
 2917              		.loc 1 58 17 discriminator 3 view .LVU689
 2918 005e B0F5597F 		cmp	r0, #868
 2919 0062 01D0     		beq	.L282
  58:Src/RFM69.c   ****   {
 2920              		.loc 1 58 17 view .LVU690
 2921 0064 E423     		movs	r3, #228
 2922 0066 02E0     		b	.L263
 2923              	.L282:
 2924 0068 D923     		movs	r3, #217
 2925 006a 00E0     		b	.L263
 2926              	.L273:
 2927 006c 4E23     		movs	r3, #78
 2928              	.L263:
  58:Src/RFM69.c   ****   {
 2929              		.loc 1 58 17 discriminator 12 view .LVU691
 2930 006e 8DF80D30 		strb	r3, [sp, #13]
 2931 0072 0823     		movs	r3, #8
 2932 0074 8DF80E30 		strb	r3, [sp, #14]
 2933 0078 40F23B13 		movw	r3, #315
 2934 007c 9842     		cmp	r0, r3
 2935 007e 0CD0     		beq	.L276
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 78


  58:Src/RFM69.c   ****   {
 2936              		.loc 1 58 17 discriminator 13 view .LVU692
 2937 0080 40F2B113 		movw	r3, #433
 2938 0084 9842     		cmp	r0, r3
 2939 0086 65D0     		beq	.L277
  58:Src/RFM69.c   ****   {
 2940              		.loc 1 58 17 discriminator 15 view .LVU693
 2941 0088 B0F5597F 		cmp	r0, #868
 2942 008c 03D0     		beq	.L283
  58:Src/RFM69.c   ****   {
 2943              		.loc 1 58 17 view .LVU694
 2944 008e C023     		movs	r3, #192
 2945 0090 04E0     		b	.L264
 2946              	.L274:
 2947 0092 6C23     		movs	r3, #108
 2948 0094 EBE7     		b	.L263
 2949              	.L283:
 2950 0096 0023     		movs	r3, #0
 2951 0098 00E0     		b	.L264
 2952              	.L276:
 2953 009a C023     		movs	r3, #192
 2954              	.L264:
  58:Src/RFM69.c   ****   {
 2955              		.loc 1 58 17 discriminator 24 view .LVU695
 2956 009c 8DF80F30 		strb	r3, [sp, #15]
 2957 00a0 0923     		movs	r3, #9
 2958 00a2 8DF81030 		strb	r3, [sp, #16]
 2959 00a6 0024     		movs	r4, #0
 2960 00a8 8DF81140 		strb	r4, [sp, #17]
 2961 00ac 1923     		movs	r3, #25
 2962 00ae 8DF81230 		strb	r3, [sp, #18]
 2963 00b2 4221     		movs	r1, #66
 2964 00b4 8DF81310 		strb	r1, [sp, #19]
 2965 00b8 2523     		movs	r3, #37
 2966 00ba 8DF81430 		strb	r3, [sp, #20]
 2967 00be 4023     		movs	r3, #64
 2968 00c0 8DF81530 		strb	r3, [sp, #21]
 2969 00c4 2623     		movs	r3, #38
 2970 00c6 8DF81630 		strb	r3, [sp, #22]
 2971 00ca 0723     		movs	r3, #7
 2972 00cc 8DF81730 		strb	r3, [sp, #23]
 2973 00d0 2823     		movs	r3, #40
 2974 00d2 8DF81830 		strb	r3, [sp, #24]
 2975 00d6 1023     		movs	r3, #16
 2976 00d8 8DF81930 		strb	r3, [sp, #25]
 2977 00dc 2923     		movs	r3, #41
 2978 00de 8DF81A30 		strb	r3, [sp, #26]
 2979 00e2 DC23     		movs	r3, #220
 2980 00e4 8DF81B30 		strb	r3, [sp, #27]
 2981 00e8 2E23     		movs	r3, #46
 2982 00ea 8DF81C30 		strb	r3, [sp, #28]
 2983 00ee 8823     		movs	r3, #136
 2984 00f0 8DF81D30 		strb	r3, [sp, #29]
 2985 00f4 2F23     		movs	r3, #47
 2986 00f6 8DF81E30 		strb	r3, [sp, #30]
 2987 00fa 2D23     		movs	r3, #45
 2988 00fc 8DF81F30 		strb	r3, [sp, #31]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 79


 2989 0100 3023     		movs	r3, #48
 2990 0102 8DF82030 		strb	r3, [sp, #32]
 2991 0106 8DF82120 		strb	r2, [sp, #33]
 2992 010a 3722     		movs	r2, #55
 2993              	.LVL339:
  58:Src/RFM69.c   ****   {
 2994              		.loc 1 58 17 discriminator 24 view .LVU696
 2995 010c 8DF82220 		strb	r2, [sp, #34]
 2996 0110 9022     		movs	r2, #144
 2997 0112 8DF82320 		strb	r2, [sp, #35]
 2998 0116 3822     		movs	r2, #56
 2999 0118 8DF82420 		strb	r2, [sp, #36]
 3000 011c 8DF82510 		strb	r1, [sp, #37]
 3001 0120 3C22     		movs	r2, #60
 3002 0122 8DF82620 		strb	r2, [sp, #38]
 3003 0126 8F22     		movs	r2, #143
 3004 0128 8DF82720 		strb	r2, [sp, #39]
 3005 012c 3D22     		movs	r2, #61
 3006 012e 8DF82820 		strb	r2, [sp, #40]
 3007 0132 1222     		movs	r2, #18
 3008 0134 8DF82920 		strb	r2, [sp, #41]
 3009 0138 6F22     		movs	r2, #111
 3010 013a 8DF82A20 		strb	r2, [sp, #42]
 3011 013e 8DF82B30 		strb	r3, [sp, #43]
 3012 0142 FF23     		movs	r3, #255
 3013 0144 8DF82C30 		strb	r3, [sp, #44]
 3014 0148 8DF82D40 		strb	r4, [sp, #45]
 111:Src/RFM69.c   **** 
 3015              		.loc 1 111 3 is_stmt 1 discriminator 24 view .LVU697
 113:Src/RFM69.c   **** 
 3016              		.loc 1 113 3 discriminator 24 view .LVU698
 3017 014c 0120     		movs	r0, #1
 3018              	.LVL340:
 113:Src/RFM69.c   **** 
 3019              		.loc 1 113 3 is_stmt 0 discriminator 24 view .LVU699
 3020 014e FFF7FEFF 		bl	RFM69_SetCSPin
 3021              	.LVL341:
 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3022              		.loc 1 115 3 is_stmt 1 discriminator 24 view .LVU700
 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3023              		.loc 1 115 3 is_stmt 0 discriminator 24 view .LVU701
 3024 0152 0AE0     		b	.L265
 3025              	.LVL342:
 3026              	.L277:
  58:Src/RFM69.c   ****   {
 3027              		.loc 1 58 17 view .LVU702
 3028 0154 4023     		movs	r3, #64
 3029 0156 A1E7     		b	.L264
 3030              	.LVL343:
 3031              	.L266:
 116:Src/RFM69.c   ****   }
 3032              		.loc 1 116 5 is_stmt 1 discriminator 3 view .LVU703
 3033 0158 0CAB     		add	r3, sp, #48
 3034 015a 03EB4403 		add	r3, r3, r4, lsl #1
 3035 015e 13F82F1C 		ldrb	r1, [r3, #-47]	@ zero_extendqisi2
 3036 0162 FFF7FEFF 		bl	RFM69_writeReg
 3037              	.LVL344:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 80


 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3038              		.loc 1 115 37 is_stmt 0 discriminator 3 view .LVU704
 3039 0166 0134     		adds	r4, r4, #1
 3040              	.LVL345:
 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3041              		.loc 1 115 37 discriminator 3 view .LVU705
 3042 0168 E4B2     		uxtb	r4, r4
 3043              	.LVL346:
 3044              	.L265:
 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3045              		.loc 1 115 24 discriminator 1 view .LVU706
 3046 016a 0CAB     		add	r3, sp, #48
 3047 016c 03EB4403 		add	r3, r3, r4, lsl #1
 3048 0170 13F8300C 		ldrb	r0, [r3, #-48]	@ zero_extendqisi2
 115:Src/RFM69.c   ****     RFM69_writeReg(CONFIG[i][0], CONFIG[i][1]);
 3049              		.loc 1 115 3 discriminator 1 view .LVU707
 3050 0174 FF28     		cmp	r0, #255
 3051 0176 EFD1     		bne	.L266
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3052              		.loc 1 120 10 view .LVU708
 3053 0178 0024     		movs	r4, #0
 3054              	.LVL347:
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3055              		.loc 1 120 10 view .LVU709
 3056 017a 01E0     		b	.L267
 3057              	.LVL348:
 3058              	.L268:
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3059              		.loc 1 120 37 discriminator 2 view .LVU710
 3060 017c 0134     		adds	r4, r4, #1
 3061              	.LVL349:
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3062              		.loc 1 120 37 discriminator 2 view .LVU711
 3063 017e E4B2     		uxtb	r4, r4
 3064              	.LVL350:
 3065              	.L267:
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3066              		.loc 1 120 24 discriminator 1 view .LVU712
 3067 0180 2546     		mov	r5, r4
 3068 0182 0CAB     		add	r3, sp, #48
 3069 0184 03EB4403 		add	r3, r3, r4, lsl #1
 3070 0188 13F8300C 		ldrb	r0, [r3, #-48]	@ zero_extendqisi2
 120:Src/RFM69.c   ****     if(CONFIG[i][0] != REG_IRQFLAGS2)
 3071              		.loc 1 120 3 discriminator 1 view .LVU713
 3072 018c FF28     		cmp	r0, #255
 3073 018e 0CD0     		beq	.L284
 121:Src/RFM69.c   ****     {
 3074              		.loc 1 121 5 is_stmt 1 view .LVU714
 121:Src/RFM69.c   ****     {
 3075              		.loc 1 121 7 is_stmt 0 view .LVU715
 3076 0190 2828     		cmp	r0, #40
 3077 0192 F3D0     		beq	.L268
 123:Src/RFM69.c   ****         return false;
 3078              		.loc 1 123 7 is_stmt 1 view .LVU716
 123:Src/RFM69.c   ****         return false;
 3079              		.loc 1 123 10 is_stmt 0 view .LVU717
 3080 0194 FFF7FEFF 		bl	RFM69_readReg
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 81


 3081              	.LVL351:
 123:Src/RFM69.c   ****         return false;
 3082              		.loc 1 123 50 view .LVU718
 3083 0198 0CAB     		add	r3, sp, #48
 3084 019a 03EB4505 		add	r5, r3, r5, lsl #1
 3085 019e 15F82F3C 		ldrb	r3, [r5, #-47]	@ zero_extendqisi2
 123:Src/RFM69.c   ****         return false;
 3086              		.loc 1 123 9 view .LVU719
 3087 01a2 9842     		cmp	r0, r3
 3088 01a4 EAD0     		beq	.L268
 124:Src/RFM69.c   ****       }
 3089              		.loc 1 124 16 view .LVU720
 3090 01a6 0020     		movs	r0, #0
 3091 01a8 1AE0     		b	.L269
 3092              	.L284:
 131:Src/RFM69.c   **** 
 3093              		.loc 1 131 3 is_stmt 1 view .LVU721
 3094 01aa 0020     		movs	r0, #0
 3095 01ac FFF7FEFF 		bl	RFM69_encrypt
 3096              	.LVL352:
 133:Src/RFM69.c   ****   RFM69_setMode(RF69_MODE_STANDBY);
 3097              		.loc 1 133 3 view .LVU722
 3098 01b0 FFF7FEFF 		bl	RFM69_setHighPower
 3099              	.LVL353:
 134:Src/RFM69.c   ****   Timeout_SetTimeout1(50);
 3100              		.loc 1 134 3 view .LVU723
 3101 01b4 0120     		movs	r0, #1
 3102 01b6 FFF7FEFF 		bl	RFM69_setMode
 3103              	.LVL354:
 135:Src/RFM69.c   ****   while (((RFM69_readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00) && !Timeout_IsTimeout1()
 3104              		.loc 1 135 3 view .LVU724
 3105 01ba 3220     		movs	r0, #50
 3106 01bc FFF7FEFF 		bl	Timeout_SetTimeout1
 3107              	.LVL355:
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3108              		.loc 1 136 3 view .LVU725
 3109              	.L272:
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3110              		.loc 1 136 101 discriminator 2 view .LVU726
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3111              		.loc 1 136 12 is_stmt 0 discriminator 2 view .LVU727
 3112 01c0 2720     		movs	r0, #39
 3113 01c2 FFF7FEFF 		bl	RFM69_readReg
 3114              	.LVL356:
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3115              		.loc 1 136 9 discriminator 2 view .LVU728
 3116 01c6 10F0800F 		tst	r0, #128
 3117 01ca 03D1     		bne	.L271
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3118              		.loc 1 136 80 discriminator 1 view .LVU729
 3119 01cc FFF7FEFF 		bl	Timeout_IsTimeout1
 3120              	.LVL357:
 136:Src/RFM69.c   ****   if (Timeout_IsTimeout1())
 3121              		.loc 1 136 76 discriminator 1 view .LVU730
 3122 01d0 0028     		cmp	r0, #0
 3123 01d2 F5D0     		beq	.L272
 3124              	.L271:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 82


 137:Src/RFM69.c   ****   {
 3125              		.loc 1 137 3 is_stmt 1 view .LVU731
 137:Src/RFM69.c   ****   {
 3126              		.loc 1 137 7 is_stmt 0 view .LVU732
 3127 01d4 FFF7FEFF 		bl	Timeout_IsTimeout1
 3128              	.LVL358:
 137:Src/RFM69.c   ****   {
 3129              		.loc 1 137 6 view .LVU733
 3130 01d8 20B9     		cbnz	r0, .L280
 142:Src/RFM69.c   ****   return true;
 3131              		.loc 1 142 3 is_stmt 1 view .LVU734
 142:Src/RFM69.c   ****   return true;
 3132              		.loc 1 142 12 is_stmt 0 view .LVU735
 3133 01da 034B     		ldr	r3, .L285
 3134 01dc 1E70     		strb	r6, [r3]
 143:Src/RFM69.c   **** }
 3135              		.loc 1 143 3 is_stmt 1 view .LVU736
 143:Src/RFM69.c   **** }
 3136              		.loc 1 143 10 is_stmt 0 view .LVU737
 3137 01de 0120     		movs	r0, #1
 3138              	.L269:
 144:Src/RFM69.c   **** 
 3139              		.loc 1 144 1 view .LVU738
 3140 01e0 0CB0     		add	sp, sp, #48
 3141              	.LCFI35:
 3142              		.cfi_remember_state
 3143              		.cfi_def_cfa_offset 16
 3144              		@ sp needed
 3145 01e2 70BD     		pop	{r4, r5, r6, pc}
 3146              	.LVL359:
 3147              	.L280:
 3148              	.LCFI36:
 3149              		.cfi_restore_state
 139:Src/RFM69.c   ****   }
 3150              		.loc 1 139 12 view .LVU739
 3151 01e4 0020     		movs	r0, #0
 3152 01e6 FBE7     		b	.L269
 3153              	.L286:
 3154              		.align	2
 3155              	.L285:
 3156 01e8 00000000 		.word	_address
 3157              		.cfi_endproc
 3158              	.LFE126:
 3160              		.section	.text.RFM69_interruptHandler,"ax",%progbits
 3161              		.align	1
 3162              		.global	RFM69_interruptHandler
 3163              		.syntax unified
 3164              		.thumb
 3165              		.thumb_func
 3166              		.fpu fpv4-sp-d16
 3168              	RFM69_interruptHandler:
 3169              	.LFB141:
 353:Src/RFM69.c   **** 
 3170              		.loc 1 353 31 is_stmt 1 view -0
 3171              		.cfi_startproc
 3172              		@ args = 0, pretend = 0, frame = 0
 3173              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 83


 3174 0000 10B5     		push	{r4, lr}
 3175              	.LCFI37:
 3176              		.cfi_def_cfa_offset 8
 3177              		.cfi_offset 4, -8
 3178              		.cfi_offset 14, -4
 355:Src/RFM69.c   ****   {
 3179              		.loc 1 355 3 view .LVU741
 355:Src/RFM69.c   ****   {
 3180              		.loc 1 355 13 is_stmt 0 view .LVU742
 3181 0002 324B     		ldr	r3, .L299
 3182 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355:Src/RFM69.c   ****   {
 3183              		.loc 1 355 6 view .LVU743
 3184 0006 032B     		cmp	r3, #3
 3185 0008 05D0     		beq	.L297
 3186              	.L288:
 391:Src/RFM69.c   **** }
 3187              		.loc 1 391 3 is_stmt 1 view .LVU744
 391:Src/RFM69.c   **** }
 3188              		.loc 1 391 10 is_stmt 0 view .LVU745
 3189 000a 0020     		movs	r0, #0
 3190 000c FFF7FEFF 		bl	RFM69_readRSSI
 3191              	.LVL360:
 391:Src/RFM69.c   **** }
 3192              		.loc 1 391 8 view .LVU746
 3193 0010 2F4B     		ldr	r3, .L299+4
 3194 0012 1880     		strh	r0, [r3]	@ movhi
 3195              	.L287:
 392:Src/RFM69.c   **** 
 3196              		.loc 1 392 1 view .LVU747
 3197 0014 10BD     		pop	{r4, pc}
 3198              	.L297:
 355:Src/RFM69.c   ****   {
 3199              		.loc 1 355 33 discriminator 1 view .LVU748
 3200 0016 2820     		movs	r0, #40
 3201 0018 FFF7FEFF 		bl	RFM69_readReg
 3202              	.LVL361:
 355:Src/RFM69.c   ****   {
 3203              		.loc 1 355 29 discriminator 1 view .LVU749
 3204 001c 10F0040F 		tst	r0, #4
 3205 0020 F3D0     		beq	.L288
 3206              	.LBB12:
 357:Src/RFM69.c   ****     //rssi = RFM69_readRSSI();
 3207              		.loc 1 357 5 is_stmt 1 view .LVU750
 359:Src/RFM69.c   ****     RFM69_select();
 3208              		.loc 1 359 5 view .LVU751
 3209 0022 0120     		movs	r0, #1
 3210 0024 FFF7FEFF 		bl	RFM69_setMode
 3211              	.LVL362:
 360:Src/RFM69.c   ****     SPI_transfer8(REG_FIFO & 0x7F);
 3212              		.loc 1 360 5 view .LVU752
 3213 0028 FFF7FEFF 		bl	RFM69_select
 3214              	.LVL363:
 361:Src/RFM69.c   ****     payloadLen = SPI_transfer8(0);
 3215              		.loc 1 361 5 view .LVU753
 3216 002c 0020     		movs	r0, #0
 3217 002e FFF7FEFF 		bl	SPI_transfer8
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 84


 3218              	.LVL364:
 362:Src/RFM69.c   ****     payloadLen = payloadLen > 66 ? 66 : payloadLen; // precaution
 3219              		.loc 1 362 5 view .LVU754
 362:Src/RFM69.c   ****     payloadLen = payloadLen > 66 ? 66 : payloadLen; // precaution
 3220              		.loc 1 362 18 is_stmt 0 view .LVU755
 3221 0032 0020     		movs	r0, #0
 3222 0034 FFF7FEFF 		bl	SPI_transfer8
 3223              	.LVL365:
 363:Src/RFM69.c   ****     targetID = SPI_transfer8(0);
 3224              		.loc 1 363 5 is_stmt 1 view .LVU756
 363:Src/RFM69.c   ****     targetID = SPI_transfer8(0);
 3225              		.loc 1 363 39 is_stmt 0 view .LVU757
 3226 0038 4228     		cmp	r0, #66
 3227 003a 28BF     		it	cs
 3228 003c 4220     		movcs	r0, #66
 363:Src/RFM69.c   ****     targetID = SPI_transfer8(0);
 3229              		.loc 1 363 16 view .LVU758
 3230 003e 254B     		ldr	r3, .L299+8
 3231 0040 1870     		strb	r0, [r3]
 364:Src/RFM69.c   ****     if(!(_promiscuousMode || targetID == _address || targetID == RF69_BROADCAST_ADDR) // match this
 3232              		.loc 1 364 5 is_stmt 1 view .LVU759
 364:Src/RFM69.c   ****     if(!(_promiscuousMode || targetID == _address || targetID == RF69_BROADCAST_ADDR) // match this
 3233              		.loc 1 364 16 is_stmt 0 view .LVU760
 3234 0042 0020     		movs	r0, #0
 3235 0044 FFF7FEFF 		bl	SPI_transfer8
 3236              	.LVL366:
 364:Src/RFM69.c   ****     if(!(_promiscuousMode || targetID == _address || targetID == RF69_BROADCAST_ADDR) // match this
 3237              		.loc 1 364 14 view .LVU761
 3238 0048 234B     		ldr	r3, .L299+12
 3239 004a 1870     		strb	r0, [r3]
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3240              		.loc 1 365 5 is_stmt 1 view .LVU762
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3241              		.loc 1 365 10 is_stmt 0 view .LVU763
 3242 004c 234B     		ldr	r3, .L299+16
 3243 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3244              		.loc 1 365 7 view .LVU764
 3245 0050 2BB9     		cbnz	r3, .L289
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3246              		.loc 1 365 39 discriminator 1 view .LVU765
 3247 0052 234B     		ldr	r3, .L299+20
 3248 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3249              		.loc 1 365 27 discriminator 1 view .LVU766
 3250 0056 9842     		cmp	r0, r3
 3251 0058 01D0     		beq	.L289
 365:Src/RFM69.c   ****        || payloadLen < 3) // address situation could receive packets that are malformed and don't f
 3252              		.loc 1 365 8 discriminator 2 view .LVU767
 3253 005a FF28     		cmp	r0, #255
 3254 005c 03D1     		bne	.L290
 3255              	.L289:
 366:Src/RFM69.c   ****     {
 3256              		.loc 1 366 22 view .LVU768
 3257 005e 1D4B     		ldr	r3, .L299+8
 3258 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Src/RFM69.c   ****     {
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 85


 3259              		.loc 1 366 8 view .LVU769
 3260 0062 022B     		cmp	r3, #2
 3261 0064 07D8     		bhi	.L291
 3262              	.L290:
 368:Src/RFM69.c   ****       RFM69_unselect();
 3263              		.loc 1 368 7 is_stmt 1 view .LVU770
 368:Src/RFM69.c   ****       RFM69_unselect();
 3264              		.loc 1 368 18 is_stmt 0 view .LVU771
 3265 0066 1B4B     		ldr	r3, .L299+8
 3266 0068 0022     		movs	r2, #0
 3267 006a 1A70     		strb	r2, [r3]
 369:Src/RFM69.c   ****       RFM69_receiveBegin();
 3268              		.loc 1 369 7 is_stmt 1 view .LVU772
 3269 006c FFF7FEFF 		bl	RFM69_unselect
 3270              	.LVL367:
 370:Src/RFM69.c   ****       return;
 3271              		.loc 1 370 7 view .LVU773
 3272 0070 FFF7FEFF 		bl	RFM69_receiveBegin
 3273              	.LVL368:
 371:Src/RFM69.c   ****     }
 3274              		.loc 1 371 7 view .LVU774
 3275 0074 CEE7     		b	.L287
 3276              	.L291:
 374:Src/RFM69.c   ****     senderID = SPI_transfer8(0);
 3277              		.loc 1 374 5 view .LVU775
 374:Src/RFM69.c   ****     senderID = SPI_transfer8(0);
 3278              		.loc 1 374 26 is_stmt 0 view .LVU776
 3279 0076 033B     		subs	r3, r3, #3
 374:Src/RFM69.c   ****     senderID = SPI_transfer8(0);
 3280              		.loc 1 374 13 view .LVU777
 3281 0078 1A4A     		ldr	r2, .L299+24
 3282 007a 1370     		strb	r3, [r2]
 375:Src/RFM69.c   ****     CTLbyte = SPI_transfer8(0);
 3283              		.loc 1 375 5 is_stmt 1 view .LVU778
 375:Src/RFM69.c   ****     CTLbyte = SPI_transfer8(0);
 3284              		.loc 1 375 16 is_stmt 0 view .LVU779
 3285 007c 0020     		movs	r0, #0
 3286 007e FFF7FEFF 		bl	SPI_transfer8
 3287              	.LVL369:
 375:Src/RFM69.c   ****     CTLbyte = SPI_transfer8(0);
 3288              		.loc 1 375 14 view .LVU780
 3289 0082 194B     		ldr	r3, .L299+28
 3290 0084 1870     		strb	r0, [r3]
 376:Src/RFM69.c   **** 
 3291              		.loc 1 376 5 is_stmt 1 view .LVU781
 376:Src/RFM69.c   **** 
 3292              		.loc 1 376 15 is_stmt 0 view .LVU782
 3293 0086 0020     		movs	r0, #0
 3294 0088 FFF7FEFF 		bl	SPI_transfer8
 3295              	.LVL370:
 378:Src/RFM69.c   ****     ACK_Requested = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
 3296              		.loc 1 378 5 is_stmt 1 view .LVU783
 378:Src/RFM69.c   ****     ACK_Requested = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
 3297              		.loc 1 378 28 is_stmt 0 view .LVU784
 3298 008c 00F08002 		and	r2, r0, #128
 378:Src/RFM69.c   ****     ACK_Requested = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
 3299              		.loc 1 378 18 view .LVU785
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 86


 3300 0090 164B     		ldr	r3, .L299+32
 3301 0092 1A70     		strb	r2, [r3]
 379:Src/RFM69.c   **** 
 3302              		.loc 1 379 5 is_stmt 1 view .LVU786
 379:Src/RFM69.c   **** 
 3303              		.loc 1 379 29 is_stmt 0 view .LVU787
 3304 0094 00F04000 		and	r0, r0, #64
 3305              	.LVL371:
 379:Src/RFM69.c   **** 
 3306              		.loc 1 379 19 view .LVU788
 3307 0098 154B     		ldr	r3, .L299+36
 3308 009a 1870     		strb	r0, [r3]
 383:Src/RFM69.c   ****     {
 3309              		.loc 1 383 5 is_stmt 1 view .LVU789
 3310              	.LBB13:
 383:Src/RFM69.c   ****     {
 3311              		.loc 1 383 10 view .LVU790
 3312              	.LVL372:
 383:Src/RFM69.c   ****     {
 3313              		.loc 1 383 18 is_stmt 0 view .LVU791
 3314 009c 0024     		movs	r4, #0
 3315              	.LVL373:
 3316              	.L293:
 383:Src/RFM69.c   ****     {
 3317              		.loc 1 383 27 discriminator 1 view .LVU792
 3318 009e 114B     		ldr	r3, .L299+24
 3319 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383:Src/RFM69.c   ****     {
 3320              		.loc 1 383 5 discriminator 1 view .LVU793
 3321 00a2 A342     		cmp	r3, r4
 3322 00a4 07D9     		bls	.L298
 385:Src/RFM69.c   ****     }
 3323              		.loc 1 385 7 is_stmt 1 discriminator 3 view .LVU794
 385:Src/RFM69.c   ****     }
 3324              		.loc 1 385 17 is_stmt 0 discriminator 3 view .LVU795
 3325 00a6 0020     		movs	r0, #0
 3326 00a8 FFF7FEFF 		bl	SPI_transfer8
 3327              	.LVL374:
 385:Src/RFM69.c   ****     }
 3328              		.loc 1 385 15 discriminator 3 view .LVU796
 3329 00ac 114B     		ldr	r3, .L299+40
 3330 00ae 1855     		strb	r0, [r3, r4]
 383:Src/RFM69.c   ****     {
 3331              		.loc 1 383 39 discriminator 3 view .LVU797
 3332 00b0 0134     		adds	r4, r4, #1
 3333              	.LVL375:
 383:Src/RFM69.c   ****     {
 3334              		.loc 1 383 39 discriminator 3 view .LVU798
 3335 00b2 E4B2     		uxtb	r4, r4
 3336              	.LVL376:
 383:Src/RFM69.c   ****     {
 3337              		.loc 1 383 39 discriminator 3 view .LVU799
 3338 00b4 F3E7     		b	.L293
 3339              	.L298:
 383:Src/RFM69.c   ****     {
 3340              		.loc 1 383 39 discriminator 3 view .LVU800
 3341              	.LBE13:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 87


 387:Src/RFM69.c   ****     RFM69_unselect();
 3342              		.loc 1 387 5 is_stmt 1 view .LVU801
 387:Src/RFM69.c   ****     RFM69_unselect();
 3343              		.loc 1 387 8 is_stmt 0 view .LVU802
 3344 00b6 3C2B     		cmp	r3, #60
 3345 00b8 02D8     		bhi	.L295
 387:Src/RFM69.c   ****     RFM69_unselect();
 3346              		.loc 1 387 38 is_stmt 1 discriminator 1 view .LVU803
 387:Src/RFM69.c   ****     RFM69_unselect();
 3347              		.loc 1 387 52 is_stmt 0 discriminator 1 view .LVU804
 3348 00ba 0E4A     		ldr	r2, .L299+40
 3349 00bc 0021     		movs	r1, #0
 3350 00be D154     		strb	r1, [r2, r3]
 3351              	.L295:
 388:Src/RFM69.c   ****     RFM69_setMode(RF69_MODE_RX);
 3352              		.loc 1 388 5 is_stmt 1 view .LVU805
 3353 00c0 FFF7FEFF 		bl	RFM69_unselect
 3354              	.LVL377:
 389:Src/RFM69.c   ****   }
 3355              		.loc 1 389 5 view .LVU806
 3356 00c4 0320     		movs	r0, #3
 3357 00c6 FFF7FEFF 		bl	RFM69_setMode
 3358              	.LVL378:
 3359 00ca 9EE7     		b	.L288
 3360              	.L300:
 3361              		.align	2
 3362              	.L299:
 3363 00cc 00000000 		.word	.LANCHOR1
 3364 00d0 00000000 		.word	rssi
 3365 00d4 00000000 		.word	payloadLen
 3366 00d8 00000000 		.word	targetID
 3367 00dc 00000000 		.word	.LANCHOR0
 3368 00e0 00000000 		.word	_address
 3369 00e4 00000000 		.word	datalen
 3370 00e8 00000000 		.word	senderID
 3371 00ec 00000000 		.word	ACK_RECEIVED
 3372 00f0 00000000 		.word	ACK_Requested
 3373 00f4 00000000 		.word	data
 3374              	.LBE12:
 3375              		.cfi_endproc
 3376              	.LFE141:
 3378              		.section	.text.PrintStruct,"ax",%progbits
 3379              		.align	1
 3380              		.global	PrintStruct
 3381              		.syntax unified
 3382              		.thumb
 3383              		.thumb_func
 3384              		.fpu fpv4-sp-d16
 3386              	PrintStruct:
 3387              	.LFB156:
 839:Src/RFM69.c   **** 
 840:Src/RFM69.c   **** 
 841:Src/RFM69.c   **** // for the STM32, simple decoding of radio payloads into structs must happen in 4-byte blocks to av
 842:Src/RFM69.c   **** // Valid types are: Long, Unsigned Long, and Float.
 843:Src/RFM69.c   **** // https://stackoverflow.com/questions/119123/why-isnt-sizeof-for-a-struct-equal-to-the-sum-of-size
 844:Src/RFM69.c   **** typedef struct {
 845:Src/RFM69.c   ****   uint32_t nodeId; // store this nodeId
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 88


 846:Src/RFM69.c   ****   uint32_t uptime; // uptime in ms
 847:Src/RFM69.c   **** } dataSTR;
 848:Src/RFM69.c   **** dataSTR theData;
 849:Src/RFM69.c   **** // function below
 850:Src/RFM69.c   **** void PrintStruct(void) {
 3388              		.loc 1 850 24 view -0
 3389              		.cfi_startproc
 3390              		@ args = 0, pretend = 0, frame = 0
 3391              		@ frame_needed = 0, uses_anonymous_args = 0
 3392 0000 38B5     		push	{r3, r4, r5, lr}
 3393              	.LCFI38:
 3394              		.cfi_def_cfa_offset 16
 3395              		.cfi_offset 3, -16
 3396              		.cfi_offset 4, -12
 3397              		.cfi_offset 5, -8
 3398              		.cfi_offset 14, -4
 851:Src/RFM69.c   ****   if (datalen != sizeof(dataSTR)) {
 3399              		.loc 1 851 3 view .LVU808
 3400              		.loc 1 851 15 is_stmt 0 view .LVU809
 3401 0002 104B     		ldr	r3, .L305
 3402 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3403              		.loc 1 851 6 view .LVU810
 3404 0006 082B     		cmp	r3, #8
 3405 0008 03D0     		beq	.L302
 852:Src/RFM69.c   ****     debug_printf("Invalid payload received, not matching data struct!\r\n");
 3406              		.loc 1 852 5 is_stmt 1 view .LVU811
 3407 000a 0F48     		ldr	r0, .L305+4
 3408 000c FFF7FEFF 		bl	debug_printf
 3409              	.LVL379:
 3410              	.L301:
 853:Src/RFM69.c   ****     }
 854:Src/RFM69.c   ****   else {
 855:Src/RFM69.c   ****     theData = *(dataSTR *)data;
 856:Src/RFM69.c   ****     sprintf(log_buffer, " nodeId=%ld\r\n", theData.nodeId);
 857:Src/RFM69.c   ****     debug_printf(log_buffer);
 858:Src/RFM69.c   ****     sprintf(log_buffer, " uptime=%ld\r\n", theData.uptime);
 859:Src/RFM69.c   ****     debug_printf(log_buffer);
 860:Src/RFM69.c   ****     //sprintf(log_buffer, " size of the struct=%d\r\n", sizeof(PayloadSTR));
 861:Src/RFM69.c   ****     //debug_printf(log_buffer); // 12
 862:Src/RFM69.c   ****   }
 863:Src/RFM69.c   **** }
 3411              		.loc 1 863 1 is_stmt 0 view .LVU812
 3412 0010 38BD     		pop	{r3, r4, r5, pc}
 3413              	.L302:
 855:Src/RFM69.c   ****     sprintf(log_buffer, " nodeId=%ld\r\n", theData.nodeId);
 3414              		.loc 1 855 5 is_stmt 1 view .LVU813
 855:Src/RFM69.c   ****     sprintf(log_buffer, " nodeId=%ld\r\n", theData.nodeId);
 3415              		.loc 1 855 13 is_stmt 0 view .LVU814
 3416 0012 0E4D     		ldr	r5, .L305+8
 3417 0014 0E4A     		ldr	r2, .L305+12
 3418 0016 2B46     		mov	r3, r5
 3419 0018 1068     		ldr	r0, [r2]	@ unaligned
 3420 001a 5168     		ldr	r1, [r2, #4]	@ unaligned
 3421 001c 03C3     		stmia	r3!, {r0, r1}
 856:Src/RFM69.c   ****     debug_printf(log_buffer);
 3422              		.loc 1 856 5 is_stmt 1 view .LVU815
 3423 001e 0D4C     		ldr	r4, .L305+16
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 89


 3424 0020 0246     		mov	r2, r0
 3425 0022 0D49     		ldr	r1, .L305+20
 3426 0024 2046     		mov	r0, r4
 3427 0026 FFF7FEFF 		bl	sprintf
 3428              	.LVL380:
 857:Src/RFM69.c   ****     sprintf(log_buffer, " uptime=%ld\r\n", theData.uptime);
 3429              		.loc 1 857 5 view .LVU816
 3430 002a 2046     		mov	r0, r4
 3431 002c FFF7FEFF 		bl	debug_printf
 3432              	.LVL381:
 858:Src/RFM69.c   ****     debug_printf(log_buffer);
 3433              		.loc 1 858 5 view .LVU817
 3434 0030 6A68     		ldr	r2, [r5, #4]
 3435 0032 0A49     		ldr	r1, .L305+24
 3436 0034 2046     		mov	r0, r4
 3437 0036 FFF7FEFF 		bl	sprintf
 3438              	.LVL382:
 859:Src/RFM69.c   ****     //sprintf(log_buffer, " size of the struct=%d\r\n", sizeof(PayloadSTR));
 3439              		.loc 1 859 5 view .LVU818
 3440 003a 2046     		mov	r0, r4
 3441 003c FFF7FEFF 		bl	debug_printf
 3442              	.LVL383:
 3443              		.loc 1 863 1 is_stmt 0 view .LVU819
 3444 0040 E6E7     		b	.L301
 3445              	.L306:
 3446 0042 00BF     		.align	2
 3447              	.L305:
 3448 0044 00000000 		.word	datalen
 3449 0048 00000000 		.word	.LC65
 3450 004c 00000000 		.word	theData
 3451 0050 00000000 		.word	data
 3452 0054 00000000 		.word	log_buffer
 3453 0058 38000000 		.word	.LC66
 3454 005c 48000000 		.word	.LC67
 3455              		.cfi_endproc
 3456              	.LFE156:
 3458              		.section	.text.PrintByteByByte,"ax",%progbits
 3459              		.align	1
 3460              		.global	PrintByteByByte
 3461              		.syntax unified
 3462              		.thumb
 3463              		.thumb_func
 3464              		.fpu fpv4-sp-d16
 3466              	PrintByteByByte:
 3467              	.LFB157:
 864:Src/RFM69.c   **** 
 865:Src/RFM69.c   **** 
 866:Src/RFM69.c   **** // if the sending device is setup to send data structures NOT multiples of 4-bytes,
 867:Src/RFM69.c   **** // this is a manual method for decoding each byte into the relevant datatypes
 868:Src/RFM69.c   **** uint16_t firstdata = 0;
 869:Src/RFM69.c   **** uint32_t seconddata = 0;
 870:Src/RFM69.c   **** void PrintByteByByte(void) {
 3468              		.loc 1 870 28 is_stmt 1 view -0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 0
 3471              		@ frame_needed = 0, uses_anonymous_args = 0
 3472 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 90


 3473              	.LCFI39:
 3474              		.cfi_def_cfa_offset 16
 3475              		.cfi_offset 3, -16
 3476              		.cfi_offset 4, -12
 3477              		.cfi_offset 5, -8
 3478              		.cfi_offset 14, -4
 871:Src/RFM69.c   ****   firstdata = RFM69_DATA(0) + (RFM69_DATA(1) << 8);
 3479              		.loc 1 871 3 view .LVU821
 3480              		.loc 1 871 15 is_stmt 0 view .LVU822
 3481 0002 1249     		ldr	r1, .L309
 3482 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 3483              		.loc 1 871 32 view .LVU823
 3484 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3485              		.loc 1 871 29 view .LVU824
 3486 0008 02EB0322 		add	r2, r2, r3, lsl #8
 3487 000c 92B2     		uxth	r2, r2
 3488              		.loc 1 871 13 view .LVU825
 3489 000e 104B     		ldr	r3, .L309+4
 3490 0010 1A80     		strh	r2, [r3]	@ movhi
 872:Src/RFM69.c   ****   seconddata = RFM69_DATA(2) + (RFM69_DATA(3) << 8) + (RFM69_DATA(4) << 16) + (RFM69_DATA(5) << 24)
 3491              		.loc 1 872 3 is_stmt 1 view .LVU826
 3492              		.loc 1 872 16 is_stmt 0 view .LVU827
 3493 0012 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 3494              		.loc 1 872 33 view .LVU828
 3495 0014 C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 3496              		.loc 1 872 30 view .LVU829
 3497 0016 03EB0023 		add	r3, r3, r0, lsl #8
 3498              		.loc 1 872 56 view .LVU830
 3499 001a 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 3500              		.loc 1 872 53 view .LVU831
 3501 001c 03EB0043 		add	r3, r3, r0, lsl #16
 3502              		.loc 1 872 80 view .LVU832
 3503 0020 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 3504              		.loc 1 872 77 view .LVU833
 3505 0022 03EB0163 		add	r3, r3, r1, lsl #24
 3506              		.loc 1 872 14 view .LVU834
 3507 0026 0B4D     		ldr	r5, .L309+8
 3508 0028 2B60     		str	r3, [r5]
 873:Src/RFM69.c   ****   sprintf(log_buffer, "first_data: %d\r\n", firstdata);
 3509              		.loc 1 873 3 is_stmt 1 view .LVU835
 3510 002a 0B4C     		ldr	r4, .L309+12
 3511 002c 0B49     		ldr	r1, .L309+16
 3512 002e 2046     		mov	r0, r4
 3513 0030 FFF7FEFF 		bl	sprintf
 3514              	.LVL384:
 874:Src/RFM69.c   ****   debug_printf(log_buffer);
 3515              		.loc 1 874 3 view .LVU836
 3516 0034 2046     		mov	r0, r4
 3517 0036 FFF7FEFF 		bl	debug_printf
 3518              	.LVL385:
 875:Src/RFM69.c   ****   sprintf(log_buffer, "second_data: %ld\r\n", seconddata);
 3519              		.loc 1 875 3 view .LVU837
 3520 003a 2A68     		ldr	r2, [r5]
 3521 003c 0849     		ldr	r1, .L309+20
 3522 003e 2046     		mov	r0, r4
 3523 0040 FFF7FEFF 		bl	sprintf
 3524              	.LVL386:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 91


 876:Src/RFM69.c   ****   debug_printf(log_buffer);
 3525              		.loc 1 876 3 view .LVU838
 3526 0044 2046     		mov	r0, r4
 3527 0046 FFF7FEFF 		bl	debug_printf
 3528              	.LVL387:
 877:Src/RFM69.c   **** }
 3529              		.loc 1 877 1 is_stmt 0 view .LVU839
 3530 004a 38BD     		pop	{r3, r4, r5, pc}
 3531              	.L310:
 3532              		.align	2
 3533              	.L309:
 3534 004c 00000000 		.word	data
 3535 0050 00000000 		.word	.LANCHOR3
 3536 0054 00000000 		.word	.LANCHOR4
 3537 0058 00000000 		.word	log_buffer
 3538 005c 00000000 		.word	.LC68
 3539 0060 14000000 		.word	.LC69
 3540              		.cfi_endproc
 3541              	.LFE157:
 3543              		.section	.text.PrintRawBytes,"ax",%progbits
 3544              		.align	1
 3545              		.global	PrintRawBytes
 3546              		.syntax unified
 3547              		.thumb
 3548              		.thumb_func
 3549              		.fpu fpv4-sp-d16
 3551              	PrintRawBytes:
 3552              	.LFB158:
 878:Src/RFM69.c   **** 
 879:Src/RFM69.c   **** 
 880:Src/RFM69.c   **** // printing the raw bytes as received.
 881:Src/RFM69.c   **** void PrintRawBytes(void) {
 3553              		.loc 1 881 26 is_stmt 1 view -0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 0
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
 3557 0000 38B5     		push	{r3, r4, r5, lr}
 3558              	.LCFI40:
 3559              		.cfi_def_cfa_offset 16
 3560              		.cfi_offset 3, -16
 3561              		.cfi_offset 4, -12
 3562              		.cfi_offset 5, -8
 3563              		.cfi_offset 14, -4
 882:Src/RFM69.c   ****   for (int i = 0; i < datalen; i++) {
 3564              		.loc 1 882 3 view .LVU841
 3565              	.LBB14:
 3566              		.loc 1 882 8 view .LVU842
 3567              	.LVL388:
 3568              		.loc 1 882 12 is_stmt 0 view .LVU843
 3569 0002 0024     		movs	r4, #0
 3570              	.LVL389:
 3571              	.L312:
 3572              		.loc 1 882 21 discriminator 1 view .LVU844
 3573 0004 084B     		ldr	r3, .L316
 3574 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3575              		.loc 1 882 3 discriminator 1 view .LVU845
 3576 0008 A342     		cmp	r3, r4
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 92


 3577 000a 0CDD     		ble	.L315
 883:Src/RFM69.c   ****     sprintf(log_buffer, "Byte%d Value: %d\r\n", i, RFM69_DATA(i));
 3578              		.loc 1 883 5 is_stmt 1 discriminator 3 view .LVU846
 3579 000c 074D     		ldr	r5, .L316+4
 3580 000e 084B     		ldr	r3, .L316+8
 3581 0010 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3582 0012 2246     		mov	r2, r4
 3583 0014 0749     		ldr	r1, .L316+12
 3584 0016 2846     		mov	r0, r5
 3585 0018 FFF7FEFF 		bl	sprintf
 3586              	.LVL390:
 884:Src/RFM69.c   ****     debug_printf(log_buffer);
 3587              		.loc 1 884 5 discriminator 3 view .LVU847
 3588 001c 2846     		mov	r0, r5
 3589 001e FFF7FEFF 		bl	debug_printf
 3590              	.LVL391:
 882:Src/RFM69.c   ****   for (int i = 0; i < datalen; i++) {
 3591              		.loc 1 882 33 is_stmt 0 discriminator 3 view .LVU848
 3592 0022 0134     		adds	r4, r4, #1
 3593              	.LVL392:
 882:Src/RFM69.c   ****   for (int i = 0; i < datalen; i++) {
 3594              		.loc 1 882 33 discriminator 3 view .LVU849
 3595 0024 EEE7     		b	.L312
 3596              	.L315:
 882:Src/RFM69.c   ****   for (int i = 0; i < datalen; i++) {
 3597              		.loc 1 882 33 discriminator 3 view .LVU850
 3598              	.LBE14:
 885:Src/RFM69.c   ****   }
 886:Src/RFM69.c   ****   // debugging
 887:Src/RFM69.c   ****   //sprintf(log_buffer, "PayloadLen = %d\r\n", payloadLen);
 888:Src/RFM69.c   ****   //debug_printf(log_buffer);
 889:Src/RFM69.c   ****   //sprintf(log_buffer, "datalen %d\r\n", datalen);
 890:Src/RFM69.c   ****   //debug_printf(log_buffer);
 891:Src/RFM69.c   **** }
 3599              		.loc 1 891 1 view .LVU851
 3600 0026 38BD     		pop	{r3, r4, r5, pc}
 3601              	.LVL393:
 3602              	.L317:
 3603              		.loc 1 891 1 view .LVU852
 3604              		.align	2
 3605              	.L316:
 3606 0028 00000000 		.word	datalen
 3607 002c 00000000 		.word	log_buffer
 3608 0030 00000000 		.word	data
 3609 0034 00000000 		.word	.LC70
 3610              		.cfi_endproc
 3611              	.LFE158:
 3613              		.global	seconddata
 3614              		.global	firstdata
 3615              		.comm	theData,8,4
 3616              		.global	_promiscuousMode
 3617              		.global	_powerLevel
 3618              		.comm	_address,1,1
 3619              		.comm	rssi,2,2
 3620              		.global	_mode
 3621              		.comm	ACK_RECEIVED,1,1
 3622              		.comm	ACK_Requested,1,1
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 93


 3623              		.comm	payloadLen,1,1
 3624              		.comm	targetID,1,1
 3625              		.comm	senderID,1,1
 3626              		.comm	datalen,1,1
 3627              		.comm	data,61,4
 3628              		.comm	log_buffer,150,4
 3629              		.section	.bss._promiscuousMode,"aw",%nobits
 3630              		.set	.LANCHOR0,. + 0
 3633              	_promiscuousMode:
 3634 0000 00       		.space	1
 3635              		.section	.bss.firstdata,"aw",%nobits
 3636              		.align	1
 3637              		.set	.LANCHOR3,. + 0
 3640              	firstdata:
 3641 0000 0000     		.space	2
 3642              		.section	.bss.seconddata,"aw",%nobits
 3643              		.align	2
 3644              		.set	.LANCHOR4,. + 0
 3647              	seconddata:
 3648 0000 00000000 		.space	4
 3649              		.section	.data._mode,"aw"
 3650              		.set	.LANCHOR1,. + 0
 3653              	_mode:
 3654 0000 01       		.byte	1
 3655              		.section	.data._powerLevel,"aw"
 3656              		.set	.LANCHOR2,. + 0
 3659              	_powerLevel:
 3660 0000 10       		.byte	16
 3661              		.section	.rodata.PrintByteByByte.str1.4,"aMS",%progbits,1
 3662              		.align	2
 3663              	.LC68:
 3664 0000 66697273 		.ascii	"first_data: %d\015\012\000"
 3664      745F6461 
 3664      74613A20 
 3664      25640D0A 
 3664      00
 3665 0011 000000   		.space	3
 3666              	.LC69:
 3667 0014 7365636F 		.ascii	"second_data: %ld\015\012\000"
 3667      6E645F64 
 3667      6174613A 
 3667      20256C64 
 3667      0D0A00
 3668              		.section	.rodata.PrintRawBytes.str1.4,"aMS",%progbits,1
 3669              		.align	2
 3670              	.LC70:
 3671 0000 42797465 		.ascii	"Byte%d Value: %d\015\012\000"
 3671      25642056 
 3671      616C7565 
 3671      3A202564 
 3671      0D0A00
 3672              		.section	.rodata.PrintStruct.str1.4,"aMS",%progbits,1
 3673              		.align	2
 3674              	.LC65:
 3675 0000 496E7661 		.ascii	"Invalid payload received, not matching data struct!"
 3675      6C696420 
 3675      7061796C 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 94


 3675      6F616420 
 3675      72656365 
 3676 0033 0D0A00   		.ascii	"\015\012\000"
 3677 0036 0000     		.space	2
 3678              	.LC66:
 3679 0038 206E6F64 		.ascii	" nodeId=%ld\015\012\000"
 3679      6549643D 
 3679      256C640D 
 3679      0A00
 3680 0046 0000     		.space	2
 3681              	.LC67:
 3682 0048 20757074 		.ascii	" uptime=%ld\015\012\000"
 3682      696D653D 
 3682      256C640D 
 3682      0A00
 3683              		.section	.rodata.RFM69_readAllRegs.str1.4,"aMS",%progbits,1
 3684              		.align	2
 3685              	.LC0:
 3686 0000 0D0A00   		.ascii	"\015\012\000"
 3687 0003 00       		.space	1
 3688              	.LC1:
 3689 0004 41646472 		.ascii	"Address | HEX\015\012\000"
 3689      65737320 
 3689      7C204845 
 3689      580D0A00 
 3690              	.LC2:
 3691 0014 25303258 		.ascii	"%02X|%02X : \000"
 3691      7C253032 
 3691      58203A20 
 3691      00
 3692 0021 000000   		.space	3
 3693              	.LC3:
 3694 0024 436F6E74 		.ascii	"Controls the automatic Sequencer ( see section 4.2 "
 3694      726F6C73 
 3694      20746865 
 3694      20617574 
 3694      6F6D6174 
 3695 0057 290D0A53 		.ascii	")\015\012SequencerOff : \000"
 3695      65717565 
 3695      6E636572 
 3695      4F666620 
 3695      3A2000
 3696 006a 0000     		.space	2
 3697              	.LC4:
 3698 006c 31202D3E 		.ascii	"1 -> Mode is forced by the user\015\012\000"
 3698      204D6F64 
 3698      65206973 
 3698      20666F72 
 3698      63656420 
 3699 008e 0000     		.space	2
 3700              	.LC5:
 3701 0090 30202D3E 		.ascii	"0 -> Operating mode as selected with Mode bits in R"
 3701      204F7065 
 3701      72617469 
 3701      6E67206D 
 3701      6F646520 
 3702 00c3 65674F70 		.ascii	"egOpMode is automatically reached with the Sequence"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 95


 3702      4D6F6465 
 3702      20697320 
 3702      6175746F 
 3702      6D617469 
 3703 00f6 720D0A00 		.ascii	"r\015\012\000"
 3704 00fa 0000     		.space	2
 3705              	.LC6:
 3706 00fc 0D0A456E 		.ascii	"\015\012Enables Listen mode, should be enabled whil"
 3706      61626C65 
 3706      73204C69 
 3706      7374656E 
 3706      206D6F64 
 3707 0129 73742069 		.ascii	"st in Standby mode:\015\012ListenOn : \000"
 3707      6E205374 
 3707      616E6462 
 3707      79206D6F 
 3707      64653A0D 
 3708 014a 0000     		.space	2
 3709              	.LC7:
 3710 014c 31202D3E 		.ascii	"1 -> On\015\012\000"
 3710      204F6E0D 
 3710      0A00
 3711 0156 0000     		.space	2
 3712              	.LC8:
 3713 0158 30202D3E 		.ascii	"0 -> Off ( see section 4.3)\015\012\000"
 3713      204F6666 
 3713      20282073 
 3713      65652073 
 3713      65637469 
 3714 0176 0000     		.space	2
 3715              	.LC9:
 3716 0178 0D0A4162 		.ascii	"\015\012Aborts Listen mode when set together with L"
 3716      6F727473 
 3716      204C6973 
 3716      74656E20 
 3716      6D6F6465 
 3717 01a5 69737465 		.ascii	"istenOn=0 See section 4.3.4 for details (Always rea"
 3717      6E4F6E3D 
 3717      30205365 
 3717      65207365 
 3717      6374696F 
 3718 01d8 64732030 		.ascii	"ds 0.)\015\012\000"
 3718      2E290D0A 
 3718      00
 3719 01e1 000000   		.space	3
 3720              	.LC10:
 3721 01e4 4552524F 		.ascii	"ERROR - ListenAbort should NEVER return 1 this is a"
 3721      52202D20 
 3721      4C697374 
 3721      656E4162 
 3721      6F727420 
 3722 0217 20777269 		.ascii	" write only register\015\012\000"
 3722      7465206F 
 3722      6E6C7920 
 3722      72656769 
 3722      73746572 
 3723 022e 0000     		.space	2
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 96


 3724              	.LC11:
 3725 0230 0D0A5472 		.ascii	"\015\012Transceiver's operating modes:\015\012Mode "
 3725      616E7363 
 3725      65697665 
 3725      72277320 
 3725      6F706572 
 3726 0257 3A2000   		.ascii	": \000"
 3727 025a 0000     		.space	2
 3728              	.LC12:
 3729 025c 30303020 		.ascii	"000 -> Sleep mode (SLEEP)\015\012\000"
 3729      2D3E2053 
 3729      6C656570 
 3729      206D6F64 
 3729      65202853 
 3730              	.LC13:
 3731 0278 30303120 		.ascii	"001 -> Standby mode (STDBY)\015\012\000"
 3731      2D3E2053 
 3731      74616E64 
 3731      6279206D 
 3731      6F646520 
 3732 0296 0000     		.space	2
 3733              	.LC14:
 3734 0298 30313020 		.ascii	"010 -> Frequency Synthesizer mode (FS)\015\012\000"
 3734      2D3E2046 
 3734      72657175 
 3734      656E6379 
 3734      2053796E 
 3735 02c1 000000   		.space	3
 3736              	.LC15:
 3737 02c4 30313120 		.ascii	"011 -> Transmitter mode (TX)\015\012\000"
 3737      2D3E2054 
 3737      72616E73 
 3737      6D697474 
 3737      6572206D 
 3738 02e3 00       		.space	1
 3739              	.LC16:
 3740 02e4 31303020 		.ascii	"100 -> Receiver Mode (RX)\015\012\000"
 3740      2D3E2052 
 3740      65636569 
 3740      76657220 
 3740      4D6F6465 
 3741              	.LC17:
 3742 0300 25303258 		.ascii	"%02X -> RESERVED\012\000"
 3742      202D3E20 
 3742      52455345 
 3742      52564544 
 3742      0A00
 3743 0312 0000     		.space	2
 3744              	.LC18:
 3745 0314 44617461 		.ascii	"Data Processing mode:\015\012DataMode : \000"
 3745      2050726F 
 3745      63657373 
 3745      696E6720 
 3745      6D6F6465 
 3746 0337 00       		.space	1
 3747              	.LC19:
 3748 0338 3030202D 		.ascii	"00 -> Packet mode\015\012\000"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 97


 3748      3E205061 
 3748      636B6574 
 3748      206D6F64 
 3748      650D0A00 
 3749              	.LC20:
 3750 034c 3031202D 		.ascii	"01 -> reserved\015\012\000"
 3750      3E207265 
 3750      73657276 
 3750      65640D0A 
 3750      00
 3751 035d 000000   		.space	3
 3752              	.LC21:
 3753 0360 3130202D 		.ascii	"10 -> Continuous mode with bit synchronizer\015\012"
 3753      3E20436F 
 3753      6E74696E 
 3753      756F7573 
 3753      206D6F64 
 3754 038d 00       		.ascii	"\000"
 3755 038e 0000     		.space	2
 3756              	.LC22:
 3757 0390 3131202D 		.ascii	"11 -> Continuous mode without bit synchronizer\015\012"
 3757      3E20436F 
 3757      6E74696E 
 3757      756F7573 
 3757      206D6F64 
 3758 03c0 00       		.ascii	"\000"
 3759 03c1 000000   		.space	3
 3760              	.LC23:
 3761 03c4 0D0A4D6F 		.ascii	"\015\012Modulation scheme:\015\012Modulation Type :"
 3761      64756C61 
 3761      74696F6E 
 3761      20736368 
 3761      656D653A 
 3762 03eb 2000     		.ascii	" \000"
 3763 03ed 000000   		.space	3
 3764              	.LC24:
 3765 03f0 3030202D 		.ascii	"00 -> FSK\015\012\000"
 3765      3E204653 
 3765      4B0D0A00 
 3766              	.LC25:
 3767 03fc 3031202D 		.ascii	"01 -> OOK\015\012\000"
 3767      3E204F4F 
 3767      4B0D0A00 
 3768              	.LC26:
 3769 0408 3130202D 		.ascii	"10 -> reserved\015\012\000"
 3769      3E207265 
 3769      73657276 
 3769      65640D0A 
 3769      00
 3770 0419 000000   		.space	3
 3771              	.LC27:
 3772 041c 3131202D 		.ascii	"11 -> reserved\015\012\000"
 3772      3E207265 
 3772      73657276 
 3772      65640D0A 
 3772      00
 3773 042d 000000   		.space	3
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 98


 3774              	.LC28:
 3775 0430 0D0A4461 		.ascii	"\015\012Data shaping: \000"
 3775      74612073 
 3775      68617069 
 3775      6E673A20 
 3775      00
 3776 0441 000000   		.space	3
 3777              	.LC29:
 3778 0444 696E2046 		.ascii	"in FSK:\015\012\000"
 3778      534B3A0D 
 3778      0A00
 3779 044e 0000     		.space	2
 3780              	.LC30:
 3781 0450 696E204F 		.ascii	"in OOK:\015\012\000"
 3781      4F4B3A0D 
 3781      0A00
 3782 045a 0000     		.space	2
 3783              	.LC31:
 3784 045c 4D6F6475 		.ascii	"ModulationShaping : \000"
 3784      6C617469 
 3784      6F6E5368 
 3784      6170696E 
 3784      67203A20 
 3785 0471 000000   		.space	3
 3786              	.LC32:
 3787 0474 3030202D 		.ascii	"00 -> no shaping\015\012\000"
 3787      3E206E6F 
 3787      20736861 
 3787      70696E67 
 3787      0D0A00
 3788 0487 00       		.space	1
 3789              	.LC33:
 3790 0488 3031202D 		.ascii	"01 -> Gaussian filter, BT = 1.0\015\012\000"
 3790      3E204761 
 3790      75737369 
 3790      616E2066 
 3790      696C7465 
 3791 04aa 0000     		.space	2
 3792              	.LC34:
 3793 04ac 3130202D 		.ascii	"10 -> Gaussian filter, BT = 0.5\015\012\000"
 3793      3E204761 
 3793      75737369 
 3793      616E2066 
 3793      696C7465 
 3794 04ce 0000     		.space	2
 3795              	.LC35:
 3796 04d0 3131202D 		.ascii	"11 -> Gaussian filter, BT = 0.3\015\012\000"
 3796      3E204761 
 3796      75737369 
 3796      616E2066 
 3796      696C7465 
 3797 04f2 0000     		.space	2
 3798              	.LC36:
 3799 04f4 3031202D 		.ascii	"01 -> filtering with f(cutoff) = BR\015\012\000"
 3799      3E206669 
 3799      6C746572 
 3799      696E6720 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 99


 3799      77697468 
 3800 051a 0000     		.space	2
 3801              	.LC37:
 3802 051c 3130202D 		.ascii	"10 -> filtering with f(cutoff) = 2*BR\015\012\000"
 3802      3E206669 
 3802      6C746572 
 3802      696E6720 
 3802      77697468 
 3803              	.LC38:
 3804 0544 4552524F 		.ascii	"ERROR - 11 is reserved\015\012\000"
 3804      52202D20 
 3804      31312069 
 3804      73207265 
 3804      73657276 
 3805 055d 000000   		.space	3
 3806              	.LC39:
 3807 0560 42697420 		.ascii	"Bit Rate (Chip Rate when Manchester encoding is ena"
 3807      52617465 
 3807      20284368 
 3807      69702052 
 3807      61746520 
 3808 0593 626C6564 		.ascii	"bled)\015\012BitRate : \000"
 3808      290D0A42 
 3808      69745261 
 3808      7465203A 
 3808      2000
 3809 05a5 000000   		.space	3
 3810              	.LC40:
 3811 05a8 256C6C64 		.ascii	"%lld\000"
 3811      00
 3812 05ad 000000   		.space	3
 3813              	.LC41:
 3814 05b0 46726571 		.ascii	"Frequency deviation\015\012Fdev : \000"
 3814      75656E63 
 3814      79206465 
 3814      76696174 
 3814      696F6E0D 
 3815 05cd 000000   		.space	3
 3816              	.LC42:
 3817 05d0 256C6400 		.ascii	"%ld\000"
 3818              	.LC43:
 3819 05d4 52462043 		.ascii	"RF Carrier frequency\015\012FRF : \000"
 3819      61727269 
 3819      65722066 
 3819      72657175 
 3819      656E6379 
 3820 05f1 000000   		.space	3
 3821              	.LC44:
 3822 05f4 52432063 		.ascii	"RC calibration control & status\015\012RcCalDone : "
 3822      616C6962 
 3822      72617469 
 3822      6F6E2063 
 3822      6F6E7472 
 3823 0621 00       		.ascii	"\000"
 3824 0622 0000     		.space	2
 3825              	.LC45:
 3826 0624 31202D3E 		.ascii	"1 -> RC calibration is over\015\012\000"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 100


 3826      20524320 
 3826      63616C69 
 3826      62726174 
 3826      696F6E20 
 3827 0642 0000     		.space	2
 3828              	.LC46:
 3829 0644 30202D3E 		.ascii	"0 -> RC calibration is in progress\015\012\000"
 3829      20524320 
 3829      63616C69 
 3829      62726174 
 3829      696F6E20 
 3830 0669 000000   		.space	3
 3831              	.LC47:
 3832 066c 496D7072 		.ascii	"Improved AFC routine for signals with modulation in"
 3832      6F766564 
 3832      20414643 
 3832      20726F75 
 3832      74696E65 
 3833 069f 64657820 		.ascii	"dex lower than 2.  Refer to section 3.4.16 for deta"
 3833      6C6F7765 
 3833      72207468 
 3833      616E2032 
 3833      2E202052 
 3834 06d2 696C730D 		.ascii	"ils\015\012AfcLowBetaOn : \000"
 3834      0A416663 
 3834      4C6F7742 
 3834      6574614F 
 3834      6E203A20 
 3835 06e7 00       		.space	1
 3836              	.LC48:
 3837 06e8 31202D3E 		.ascii	"1 -> Improved AFC routine\015\012\000"
 3837      20496D70 
 3837      726F7665 
 3837      64204146 
 3837      4320726F 
 3838              	.LC49:
 3839 0704 30202D3E 		.ascii	"0 -> Standard AFC routine\015\012\000"
 3839      20537461 
 3839      6E646172 
 3839      64204146 
 3839      4320726F 
 3840              	.LC50:
 3841 0720 52657365 		.ascii	"Reserved\015\012\000"
 3841      72766564 
 3841      0D0A00
 3842 072b 00       		.space	1
 3843              	.LC51:
 3844 072c 5265736F 		.ascii	"Resolution of Listen mode Idle time (calibrated RC "
 3844      6C757469 
 3844      6F6E206F 
 3844      66204C69 
 3844      7374656E 
 3845 075f 6F736329 		.ascii	"osc):\015\012ListenResolIdle : \000"
 3845      3A0D0A4C 
 3845      69737465 
 3845      6E526573 
 3845      6F6C4964 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 101


 3846 0779 000000   		.space	3
 3847              	.LC52:
 3848 077c 3030202D 		.ascii	"00 -> reserved\015\012\000"
 3848      3E207265 
 3848      73657276 
 3848      65640D0A 
 3848      00
 3849 078d 000000   		.space	3
 3850              	.LC53:
 3851 0790 3031202D 		.ascii	"01 -> 64 us\015\012\000"
 3851      3E203634 
 3851      2075730D 
 3851      0A00
 3852 079e 0000     		.space	2
 3853              	.LC54:
 3854 07a0 3130202D 		.ascii	"10 -> 4.1 ms\015\012\000"
 3854      3E20342E 
 3854      31206D73 
 3854      0D0A00
 3855 07af 00       		.space	1
 3856              	.LC55:
 3857 07b0 3131202D 		.ascii	"11 -> 262 ms\015\012\000"
 3857      3E203236 
 3857      32206D73 
 3857      0D0A00
 3858 07bf 00       		.space	1
 3859              	.LC56:
 3860 07c0 0D0A5265 		.ascii	"\015\012Resolution of Listen mode Rx time (calibrat"
 3860      736F6C75 
 3860      74696F6E 
 3860      206F6620 
 3860      4C697374 
 3861 07ed 65642052 		.ascii	"ed RC osc):\015\012ListenResolRx : \000"
 3861      43206F73 
 3861      63293A0D 
 3861      0A4C6973 
 3861      74656E52 
 3862 080b 00       		.space	1
 3863              	.LC57:
 3864 080c 0D0A4372 		.ascii	"\015\012Criteria for packet acceptance in Listen mo"
 3864      69746572 
 3864      69612066 
 3864      6F722070 
 3864      61636B65 
 3865 0839 64653A0D 		.ascii	"de:\015\012ListenCriteria : \000"
 3865      0A4C6973 
 3865      74656E43 
 3865      72697465 
 3865      72696120 
 3866              	.LC58:
 3867 0850 31202D3E 		.ascii	"1 -> signal strength is above RssiThreshold and Syn"
 3867      20736967 
 3867      6E616C20 
 3867      73747265 
 3867      6E677468 
 3868 0883 63416464 		.ascii	"cAddress matched\015\012\000"
 3868      72657373 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 102


 3868      206D6174 
 3868      63686564 
 3868      0D0A00
 3869 0896 0000     		.space	2
 3870              	.LC59:
 3871 0898 30202D3E 		.ascii	"0 -> signal strength is above RssiThreshold\015\012"
 3871      20736967 
 3871      6E616C20 
 3871      73747265 
 3871      6E677468 
 3872 08c5 00       		.ascii	"\000"
 3873 08c6 0000     		.space	2
 3874              	.LC60:
 3875 08c8 0D0A4163 		.ascii	"\015\012Action taken after acceptance of a packet i"
 3875      74696F6E 
 3875      2074616B 
 3875      656E2061 
 3875      66746572 
 3876 08f5 6E204C69 		.ascii	"n Listen mode:\015\012ListenEnd : \000"
 3876      7374656E 
 3876      206D6F64 
 3876      653A0D0A 
 3876      4C697374 
 3877 0912 0000     		.space	2
 3878              	.LC61:
 3879 0914 3030202D 		.ascii	"00 -> chip stays in Rx mode. Listen mode stops and "
 3879      3E206368 
 3879      69702073 
 3879      74617973 
 3879      20696E20 
 3880 0947 6D757374 		.ascii	"must be disabled (see section 4.3)\015\012\000"
 3880      20626520 
 3880      64697361 
 3880      626C6564 
 3880      20287365 
 3881              	.LC62:
 3882 096c 3031202D 		.ascii	"01 -> chip stays in Rx mode until PayloadReady or T"
 3882      3E206368 
 3882      69702073 
 3882      74617973 
 3882      20696E20 
 3883 099f 696D656F 		.ascii	"imeout \015\012interrupt occurs.  It then goes to t"
 3883      7574200D 
 3883      0A696E74 
 3883      65727275 
 3883      7074206F 
 3884 09cc 6865206D 		.ascii	"he mode defined by Mode. \015\012Listen mode stops "
 3884      6F646520 
 3884      64656669 
 3884      6E656420 
 3884      6279204D 
 3885 09f9 616E6420 		.ascii	"and must be disabled (see section 4.3)\015\012\000"
 3885      6D757374 
 3885      20626520 
 3885      64697361 
 3885      626C6564 
 3886 0a22 0000     		.space	2
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 103


 3887              	.LC63:
 3888 0a24 3130202D 		.ascii	"10 -> chip stays in Rx mode until PayloadReady or T"
 3888      3E206368 
 3888      69702073 
 3888      74617973 
 3888      20696E20 
 3889 0a57 696D656F 		.ascii	"imeout occurs.  Listen mode then resumes in Idle st"
 3889      7574206F 
 3889      63637572 
 3889      732E2020 
 3889      4C697374 
 3890 0a8a 6174652E 		.ascii	"ate.  FIFO content is lost at next Rx wakeup.\015\012"
 3890      20204649 
 3890      464F2063 
 3890      6F6E7465 
 3890      6E742069 
 3891 0ab9 00       		.ascii	"\000"
 3892 0aba 0000     		.space	2
 3893              	.LC64:
 3894 0abc 3131202D 		.ascii	"11 -> Reserved\015\012\000"
 3894      3E205265 
 3894      73657276 
 3894      65640D0A 
 3894      00
 3895              		.text
 3896              	.Letext0:
 3897              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types
 3898              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3899              		.file 4 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 3900              		.file 5 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 3901              		.file 6 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h
 3902              		.file 7 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 3903              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 3904              		.file 9 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 3905              		.file 10 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 3906              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 3907              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 3908              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 3909              		.file 14 "Inc/usart.h"
 3910              		.file 15 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdio.h"
 3911              		.file 16 "Inc/RFM69_ext.h"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 104


DEFINED SYMBOLS
                            *ABS*:0000000000000000 RFM69.c
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:18     .text.RFM69_ACKRequested:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:26     .text.RFM69_ACKRequested:0000000000000000 RFM69_ACKRequested
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:60     .text.RFM69_ACKRequested:000000000000001c $d
                            *COM*:0000000000000001 ACK_Requested
                            *COM*:0000000000000001 targetID
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:66     .text.RFM69_promiscuous:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:73     .text.RFM69_promiscuous:0000000000000000 RFM69_promiscuous
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:90     .text.RFM69_promiscuous:0000000000000008 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:95     .text.RFM69_select:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:102    .text.RFM69_select:0000000000000000 RFM69_select
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:126    .text.RFM69_unselect:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:133    .text.RFM69_unselect:0000000000000000 RFM69_unselect
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:158    .text.RFM69_readAllRegs:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:165    .text.RFM69_readAllRegs:0000000000000000 RFM69_readAllRegs
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:374    .text.RFM69_readAllRegs:00000000000000ec $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:388    .text.RFM69_readAllRegs:0000000000000120 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:820    .text.RFM69_readAllRegs:00000000000002e8 $d
                            *COM*:0000000000000096 log_buffer
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:871    .text.RFM69_readAllRegs:00000000000003a0 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1150   .text.RFM69_readAllRegs:00000000000004d0 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1176   .text.RFM69_readReg:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1183   .text.RFM69_readReg:0000000000000000 RFM69_readReg
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1227   .text.RFM69_getFrequency:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1234   .text.RFM69_getFrequency:0000000000000000 RFM69_getFrequency
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1277   .text.RFM69_getFrequency:0000000000000030 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1283   .text.RFM69_writeReg:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1290   .text.RFM69_writeReg:0000000000000000 RFM69_writeReg
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1327   .text.RFM69_setMode:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1334   .text.RFM69_setMode:0000000000000000 RFM69_setMode
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1360   .text.RFM69_setMode:0000000000000014 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1499   .text.RFM69_setMode:00000000000000b4 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1504   .text.RFM69_sleep:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1511   .text.RFM69_sleep:0000000000000000 RFM69_sleep
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1533   .text.RFM69_setFrequency:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1540   .text.RFM69_setFrequency:0000000000000000 RFM69_setFrequency
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1626   .text.RFM69_setFrequency:0000000000000060 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1633   .text.RFM69_setAddress:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1640   .text.RFM69_setAddress:0000000000000000 RFM69_setAddress
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1669   .text.RFM69_setAddress:0000000000000010 $d
                            *COM*:0000000000000001 _address
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1674   .text.RFM69_setNetwork:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1681   .text.RFM69_setNetwork:0000000000000000 RFM69_setNetwork
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1713   .text.RFM69_setPowerLevel:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1720   .text.RFM69_setPowerLevel:0000000000000000 RFM69_setPowerLevel
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1764   .text.RFM69_setPowerLevel:0000000000000028 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1769   .text.RFM69_receiveBegin:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1776   .text.RFM69_receiveBegin:0000000000000000 RFM69_receiveBegin
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1852   .text.RFM69_receiveBegin:0000000000000050 $d
                            *COM*:0000000000000001 datalen
                            *COM*:0000000000000001 senderID
                            *COM*:0000000000000001 payloadLen
                            *COM*:0000000000000001 ACK_RECEIVED
                            *COM*:0000000000000002 rssi
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1863   .text.RFM69_receiveDone:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1870   .text.RFM69_receiveDone:0000000000000000 RFM69_receiveDone
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 105


/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1931   .text.RFM69_receiveDone:0000000000000034 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1937   .text.RFM69_ACKReceived:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1944   .text.RFM69_ACKReceived:0000000000000000 RFM69_ACKReceived
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1995   .text.RFM69_ACKReceived:000000000000002c $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2001   .text.RFM69_readRSSI:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2008   .text.RFM69_readRSSI:0000000000000000 RFM69_readRSSI
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2068   .text.RFM69_canSend:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2075   .text.RFM69_canSend:0000000000000000 RFM69_canSend
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2130   .text.RFM69_canSend:0000000000000034 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2136   .text.RFM69_setHighPower:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2143   .text.RFM69_setHighPower:0000000000000000 RFM69_setHighPower
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2165   .text.RFM69_setHighPowerRegs:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2172   .text.RFM69_setHighPowerRegs:0000000000000000 RFM69_setHighPowerRegs
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2221   .text.RFM69_readTemperature:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2228   .text.RFM69_readTemperature:0000000000000000 RFM69_readTemperature
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2278   .text.RFM69_rcCalibration:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2285   .text.RFM69_rcCalibration:0000000000000000 RFM69_rcCalibration
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2317   .text.RFM69_sendFrame:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2323   .text.RFM69_sendFrame:0000000000000000 RFM69_sendFrame
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2477   .text.RFM69_sendFrame:00000000000000a0 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2482   .text.RFM69_send:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2489   .text.RFM69_send:0000000000000000 RFM69_send
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2557   .text.RFM69_sendWithRetry:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2564   .text.RFM69_sendWithRetry:0000000000000000 RFM69_sendWithRetry
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2653   .text.RFM69_sendACK:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2660   .text.RFM69_sendACK:0000000000000000 RFM69_sendACK
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2758   .text.RFM69_sendACK:0000000000000060 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2765   .text.RFM69_encrypt:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2772   .text.RFM69_encrypt:0000000000000000 RFM69_encrypt
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2857   .text.RFM69_initialize:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:2864   .text.RFM69_initialize:0000000000000000 RFM69_initialize
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3156   .text.RFM69_initialize:00000000000001e8 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3161   .text.RFM69_interruptHandler:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3168   .text.RFM69_interruptHandler:0000000000000000 RFM69_interruptHandler
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3363   .text.RFM69_interruptHandler:00000000000000cc $d
                            *COM*:000000000000003d data
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3379   .text.PrintStruct:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3386   .text.PrintStruct:0000000000000000 PrintStruct
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3448   .text.PrintStruct:0000000000000044 $d
                            *COM*:0000000000000008 theData
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3459   .text.PrintByteByByte:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3466   .text.PrintByteByByte:0000000000000000 PrintByteByByte
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3534   .text.PrintByteByByte:000000000000004c $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3544   .text.PrintRawBytes:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3551   .text.PrintRawBytes:0000000000000000 PrintRawBytes
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3606   .text.PrintRawBytes:0000000000000028 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3647   .bss.seconddata:0000000000000000 seconddata
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3640   .bss.firstdata:0000000000000000 firstdata
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3633   .bss._promiscuousMode:0000000000000000 _promiscuousMode
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3659   .data._powerLevel:0000000000000000 _powerLevel
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3653   .data._mode:0000000000000000 _mode
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3634   .bss._promiscuousMode:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3636   .bss.firstdata:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3643   .bss.seconddata:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3662   .rodata.PrintByteByByte.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3669   .rodata.PrintRawBytes.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3673   .rodata.PrintStruct.str1.4:0000000000000000 $d
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s 			page 106


/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:3684   .rodata.RFM69_readAllRegs.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1365   .text.RFM69_setMode:0000000000000019 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccUqZ6Yc.s:1365   .text.RFM69_setMode:000000000000001a $t

UNDEFINED SYMBOLS
noInterrupts
RFM69_SetCSPin
interrupts
__aeabi_uldivmod
debug_printf
sprintf
SPI_transfer8
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_ddiv
Timeout_SetTimeout1
RFM69_ReadDIO0Pin
Timeout_IsTimeout1
