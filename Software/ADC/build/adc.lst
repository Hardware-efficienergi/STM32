ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_ADC1_Init
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	MX_ADC1_Init:
  28              	.LFB126:
  29              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 2


  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** 
  45:Src/adc.c     **** /* USER CODE BEGIN 0 */
  46:Src/adc.c     **** #include "usart.h"
  47:Src/adc.c     **** char log_buffer[100];
  48:Src/adc.c     **** /* USER CODE END 0 */
  49:Src/adc.c     **** 
  50:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  51:Src/adc.c     **** 
  52:Src/adc.c     **** /* ADC1 init function */
  53:Src/adc.c     **** void MX_ADC1_Init(void)
  54:Src/adc.c     **** {
  30              		.loc 1 54 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  34              		.loc 1 55 3 view .LVU1
  56:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  35              		.loc 1 56 3 view .LVU2
  57:Src/adc.c     **** 
  58:Src/adc.c     ****     /**Common config 
  59:Src/adc.c     ****     */
  60:Src/adc.c     ****   hadc1.Instance = ADC1;
  36              		.loc 1 60 3 view .LVU3
  54:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  37              		.loc 1 54 1 is_stmt 0 view .LVU4
  38 0000 30B5     		push	{r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 12
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 60 18 view .LVU5
  45 0002 294B     		ldr	r3, .L24
  46 0004 4FF0A041 		mov	r1, #1342177280
  61:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  47              		.loc 1 61 29 view .LVU6
  48 0008 0022     		movs	r2, #0
  54:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  49              		.loc 1 54 1 view .LVU7
  50 000a 8BB0     		sub	sp, sp, #44
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 56
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 3


  62:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  63:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  64:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  65:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  67:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  68:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  69:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  53              		.loc 1 69 30 view .LVU8
  54 000c 0225     		movs	r5, #2
  70:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  71:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  55              		.loc 1 71 27 view .LVU9
  56 000e 0424     		movs	r4, #4
  60:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  57              		.loc 1 60 18 view .LVU10
  58 0010 1960     		str	r1, [r3]
  61:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  59              		.loc 1 61 3 is_stmt 1 view .LVU11
  72:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  73:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  74:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  60              		.loc 1 74 7 is_stmt 0 view .LVU12
  61 0012 1846     		mov	r0, r3
  63:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  62              		.loc 1 63 27 view .LVU13
  63 0014 0121     		movs	r1, #1
  69:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  64              		.loc 1 69 30 view .LVU14
  65 0016 1D62     		str	r5, [r3, #32]
  71:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  66              		.loc 1 71 27 view .LVU15
  67 0018 5C61     		str	r4, [r3, #20]
  62:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  68              		.loc 1 62 25 view .LVU16
  69 001a C3E90122 		strd	r2, r2, [r3, #4]
  63:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  70              		.loc 1 63 3 is_stmt 1 view .LVU17
  64:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  71              		.loc 1 64 33 is_stmt 0 view .LVU18
  72 001e DA61     		str	r2, [r3, #28]
  65:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  73              		.loc 1 65 36 view .LVU19
  74 0020 5A62     		str	r2, [r3, #36]
  66:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  75              		.loc 1 66 35 view .LVU20
  76 0022 1A63     		str	r2, [r3, #48]
  68:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  77              		.loc 1 68 24 view .LVU21
  78 0024 DA60     		str	r2, [r3, #12]
  70:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  79              		.loc 1 70 36 view .LVU22
  80 0026 5A63     		str	r2, [r3, #52]
  72:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  81              		.loc 1 72 31 view .LVU23
  82 0028 9A61     		str	r2, [r3, #24]
  73:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 4


  83              		.loc 1 73 22 view .LVU24
  84 002a 9A63     		str	r2, [r3, #56]
  63:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  85              		.loc 1 63 27 view .LVU25
  86 002c 1961     		str	r1, [r3, #16]
  64:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  87              		.loc 1 64 3 is_stmt 1 view .LVU26
  65:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  88              		.loc 1 65 3 view .LVU27
  66:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  89              		.loc 1 66 3 view .LVU28
  67:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  90              		.loc 1 67 3 view .LVU29
  67:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  91              		.loc 1 67 31 is_stmt 0 view .LVU30
  92 002e D962     		str	r1, [r3, #44]
  68:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  93              		.loc 1 68 3 is_stmt 1 view .LVU31
  69:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  94              		.loc 1 69 3 view .LVU32
  70:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  95              		.loc 1 70 3 view .LVU33
  71:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  96              		.loc 1 71 3 view .LVU34
  72:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  97              		.loc 1 72 3 view .LVU35
  73:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  98              		.loc 1 73 3 view .LVU36
  99              		.loc 1 74 3 view .LVU37
 100              		.loc 1 74 7 is_stmt 0 view .LVU38
 101 0030 FFF7FEFF 		bl	HAL_ADC_Init
 102              	.LVL0:
 103              		.loc 1 74 6 view .LVU39
 104 0034 10BB     		cbnz	r0, .L20
 105              	.L2:
  75:Src/adc.c     ****   {
  76:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  77:Src/adc.c     ****   }
  78:Src/adc.c     **** 
  79:Src/adc.c     ****     /**Configure the ADC multi-mode 
  80:Src/adc.c     ****     */
  81:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 106              		.loc 1 81 3 is_stmt 1 view .LVU40
 107              		.loc 1 81 18 is_stmt 0 view .LVU41
 108 0036 0023     		movs	r3, #0
  82:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 109              		.loc 1 82 7 view .LVU42
 110 0038 01A9     		add	r1, sp, #4
 111 003a 1B48     		ldr	r0, .L24
  81:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 112              		.loc 1 81 18 view .LVU43
 113 003c 0193     		str	r3, [sp, #4]
 114              		.loc 1 82 3 is_stmt 1 view .LVU44
 115              		.loc 1 82 7 is_stmt 0 view .LVU45
 116 003e FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 117              	.LVL1:
 118              		.loc 1 82 6 view .LVU46
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 5


 119 0042 58BB     		cbnz	r0, .L21
 120              	.L3:
  83:Src/adc.c     ****   {
  84:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  85:Src/adc.c     ****   }
  86:Src/adc.c     **** 
  87:Src/adc.c     ****     /**Configure Regular Channel 
  88:Src/adc.c     ****     */
  89:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 121              		.loc 1 89 3 is_stmt 1 view .LVU47
  90:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 122              		.loc 1 90 3 view .LVU48
  91:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 123              		.loc 1 91 3 view .LVU49
  92:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 124              		.loc 1 92 3 view .LVU50
  93:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 125              		.loc 1 93 3 view .LVU51
  94:Src/adc.c     ****   sConfig.Offset = 0;
 126              		.loc 1 94 3 view .LVU52
  89:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 127              		.loc 1 89 19 is_stmt 0 view .LVU53
 128 0044 0122     		movs	r2, #1
 129 0046 0123     		movs	r3, #1
 130 0048 CDE90423 		strd	r2, [sp, #16]
 131 004c 0722     		movs	r2, #7
 132 004e 0023     		movs	r3, #0
 133 0050 CDE90623 		strd	r2, [sp, #24]
  95:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 134              		.loc 1 95 7 view .LVU54
 135 0054 04A9     		add	r1, sp, #16
  89:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 136              		.loc 1 89 19 view .LVU55
 137 0056 0022     		movs	r2, #0
 138 0058 0023     		movs	r3, #0
 139              		.loc 1 95 7 view .LVU56
 140 005a 1348     		ldr	r0, .L24
  89:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 141              		.loc 1 89 19 view .LVU57
 142 005c CDE90823 		strd	r2, [sp, #32]
 143              		.loc 1 95 3 is_stmt 1 view .LVU58
 144              		.loc 1 95 7 is_stmt 0 view .LVU59
 145 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 146              	.LVL2:
 147              		.loc 1 95 6 view .LVU60
 148 0064 A8B9     		cbnz	r0, .L22
 149              	.L4:
  96:Src/adc.c     ****   {
  97:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  98:Src/adc.c     ****   }
  99:Src/adc.c     **** 
 100:Src/adc.c     ****     /**Configure Regular Channel 
 101:Src/adc.c     ****     */
 102:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 150              		.loc 1 102 3 is_stmt 1 view .LVU61
 103:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 151              		.loc 1 103 3 view .LVU62
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 6


 102:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 152              		.loc 1 102 19 is_stmt 0 view .LVU63
 153 0066 0222     		movs	r2, #2
 154 0068 0223     		movs	r3, #2
 104:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 155              		.loc 1 104 7 view .LVU64
 156 006a 04A9     		add	r1, sp, #16
 157 006c 0E48     		ldr	r0, .L24
 102:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 158              		.loc 1 102 19 view .LVU65
 159 006e CDE90423 		strd	r2, [sp, #16]
 160              		.loc 1 104 3 is_stmt 1 view .LVU66
 161              		.loc 1 104 7 is_stmt 0 view .LVU67
 162 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 163              	.LVL3:
 164              		.loc 1 104 6 view .LVU68
 165 0076 30B9     		cbnz	r0, .L23
 105:Src/adc.c     ****   {
 106:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 107:Src/adc.c     ****   }
 108:Src/adc.c     **** 
 109:Src/adc.c     **** }
 166              		.loc 1 109 1 view .LVU69
 167 0078 0BB0     		add	sp, sp, #44
 168              	.LCFI2:
 169              		.cfi_remember_state
 170              		.cfi_def_cfa_offset 12
 171              		@ sp needed
 172 007a 30BD     		pop	{r4, r5, pc}
 173              	.L20:
 174              	.LCFI3:
 175              		.cfi_restore_state
  76:Src/adc.c     ****   }
 176              		.loc 1 76 5 is_stmt 1 view .LVU70
 177 007c 4C21     		movs	r1, #76
 178 007e 0B48     		ldr	r0, .L24+4
 179 0080 FFF7FEFF 		bl	_Error_Handler
 180              	.LVL4:
 181 0084 D7E7     		b	.L2
 182              	.L23:
 106:Src/adc.c     ****   }
 183              		.loc 1 106 5 view .LVU71
 184 0086 6A21     		movs	r1, #106
 185 0088 0848     		ldr	r0, .L24+4
 186 008a FFF7FEFF 		bl	_Error_Handler
 187              	.LVL5:
 188              		.loc 1 109 1 is_stmt 0 view .LVU72
 189 008e 0BB0     		add	sp, sp, #44
 190              	.LCFI4:
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 12
 193              		@ sp needed
 194 0090 30BD     		pop	{r4, r5, pc}
 195              	.L22:
 196              	.LCFI5:
 197              		.cfi_restore_state
  97:Src/adc.c     ****   }
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 7


 198              		.loc 1 97 5 is_stmt 1 view .LVU73
 199 0092 6121     		movs	r1, #97
 200 0094 0548     		ldr	r0, .L24+4
 201 0096 FFF7FEFF 		bl	_Error_Handler
 202              	.LVL6:
 203 009a E4E7     		b	.L4
 204              	.L21:
  84:Src/adc.c     ****   }
 205              		.loc 1 84 5 view .LVU74
 206 009c 5421     		movs	r1, #84
 207 009e 0348     		ldr	r0, .L24+4
 208 00a0 FFF7FEFF 		bl	_Error_Handler
 209              	.LVL7:
 210 00a4 CEE7     		b	.L3
 211              	.L25:
 212 00a6 00BF     		.align	2
 213              	.L24:
 214 00a8 00000000 		.word	hadc1
 215 00ac 00000000 		.word	.LC0
 216              		.cfi_endproc
 217              	.LFE126:
 219              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 220              		.align	1
 221              		.p2align 2,,3
 222              		.global	HAL_ADC_MspInit
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	HAL_ADC_MspInit:
 229              	.LVL8:
 230              	.LFB127:
 110:Src/adc.c     **** 
 111:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 112:Src/adc.c     **** {
 231              		.loc 1 112 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 24
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Src/adc.c     **** 
 114:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 235              		.loc 1 114 3 view .LVU76
 115:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 236              		.loc 1 115 3 view .LVU77
 237              		.loc 1 115 5 is_stmt 0 view .LVU78
 238 0000 0368     		ldr	r3, [r0]
 239 0002 B3F1A04F 		cmp	r3, #1342177280
 240 0006 00D0     		beq	.L32
 241 0008 7047     		bx	lr
 242              	.L32:
 116:Src/adc.c     ****   {
 117:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 118:Src/adc.c     **** 
 119:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 120:Src/adc.c     ****     /* ADC1 clock enable */
 121:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_ENABLE();
 243              		.loc 1 121 5 is_stmt 1 view .LVU79
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 8


 244              	.LBB2:
 245              		.loc 1 121 5 view .LVU80
 246              		.loc 1 121 5 view .LVU81
 247 000a 03F17043 		add	r3, r3, #-268435456
 248 000e 03F50433 		add	r3, r3, #135168
 249              	.LBE2:
 112:Src/adc.c     **** 
 250              		.loc 1 112 1 is_stmt 0 view .LVU82
 251 0012 10B5     		push	{r4, lr}
 252              	.LCFI6:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 4, -8
 255              		.cfi_offset 14, -4
 256              	.LBB3:
 257              		.loc 1 121 5 view .LVU83
 258 0014 5A69     		ldr	r2, [r3, #20]
 259 0016 42F08052 		orr	r2, r2, #268435456
 260 001a 5A61     		str	r2, [r3, #20]
 261              		.loc 1 121 5 is_stmt 1 view .LVU84
 262 001c 5B69     		ldr	r3, [r3, #20]
 263              	.LBE3:
 112:Src/adc.c     **** 
 264              		.loc 1 112 1 is_stmt 0 view .LVU85
 265 001e 86B0     		sub	sp, sp, #24
 266              	.LCFI7:
 267              		.cfi_def_cfa_offset 32
 268              	.LBB4:
 269              		.loc 1 121 5 view .LVU86
 270 0020 03F08053 		and	r3, r3, #268435456
 271 0024 0093     		str	r3, [sp]
 272              		.loc 1 121 5 is_stmt 1 view .LVU87
 273              	.LBE4:
 122:Src/adc.c     ****   
 123:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 124:Src/adc.c     ****     PA0     ------> ADC1_IN1
 125:Src/adc.c     ****     PA1     ------> ADC1_IN2 
 126:Src/adc.c     ****     */
 127:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 128:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 129:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 274              		.loc 1 129 26 is_stmt 0 view .LVU88
 275 0026 0024     		movs	r4, #0
 127:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 276              		.loc 1 127 25 view .LVU89
 277 0028 0323     		movs	r3, #3
 130:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 278              		.loc 1 130 5 view .LVU90
 279 002a 01A9     		add	r1, sp, #4
 280 002c 4FF09040 		mov	r0, #1207959552
 281              	.LVL9:
 128:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 282              		.loc 1 128 26 view .LVU91
 283 0030 CDE90133 		strd	r3, r3, [sp, #4]
 284              	.LBB5:
 121:Src/adc.c     ****   
 285              		.loc 1 121 5 view .LVU92
 286 0034 009A     		ldr	r2, [sp]
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 9


 287              	.LBE5:
 127:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 288              		.loc 1 127 5 is_stmt 1 view .LVU93
 129:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 289              		.loc 1 129 5 view .LVU94
 129:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 290              		.loc 1 129 26 is_stmt 0 view .LVU95
 291 0036 0394     		str	r4, [sp, #12]
 292              		.loc 1 130 5 is_stmt 1 view .LVU96
 293 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL10:
 131:Src/adc.c     **** 
 132:Src/adc.c     ****     /* ADC1 interrupt Init */
 133:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 295              		.loc 1 133 5 view .LVU97
 296 003c 2246     		mov	r2, r4
 297 003e 2146     		mov	r1, r4
 298 0040 1220     		movs	r0, #18
 299 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 300              	.LVL11:
 134:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 301              		.loc 1 134 5 view .LVU98
 302 0046 1220     		movs	r0, #18
 303 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 304              	.LVL12:
 135:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 136:Src/adc.c     **** 
 137:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 138:Src/adc.c     ****   }
 139:Src/adc.c     **** }
 305              		.loc 1 139 1 is_stmt 0 view .LVU99
 306 004c 06B0     		add	sp, sp, #24
 307              	.LCFI8:
 308              		.cfi_def_cfa_offset 8
 309              		@ sp needed
 310 004e 10BD     		pop	{r4, pc}
 311              		.cfi_endproc
 312              	.LFE127:
 314              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 315              		.align	1
 316              		.p2align 2,,3
 317              		.global	HAL_ADC_MspDeInit
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	HAL_ADC_MspDeInit:
 324              	.LVL13:
 325              	.LFB128:
 140:Src/adc.c     **** 
 141:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 142:Src/adc.c     **** {
 326              		.loc 1 142 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Src/adc.c     **** 
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 10


 144:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 330              		.loc 1 144 3 view .LVU101
 142:Src/adc.c     **** 
 331              		.loc 1 142 1 is_stmt 0 view .LVU102
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI9:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 337              		.loc 1 144 5 view .LVU103
 338 0002 0368     		ldr	r3, [r0]
 339 0004 B3F1A04F 		cmp	r3, #1342177280
 340 0008 00D0     		beq	.L36
 145:Src/adc.c     ****   {
 146:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 147:Src/adc.c     **** 
 148:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 149:Src/adc.c     ****     /* Peripheral clock disable */
 150:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_DISABLE();
 151:Src/adc.c     ****   
 152:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 153:Src/adc.c     ****     PA0     ------> ADC1_IN1
 154:Src/adc.c     ****     PA1     ------> ADC1_IN2 
 155:Src/adc.c     ****     */
 156:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1);
 157:Src/adc.c     **** 
 158:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 159:Src/adc.c     ****     HAL_NVIC_DisableIRQ(ADC1_2_IRQn);
 160:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 161:Src/adc.c     **** 
 162:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 163:Src/adc.c     ****   }
 164:Src/adc.c     **** } 
 341              		.loc 1 164 1 view .LVU104
 342 000a 08BD     		pop	{r3, pc}
 343              	.L36:
 150:Src/adc.c     ****   
 344              		.loc 1 150 5 is_stmt 1 view .LVU105
 345 000c 074A     		ldr	r2, .L37
 346 000e 5369     		ldr	r3, [r2, #20]
 347 0010 23F08053 		bic	r3, r3, #268435456
 348 0014 5361     		str	r3, [r2, #20]
 156:Src/adc.c     **** 
 349              		.loc 1 156 5 view .LVU106
 350 0016 4FF09040 		mov	r0, #1207959552
 351              	.LVL14:
 156:Src/adc.c     **** 
 352              		.loc 1 156 5 is_stmt 0 view .LVU107
 353 001a 0321     		movs	r1, #3
 354 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 355              	.LVL15:
 159:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 356              		.loc 1 159 5 is_stmt 1 view .LVU108
 357 0020 1220     		movs	r0, #18
 358              		.loc 1 164 1 is_stmt 0 view .LVU109
 359 0022 BDE80840 		pop	{r3, lr}
 360              	.LCFI10:
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 11


 361              		.cfi_restore 14
 362              		.cfi_restore 3
 363              		.cfi_def_cfa_offset 0
 159:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 364              		.loc 1 159 5 view .LVU110
 365 0026 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 366              	.LVL16:
 367              	.L38:
 368 002a 00BF     		.align	2
 369              	.L37:
 370 002c 00100240 		.word	1073876992
 371              		.cfi_endproc
 372              	.LFE128:
 374              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 375              		.align	1
 376              		.p2align 2,,3
 377              		.global	HAL_ADC_ConvCpltCallback
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	HAL_ADC_ConvCpltCallback:
 384              	.LVL17:
 385              	.LFB129:
 165:Src/adc.c     **** 
 166:Src/adc.c     **** /* USER CODE BEGIN 1 */
 167:Src/adc.c     **** uint32_t ADCValue = 0;
 168:Src/adc.c     **** 
 169:Src/adc.c     **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc1)
 170:Src/adc.c     **** {
 386              		.loc 1 170 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 171:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 390              		.loc 1 171 3 view .LVU112
 170:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 391              		.loc 1 170 1 is_stmt 0 view .LVU113
 392 0000 70B5     		push	{r4, r5, r6, lr}
 393              	.LCFI11:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 4, -16
 396              		.cfi_offset 5, -12
 397              		.cfi_offset 6, -8
 398              		.cfi_offset 14, -4
 170:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 399              		.loc 1 170 1 view .LVU114
 400 0002 0646     		mov	r6, r0
 401              		.loc 1 171 14 view .LVU115
 402 0004 FFF7FEFF 		bl	HAL_ADC_GetValue
 403              	.LVL18:
 172:Src/adc.c     ****   sprintf(log_buffer, "ADCValue 1: %d\r\n", ADCValue);
 404              		.loc 1 172 3 view .LVU116
 405 0008 0D4C     		ldr	r4, .L41
 171:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 406              		.loc 1 171 12 view .LVU117
 407 000a 0E4D     		ldr	r5, .L41+4
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 12


 408              		.loc 1 172 3 view .LVU118
 409 000c 0E49     		ldr	r1, .L41+8
 171:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 410              		.loc 1 171 14 view .LVU119
 411 000e 0346     		mov	r3, r0
 412              		.loc 1 172 3 view .LVU120
 413 0010 0246     		mov	r2, r0
 414 0012 2046     		mov	r0, r4
 171:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 415              		.loc 1 171 12 view .LVU121
 416 0014 2B60     		str	r3, [r5]
 417              		.loc 1 172 3 is_stmt 1 view .LVU122
 418 0016 FFF7FEFF 		bl	sprintf
 419              	.LVL19:
 173:Src/adc.c     ****   debug_printf(log_buffer);
 420              		.loc 1 173 3 view .LVU123
 421 001a 2046     		mov	r0, r4
 422 001c FFF7FEFF 		bl	debug_printf
 423              	.LVL20:
 174:Src/adc.c     **** 
 175:Src/adc.c     ****   ADCValue = HAL_ADC_GetValue(hadc1);
 424              		.loc 1 175 3 view .LVU124
 425              		.loc 1 175 14 is_stmt 0 view .LVU125
 426 0020 3046     		mov	r0, r6
 427 0022 FFF7FEFF 		bl	HAL_ADC_GetValue
 428              	.LVL21:
 176:Src/adc.c     ****   sprintf(log_buffer, "ADCValue 2: %d\r\n", ADCValue);
 429              		.loc 1 176 3 view .LVU126
 430 0026 0949     		ldr	r1, .L41+12
 175:Src/adc.c     ****   sprintf(log_buffer, "ADCValue 2: %d\r\n", ADCValue);
 431              		.loc 1 175 14 view .LVU127
 432 0028 0346     		mov	r3, r0
 433              		.loc 1 176 3 view .LVU128
 434 002a 0246     		mov	r2, r0
 435 002c 2046     		mov	r0, r4
 175:Src/adc.c     ****   sprintf(log_buffer, "ADCValue 2: %d\r\n", ADCValue);
 436              		.loc 1 175 12 view .LVU129
 437 002e 2B60     		str	r3, [r5]
 438              		.loc 1 176 3 is_stmt 1 view .LVU130
 439 0030 FFF7FEFF 		bl	sprintf
 440              	.LVL22:
 177:Src/adc.c     ****   debug_printf(log_buffer);
 441              		.loc 1 177 3 view .LVU131
 442 0034 2046     		mov	r0, r4
 178:Src/adc.c     **** }
 443              		.loc 1 178 1 is_stmt 0 view .LVU132
 444 0036 BDE87040 		pop	{r4, r5, r6, lr}
 445              	.LCFI12:
 446              		.cfi_restore 14
 447              		.cfi_restore 6
 448              		.cfi_restore 5
 449              		.cfi_restore 4
 450              		.cfi_def_cfa_offset 0
 451              	.LVL23:
 177:Src/adc.c     ****   debug_printf(log_buffer);
 452              		.loc 1 177 3 view .LVU133
 453 003a FFF7FEBF 		b	debug_printf
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 13


 454              	.LVL24:
 455              	.L42:
 456 003e 00BF     		.align	2
 457              	.L41:
 458 0040 00000000 		.word	log_buffer
 459 0044 00000000 		.word	.LANCHOR0
 460 0048 00000000 		.word	.LC1
 461 004c 14000000 		.word	.LC2
 462              		.cfi_endproc
 463              	.LFE129:
 465              		.global	ADCValue
 466              		.comm	hadc1,84,4
 467              		.comm	log_buffer,100,4
 468              		.section	.bss.ADCValue,"aw",%nobits
 469              		.align	2
 470              		.set	.LANCHOR0,. + 0
 473              	ADCValue:
 474 0000 00000000 		.space	4
 475              		.section	.rodata.HAL_ADC_ConvCpltCallback.str1.4,"aMS",%progbits,1
 476              		.align	2
 477              	.LC1:
 478 0000 41444356 		.ascii	"ADCValue 1: %d\015\012\000"
 478      616C7565 
 478      20313A20 
 478      25640D0A 
 478      00
 479 0011 000000   		.space	3
 480              	.LC2:
 481 0014 41444356 		.ascii	"ADCValue 2: %d\015\012\000"
 481      616C7565 
 481      20323A20 
 481      25640D0A 
 481      00
 482              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 483              		.align	2
 484              	.LC0:
 485 0000 5372632F 		.ascii	"Src/adc.c\000"
 485      6164632E 
 485      6300
 486              		.text
 487              	.Letext0:
 488              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types
 489              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 490              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 491              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 492              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 493              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 494              		.file 8 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 495              		.file 9 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 496              		.file 10 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.
 497              		.file 11 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 498              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 499              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 500              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 501              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 502              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 503              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 14


 504              		.file 18 "Inc/adc.h"
 505              		.file 19 "Inc/usart.h"
 506              		.file 20 "/usr/local/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdio.h"
 507              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  /var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:18     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:27     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:214    .text.MX_ADC1_Init:00000000000000a8 $d
                            *COM*:0000000000000054 hadc1
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:220    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:228    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:315    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:323    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:370    .text.HAL_ADC_MspDeInit:000000000000002c $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:375    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:383    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:458    .text.HAL_ADC_ConvCpltCallback:0000000000000040 $d
                            *COM*:0000000000000064 log_buffer
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:473    .bss.ADCValue:0000000000000000 ADCValue
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:469    .bss.ADCValue:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:476    .rodata.HAL_ADC_ConvCpltCallback.str1.4:0000000000000000 $d
/var/folders/8c/gyvcglfx7f97kbqb2h83mm_r0000gn/T//ccq9eAS0.s:483    .rodata.MX_ADC1_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_ADC_GetValue
sprintf
debug_printf
