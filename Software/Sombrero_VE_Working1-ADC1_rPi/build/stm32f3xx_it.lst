ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	SysTick_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SysTick_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2020 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 2


  31:Src/stm32f3xx_it.c ****   ******************************************************************************
  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  44:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc3;
  45:Src/stm32f3xx_it.c **** extern ADC_HandleTypeDef hadc1;
  46:Src/stm32f3xx_it.c **** extern ADC_HandleTypeDef hadc3;
  47:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  48:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  49:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** /******************************************************************************/
  52:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  53:Src/stm32f3xx_it.c **** /******************************************************************************/
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c **** /**
  56:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
  57:Src/stm32f3xx_it.c **** */
  58:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  59:Src/stm32f3xx_it.c **** {
  29              		.loc 1 59 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  60:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  61:Src/stm32f3xx_it.c **** 
  62:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  63:Src/stm32f3xx_it.c ****   HAL_IncTick();
  38              		.loc 1 63 3 view .LVU1
  39 0002 FFF7FEFF 		bl	HAL_IncTick
  40              	.LVL0:
  64:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  41              		.loc 1 64 3 view .LVU2
  42 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
  43              	.LVL1:
  65:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  66:Src/stm32f3xx_it.c **** 
  67:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  68:Src/stm32f3xx_it.c **** }
  44              		.loc 1 68 1 is_stmt 0 view .LVU3
  45 000a 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE126:
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 3


  49              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
  50              		.align	1
  51              		.global	DMA1_Channel1_IRQHandler
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	DMA1_Channel1_IRQHandler:
  58              	.LFB127:
  69:Src/stm32f3xx_it.c **** 
  70:Src/stm32f3xx_it.c **** /******************************************************************************/
  71:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  72:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  73:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  74:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  75:Src/stm32f3xx_it.c **** /******************************************************************************/
  76:Src/stm32f3xx_it.c **** 
  77:Src/stm32f3xx_it.c **** /**
  78:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
  79:Src/stm32f3xx_it.c **** */
  80:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
  81:Src/stm32f3xx_it.c **** {
  59              		.loc 1 81 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  82:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
  83:Src/stm32f3xx_it.c **** 
  84:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
  85:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
  68              		.loc 1 85 3 view .LVU5
  69 0002 0248     		ldr	r0, .L5
  70 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
  71              	.LVL2:
  86:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
  87:Src/stm32f3xx_it.c **** 
  88:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
  89:Src/stm32f3xx_it.c **** }
  72              		.loc 1 89 1 is_stmt 0 view .LVU6
  73 0008 08BD     		pop	{r3, pc}
  74              	.L6:
  75 000a 00BF     		.align	2
  76              	.L5:
  77 000c 00000000 		.word	hdma_adc1
  78              		.cfi_endproc
  79              	.LFE127:
  81              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
  82              		.align	1
  83              		.global	DMA1_Channel4_IRQHandler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 4


  87              		.fpu fpv4-sp-d16
  89              	DMA1_Channel4_IRQHandler:
  90              	.LFB128:
  90:Src/stm32f3xx_it.c **** 
  91:Src/stm32f3xx_it.c **** /**
  92:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel4 global interrupt.
  93:Src/stm32f3xx_it.c **** */
  94:Src/stm32f3xx_it.c **** void DMA1_Channel4_IRQHandler(void)
  95:Src/stm32f3xx_it.c **** {
  91              		.loc 1 95 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 08B5     		push	{r3, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
  96:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
  99:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 100              		.loc 1 99 3 view .LVU8
 101 0002 0248     		ldr	r0, .L9
 102 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 103              	.LVL3:
 100:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 101:Src/stm32f3xx_it.c **** 
 102:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 103:Src/stm32f3xx_it.c **** }
 104              		.loc 1 103 1 is_stmt 0 view .LVU9
 105 0008 08BD     		pop	{r3, pc}
 106              	.L10:
 107 000a 00BF     		.align	2
 108              	.L9:
 109 000c 00000000 		.word	hdma_usart1_tx
 110              		.cfi_endproc
 111              	.LFE128:
 113              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 114              		.align	1
 115              		.global	DMA1_Channel5_IRQHandler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	DMA1_Channel5_IRQHandler:
 122              	.LFB129:
 104:Src/stm32f3xx_it.c **** 
 105:Src/stm32f3xx_it.c **** /**
 106:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel5 global interrupt.
 107:Src/stm32f3xx_it.c **** */
 108:Src/stm32f3xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 109:Src/stm32f3xx_it.c **** {
 123              		.loc 1 109 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 5


 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 110:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 111:Src/stm32f3xx_it.c **** 
 112:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 113:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 132              		.loc 1 113 3 view .LVU11
 133 0002 0248     		ldr	r0, .L13
 134 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 135              	.LVL4:
 114:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 115:Src/stm32f3xx_it.c **** 
 116:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 117:Src/stm32f3xx_it.c **** }
 136              		.loc 1 117 1 is_stmt 0 view .LVU12
 137 0008 08BD     		pop	{r3, pc}
 138              	.L14:
 139 000a 00BF     		.align	2
 140              	.L13:
 141 000c 00000000 		.word	hdma_usart1_rx
 142              		.cfi_endproc
 143              	.LFE129:
 145              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 146              		.align	1
 147              		.global	ADC1_2_IRQHandler
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	ADC1_2_IRQHandler:
 154              	.LFB130:
 118:Src/stm32f3xx_it.c **** 
 119:Src/stm32f3xx_it.c **** /**
 120:Src/stm32f3xx_it.c **** * @brief This function handles ADC1 and ADC2 interrupts.
 121:Src/stm32f3xx_it.c **** */
 122:Src/stm32f3xx_it.c **** void ADC1_2_IRQHandler(void)
 123:Src/stm32f3xx_it.c **** {
 155              		.loc 1 123 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
 124:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 125:Src/stm32f3xx_it.c **** 
 126:Src/stm32f3xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 127:Src/stm32f3xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 164              		.loc 1 127 3 view .LVU14
 165 0002 0248     		ldr	r0, .L17
 166 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 167              	.LVL5:
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 6


 128:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 131:Src/stm32f3xx_it.c **** }
 168              		.loc 1 131 1 is_stmt 0 view .LVU15
 169 0008 08BD     		pop	{r3, pc}
 170              	.L18:
 171 000a 00BF     		.align	2
 172              	.L17:
 173 000c 00000000 		.word	hadc1
 174              		.cfi_endproc
 175              	.LFE130:
 177              		.section	.text.USART1_IRQHandler,"ax",%progbits
 178              		.align	1
 179              		.global	USART1_IRQHandler
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	USART1_IRQHandler:
 186              	.LFB131:
 132:Src/stm32f3xx_it.c **** 
 133:Src/stm32f3xx_it.c **** /**
 134:Src/stm32f3xx_it.c **** * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line
 135:Src/stm32f3xx_it.c **** */
 136:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 137:Src/stm32f3xx_it.c **** {
 187              		.loc 1 137 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 08B5     		push	{r3, lr}
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 138:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 139:Src/stm32f3xx_it.c **** 
 140:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 141:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 196              		.loc 1 141 3 view .LVU17
 197 0002 0248     		ldr	r0, .L21
 198 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 199              	.LVL6:
 142:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 143:Src/stm32f3xx_it.c **** 
 144:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 145:Src/stm32f3xx_it.c **** }
 200              		.loc 1 145 1 is_stmt 0 view .LVU18
 201 0008 08BD     		pop	{r3, pc}
 202              	.L22:
 203 000a 00BF     		.align	2
 204              	.L21:
 205 000c 00000000 		.word	huart1
 206              		.cfi_endproc
 207              	.LFE131:
 209              		.section	.text.ADC3_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 7


 210              		.align	1
 211              		.global	ADC3_IRQHandler
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	ADC3_IRQHandler:
 218              	.LFB132:
 146:Src/stm32f3xx_it.c **** 
 147:Src/stm32f3xx_it.c **** /**
 148:Src/stm32f3xx_it.c **** * @brief This function handles ADC3 global interrupt.
 149:Src/stm32f3xx_it.c **** */
 150:Src/stm32f3xx_it.c **** void ADC3_IRQHandler(void)
 151:Src/stm32f3xx_it.c **** {
 219              		.loc 1 151 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI6:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 152:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN ADC3_IRQn 0 */
 153:Src/stm32f3xx_it.c **** 
 154:Src/stm32f3xx_it.c ****   /* USER CODE END ADC3_IRQn 0 */
 155:Src/stm32f3xx_it.c ****   HAL_ADC_IRQHandler(&hadc3);
 228              		.loc 1 155 3 view .LVU20
 229 0002 0248     		ldr	r0, .L25
 230 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 231              	.LVL7:
 156:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN ADC3_IRQn 1 */
 157:Src/stm32f3xx_it.c **** 
 158:Src/stm32f3xx_it.c ****   /* USER CODE END ADC3_IRQn 1 */
 159:Src/stm32f3xx_it.c **** }
 232              		.loc 1 159 1 is_stmt 0 view .LVU21
 233 0008 08BD     		pop	{r3, pc}
 234              	.L26:
 235 000a 00BF     		.align	2
 236              	.L25:
 237 000c 00000000 		.word	hadc3
 238              		.cfi_endproc
 239              	.LFE132:
 241              		.section	.text.DMA2_Channel5_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	DMA2_Channel5_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	DMA2_Channel5_IRQHandler:
 250              	.LFB133:
 160:Src/stm32f3xx_it.c **** 
 161:Src/stm32f3xx_it.c **** /**
 162:Src/stm32f3xx_it.c **** * @brief This function handles DMA2 channel5 global interrupt.
 163:Src/stm32f3xx_it.c **** */
 164:Src/stm32f3xx_it.c **** void DMA2_Channel5_IRQHandler(void)
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 8


 165:Src/stm32f3xx_it.c **** {
 251              		.loc 1 165 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI7:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 166:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 0 */
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 0 */
 169:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc3);
 260              		.loc 1 169 3 view .LVU23
 261 0002 0248     		ldr	r0, .L29
 262 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 263              	.LVL8:
 170:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 1 */
 171:Src/stm32f3xx_it.c **** 
 172:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 1 */
 173:Src/stm32f3xx_it.c **** }
 264              		.loc 1 173 1 is_stmt 0 view .LVU24
 265 0008 08BD     		pop	{r3, pc}
 266              	.L30:
 267 000a 00BF     		.align	2
 268              	.L29:
 269 000c 00000000 		.word	hdma_adc3
 270              		.cfi_endproc
 271              	.LFE133:
 273              		.text
 274              	.Letext0:
 275              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 276              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 277              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 278              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 279              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 280              		.file 7 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/stddef.
 281              		.file 8 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 282              		.file 9 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 283              		.file 10 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 284              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 285              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 286              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 287              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 288              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 289              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 290              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:26     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:50     .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:57     .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:77     .text.DMA1_Channel1_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:82     .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:89     .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:109    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:114    .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:121    .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:141    .text.DMA1_Channel5_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:146    .text.ADC1_2_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:153    .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:173    .text.ADC1_2_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:178    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:185    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:205    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:210    .text.ADC3_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:217    .text.ADC3_IRQHandler:0000000000000000 ADC3_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:237    .text.ADC3_IRQHandler:000000000000000c $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:242    .text.DMA2_Channel5_IRQHandler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:249    .text.DMA2_Channel5_IRQHandler:0000000000000000 DMA2_Channel5_IRQHandler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccRKtOHP.s:269    .text.DMA2_Channel5_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_DMA_IRQHandler
hdma_adc1
hdma_usart1_tx
hdma_usart1_rx
HAL_ADC_IRQHandler
hadc1
HAL_UART_IRQHandler
huart1
hadc3
hdma_adc3
