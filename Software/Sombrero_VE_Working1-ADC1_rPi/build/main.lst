ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.process_frame,"ax",%progbits
  18              		.align	1
  19              		.global	process_frame
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	process_frame:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2020 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 2


  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** #include "adc.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "opamp.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** #include <math.h>
  51:Src/main.c    **** #include <string.h>
  52:Src/main.c    **** #include <stdbool.h>
  53:Src/main.c    **** #include <stdint.h>
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** //#define true 1
  62:Src/main.c    **** //#define false 0
  63:Src/main.c    **** #define MID_ADC_READING 2048
  64:Src/main.c    **** int cycles = 125;
  65:Src/main.c    **** // Serial output buffer
  66:Src/main.c    **** extern char log_buffer[150];
  67:Src/main.c    **** 
  68:Src/main.c    **** // Flag
  69:Src/main.c    **** bool readings_ready = false;
  70:Src/main.c    **** bool CLEAR_TO_GO = true;
  71:Src/main.c    **** 
  72:Src/main.c    **** extern const uint16_t adc_buff_half_size;
  73:Src/main.c    **** 
  74:Src/main.c    **** // Calibration
  75:Src/main.c    **** const float VOLTS_PER_DIV = (3.3 / 4096.0);
  76:Src/main.c    **** //float VCAL = 266.1238757156; // note - single-phase board
  77:Src/main.c    **** //float VCAL = 224.4135906687; // note - 3-phase board
  78:Src/main.c    **** float VCAL = 236.660160908; // dan's custom ac-ac adaptor
  79:Src/main.c    **** float ICAL = 90.9;
  80:Src/main.c    **** 
  81:Src/main.c    **** // ISR accumulators
  82:Src/main.c    **** typedef struct channel_
  83:Src/main.c    **** {
  84:Src/main.c    ****   int64_t sum_P;
  85:Src/main.c    ****   uint64_t sum_V_sq;
  86:Src/main.c    ****   uint64_t sum_I_sq;
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 3


  87:Src/main.c    ****   int32_t sum_V;
  88:Src/main.c    ****   int32_t sum_I;
  89:Src/main.c    ****   uint32_t count;
  90:Src/main.c    **** 
  91:Src/main.c    **** } channel_t;
  92:Src/main.c    **** 
  93:Src/main.c    **** uint32_t pulseCount = 0;
  94:Src/main.c    **** 
  95:Src/main.c    **** static channel_t channels[CTn];
  96:Src/main.c    **** static channel_t channels_ready[CTn];
  97:Src/main.c    **** 
  98:Src/main.c    **** int16_t sample_V, sample_I, signed_V, signed_I;
  99:Src/main.c    **** int16_t sample_V_Hz, signed_V_Hz, previous_V_Hz, cycles_Hz;
 100:Src/main.c    **** bool hz_ready = 0;
 101:Src/main.c    **** int32_t Hz_t1 = 0;
 102:Src/main.c    **** 
 103:Src/main.c    **** #define Hz_ARRAY_SIZE 20
 104:Src/main.c    **** uint32_t Hz_array[Hz_ARRAY_SIZE] = {0};
 105:Src/main.c    **** int Hz_array_counter = 0;
 106:Src/main.c    **** uint32_t Hz_sum = 0;
 107:Src/main.c    **** bool Hz_value_ready = false;
 108:Src/main.c    **** 
 109:Src/main.c    **** /* USER CODE END PV */
 110:Src/main.c    **** 
 111:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 112:Src/main.c    **** void SystemClock_Config(void);
 113:Src/main.c    **** 
 114:Src/main.c    **** /* USER CODE BEGIN PFP */
 115:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 116:Src/main.c    **** 
 117:Src/main.c    **** /* USER CODE END PFP */
 118:Src/main.c    **** 
 119:Src/main.c    **** /* USER CODE BEGIN 0 */
 120:Src/main.c    **** void process_frame(uint16_t offset)
 121:Src/main.c    **** {
  30              		.loc 1 121 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 121 1 is_stmt 0 view .LVU1
  35 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 3, -32
  39              		.cfi_offset 4, -28
  40              		.cfi_offset 5, -24
  41              		.cfi_offset 6, -20
  42              		.cfi_offset 7, -16
  43              		.cfi_offset 8, -12
  44              		.cfi_offset 9, -8
  45              		.cfi_offset 14, -4
  46 0004 0646     		mov	r6, r0
 122:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, GPIO_PIN_SET);
  47              		.loc 1 122 3 is_stmt 1 view .LVU2
  48 0006 0122     		movs	r2, #1
  49 0008 4FF48061 		mov	r1, #1024
  50 000c 6248     		ldr	r0, .L18
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 4


  51              	.LVL1:
  52              		.loc 1 122 3 is_stmt 0 view .LVU3
  53 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
  54              	.LVL2:
 123:Src/main.c    ****   CLEAR_TO_GO = false;
  55              		.loc 1 123 3 is_stmt 1 view .LVU4
  56              		.loc 1 123 15 is_stmt 0 view .LVU5
  57 0012 0025     		movs	r5, #0
  58 0014 614B     		ldr	r3, .L18+4
  59 0016 1D70     		strb	r5, [r3]
 124:Src/main.c    **** 
 125:Src/main.c    ****   for (int i = 0; i < adc_buff_half_size; i += CTn)
  60              		.loc 1 125 3 is_stmt 1 view .LVU6
  61              	.LBB2:
  62              		.loc 1 125 8 view .LVU7
  63              	.LVL3:
  64              		.loc 1 125 3 is_stmt 0 view .LVU8
  65 0018 8AE0     		b	.L2
  66              	.LVL4:
  67              	.L15:
 126:Src/main.c    ****   {
 127:Src/main.c    **** 
 128:Src/main.c    ****     // zero-crossing detection //
 129:Src/main.c    ****     sample_V_Hz = adc1_dma_buff[offset + i];
 130:Src/main.c    ****     signed_V_Hz = sample_V_Hz - MID_ADC_READING;
 131:Src/main.c    **** 
 132:Src/main.c    ****     if (signed_V_Hz > 0 && previous_V_Hz < 0)
 133:Src/main.c    ****     {
 134:Src/main.c    ****       previous_V_Hz = signed_V_Hz;
  68              		.loc 1 134 7 is_stmt 1 view .LVU9
  69              		.loc 1 134 21 is_stmt 0 view .LVU10
  70 001a 614A     		ldr	r2, .L18+8
  71 001c 1380     		strh	r3, [r2]	@ movhi
 135:Src/main.c    ****       cycles_Hz++;
  72              		.loc 1 135 7 is_stmt 1 view .LVU11
  73              		.loc 1 135 16 is_stmt 0 view .LVU12
  74 001e 614A     		ldr	r2, .L18+12
  75 0020 1388     		ldrh	r3, [r2]
  76 0022 0133     		adds	r3, r3, #1
  77 0024 1380     		strh	r3, [r2]	@ movhi
  78 0026 9DE0     		b	.L4
  79              	.L16:
 136:Src/main.c    ****     }
 137:Src/main.c    ****     else
 138:Src/main.c    ****     {
 139:Src/main.c    ****       previous_V_Hz = signed_V_Hz;
 140:Src/main.c    ****     }
 141:Src/main.c    **** 
 142:Src/main.c    ****     // for example, 125 upwards-only-zero-crossings approx 2.5 seconds @ 50Hz.
 143:Src/main.c    ****     if (cycles_Hz == cycles)
 144:Src/main.c    ****     {
 145:Src/main.c    ****       cycles_Hz = 0;
  80              		.loc 1 145 7 is_stmt 1 view .LVU13
  81              		.loc 1 145 17 is_stmt 0 view .LVU14
  82 0028 5E4B     		ldr	r3, .L18+12
  83 002a 0022     		movs	r2, #0
  84 002c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 5


 146:Src/main.c    ****       hz_ready = true;
  85              		.loc 1 146 7 is_stmt 1 view .LVU15
  86              		.loc 1 146 16 is_stmt 0 view .LVU16
  87 002e 5E4B     		ldr	r3, .L18+16
  88 0030 0122     		movs	r2, #1
  89 0032 1A70     		strb	r2, [r3]
  90 0034 9EE0     		b	.L5
  91              	.L17:
 147:Src/main.c    ****     }
 148:Src/main.c    **** 
 149:Src/main.c    ****     if (hz_ready)
 150:Src/main.c    ****     {
 151:Src/main.c    **** 
 152:Src/main.c    ****       hz_ready = false;
  92              		.loc 1 152 7 is_stmt 1 view .LVU17
  93              		.loc 1 152 16 is_stmt 0 view .LVU18
  94 0036 0027     		movs	r7, #0
  95 0038 5B4B     		ldr	r3, .L18+16
  96 003a 1F70     		strb	r7, [r3]
 153:Src/main.c    **** 
 154:Src/main.c    ****       // copy and reset accu.
 155:Src/main.c    ****       for (int ch = 0; ch < CTn; ch++)
  97              		.loc 1 155 7 is_stmt 1 view .LVU19
  98              	.LBB3:
  99              		.loc 1 155 12 view .LVU20
 100              	.LVL5:
 101              		.loc 1 155 7 is_stmt 0 view .LVU21
 102 003c 26E0     		b	.L7
 103              	.LVL6:
 104              	.L9:
 105              	.LBB4:
 156:Src/main.c    ****       {
 157:Src/main.c    ****         channel_t *channel = &channels[ch];
 106              		.loc 1 157 9 is_stmt 1 discriminator 3 view .LVU22
 107              		.loc 1 157 20 is_stmt 0 discriminator 3 view .LVU23
 108 003e BB00     		lsls	r3, r7, #2
 109 0040 DA19     		adds	r2, r3, r7
 110 0042 D000     		lsls	r0, r2, #3
 111 0044 594A     		ldr	r2, .L18+20
 112 0046 1044     		add	r0, r0, r2
 113              	.LVL7:
 158:Src/main.c    ****         channel_t *chn = &channels_ready[ch];
 114              		.loc 1 158 9 is_stmt 1 discriminator 3 view .LVU24
 115              		.loc 1 158 20 is_stmt 0 discriminator 3 view .LVU25
 116 0048 3B44     		add	r3, r3, r7
 117 004a D900     		lsls	r1, r3, #3
 118              	.LVL8:
 159:Src/main.c    ****         // Copy accumulators for use in main loop
 160:Src/main.c    ****         memcpy((void *)chn, (void *)channel, sizeof(channel_t));
 119              		.loc 1 160 9 is_stmt 1 discriminator 3 view .LVU26
 120 004c 0346     		mov	r3, r0
 121 004e 584A     		ldr	r2, .L18+24
 122 0050 0A44     		add	r2, r2, r1
 123              	.LVL9:
 124              		.loc 1 160 9 is_stmt 0 discriminator 3 view .LVU27
 125 0052 00F12009 		add	r9, r0, #32
 126              	.LVL10:
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 6


 127              	.L8:
 128              		.loc 1 160 9 discriminator 3 view .LVU28
 129 0056 D3F80080 		ldr	r8, [r3]	@ unaligned
 130 005a D3F804E0 		ldr	lr, [r3, #4]	@ unaligned
 131 005e D3F808C0 		ldr	ip, [r3, #8]	@ unaligned
 132 0062 D968     		ldr	r1, [r3, #12]	@ unaligned
 133 0064 C2F80080 		str	r8, [r2]	@ unaligned
 134 0068 C2F804E0 		str	lr, [r2, #4]	@ unaligned
 135 006c C2F808C0 		str	ip, [r2, #8]	@ unaligned
 136 0070 D160     		str	r1, [r2, #12]	@ unaligned
 137 0072 1033     		adds	r3, r3, #16
 138 0074 1032     		adds	r2, r2, #16
 139 0076 4B45     		cmp	r3, r9
 140 0078 EDD1     		bne	.L8
 141 007a 1968     		ldr	r1, [r3]	@ unaligned
 142 007c 5B68     		ldr	r3, [r3, #4]	@ unaligned
 143 007e 1160     		str	r1, [r2]	@ unaligned
 144 0080 5360     		str	r3, [r2, #4]	@ unaligned
 161:Src/main.c    ****         // Reset accumulators to zero ready for next set of measurements
 162:Src/main.c    ****         memset((void *)channel, 0, sizeof(channel_t));
 145              		.loc 1 162 9 is_stmt 1 discriminator 3 view .LVU29
 146 0082 2822     		movs	r2, #40
 147 0084 0021     		movs	r1, #0
 148 0086 FFF7FEFF 		bl	memset
 149              	.LVL11:
 150              		.loc 1 162 9 is_stmt 0 discriminator 3 view .LVU30
 151              	.LBE4:
 155:Src/main.c    ****       {
 152              		.loc 1 155 36 discriminator 3 view .LVU31
 153 008a 0137     		adds	r7, r7, #1
 154              	.LVL12:
 155              	.L7:
 155:Src/main.c    ****       {
 156              		.loc 1 155 7 discriminator 1 view .LVU32
 157 008c 082F     		cmp	r7, #8
 158 008e D6DD     		ble	.L9
 159              	.LBE3:
 163:Src/main.c    ****       }
 164:Src/main.c    **** 
 165:Src/main.c    ****       readings_ready = true;
 160              		.loc 1 165 7 is_stmt 1 view .LVU33
 161              		.loc 1 165 22 is_stmt 0 view .LVU34
 162 0090 484B     		ldr	r3, .L18+28
 163 0092 0122     		movs	r2, #1
 164 0094 1A70     		strb	r2, [r3]
 165 0096 72E0     		b	.L6
 166              	.LVL13:
 167              	.L11:
 168              	.LBB5:
 169              	.LBB6:
 166:Src/main.c    ****     }
 167:Src/main.c    **** 
 168:Src/main.c    ****     // Cycle through channels, accumulating
 169:Src/main.c    ****     for (int ch = 0; ch < CTn; ch++)
 170:Src/main.c    ****     {
 171:Src/main.c    **** 
 172:Src/main.c    ****       channel_t *channel = &channels[ch];
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 7


 170              		.loc 1 172 7 is_stmt 1 discriminator 3 view .LVU35
 173:Src/main.c    **** 
 174:Src/main.c    ****       // ----------------------------------------
 175:Src/main.c    ****       // Voltage
 176:Src/main.c    ****       sample_V = adc1_dma_buff[offset + i + ch];
 171              		.loc 1 176 7 discriminator 3 view .LVU36
 172              		.loc 1 176 43 is_stmt 0 discriminator 3 view .LVU37
 173 0098 04EB000C 		add	ip, r4, r0
 174              		.loc 1 176 31 discriminator 3 view .LVU38
 175 009c 464B     		ldr	r3, .L18+32
 176 009e 33F81C70 		ldrh	r7, [r3, ip, lsl #1]
 177 00a2 BFB2     		uxth	r7, r7
 178              		.loc 1 176 16 discriminator 3 view .LVU39
 179 00a4 454B     		ldr	r3, .L18+36
 180 00a6 1F80     		strh	r7, [r3]	@ movhi
 177:Src/main.c    ****       signed_V = sample_V - MID_ADC_READING;
 181              		.loc 1 177 7 is_stmt 1 discriminator 3 view .LVU40
 182              		.loc 1 177 27 is_stmt 0 discriminator 3 view .LVU41
 183 00a8 A7F50067 		sub	r7, r7, #2048
 184 00ac 3FB2     		sxth	r7, r7
 185              		.loc 1 177 16 discriminator 3 view .LVU42
 186 00ae 444B     		ldr	r3, .L18+40
 187 00b0 1F80     		strh	r7, [r3]	@ movhi
 178:Src/main.c    ****       channel->sum_V += signed_V;
 188              		.loc 1 178 7 is_stmt 1 discriminator 3 view .LVU43
 189              		.loc 1 178 22 is_stmt 0 discriminator 3 view .LVU44
 190 00b2 8300     		lsls	r3, r0, #2
 191 00b4 0344     		add	r3, r3, r0
 192 00b6 DA00     		lsls	r2, r3, #3
 193 00b8 3C49     		ldr	r1, .L18+20
 194 00ba 1144     		add	r1, r1, r2
 195 00bc 8B69     		ldr	r3, [r1, #24]
 196 00be 3B44     		add	r3, r3, r7
 197 00c0 8B61     		str	r3, [r1, #24]
 179:Src/main.c    ****       channel->sum_V_sq += signed_V * signed_V;
 198              		.loc 1 179 7 is_stmt 1 discriminator 3 view .LVU45
 199              		.loc 1 179 37 is_stmt 0 discriminator 3 view .LVU46
 200 00c2 07FB07FE 		mul	lr, r7, r7
 201              		.loc 1 179 25 discriminator 3 view .LVU47
 202 00c6 D1E90223 		ldrd	r2, [r1, #8]
 203 00ca 12EB0E08 		adds	r8, r2, lr
 204 00ce 43EBEE79 		adc	r9, r3, lr, asr #31
 205 00d2 C1E90289 		strd	r8, [r1, #8]
 180:Src/main.c    ****       // ----------------------------------------
 181:Src/main.c    ****       // Current
 182:Src/main.c    ****       sample_I = adc3_dma_buff[offset + i + ch];
 206              		.loc 1 182 7 is_stmt 1 discriminator 3 view .LVU48
 207              		.loc 1 182 31 is_stmt 0 discriminator 3 view .LVU49
 208 00d6 3B4B     		ldr	r3, .L18+44
 209 00d8 33F81CC0 		ldrh	ip, [r3, ip, lsl #1]
 210 00dc 1FFA8CFC 		uxth	ip, ip
 211              		.loc 1 182 16 discriminator 3 view .LVU50
 212 00e0 394B     		ldr	r3, .L18+48
 213 00e2 A3F800C0 		strh	ip, [r3]	@ movhi
 183:Src/main.c    ****       signed_I = sample_I - MID_ADC_READING;
 214              		.loc 1 183 7 is_stmt 1 discriminator 3 view .LVU51
 215              		.loc 1 183 27 is_stmt 0 discriminator 3 view .LVU52
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 8


 216 00e6 ACF5006C 		sub	ip, ip, #2048
 217 00ea 0FFA8CFC 		sxth	ip, ip
 218              		.loc 1 183 16 discriminator 3 view .LVU53
 219 00ee 374B     		ldr	r3, .L18+52
 220 00f0 A3F800C0 		strh	ip, [r3]	@ movhi
 184:Src/main.c    ****       channel->sum_I += signed_I;
 221              		.loc 1 184 7 is_stmt 1 discriminator 3 view .LVU54
 222              		.loc 1 184 22 is_stmt 0 discriminator 3 view .LVU55
 223 00f4 CB69     		ldr	r3, [r1, #28]
 224 00f6 6344     		add	r3, r3, ip
 225 00f8 CB61     		str	r3, [r1, #28]
 185:Src/main.c    ****       channel->sum_I_sq += signed_I * signed_I;
 226              		.loc 1 185 7 is_stmt 1 discriminator 3 view .LVU56
 227              		.loc 1 185 37 is_stmt 0 discriminator 3 view .LVU57
 228 00fa 0CFB0CFE 		mul	lr, ip, ip
 229              		.loc 1 185 25 discriminator 3 view .LVU58
 230 00fe D1E90423 		ldrd	r2, [r1, #16]
 231 0102 12EB0E08 		adds	r8, r2, lr
 232 0106 43EBEE79 		adc	r9, r3, lr, asr #31
 233 010a C1E90489 		strd	r8, [r1, #16]
 186:Src/main.c    ****       // ----------------------------------------
 187:Src/main.c    ****       // Power
 188:Src/main.c    ****       channel->sum_P += signed_V * signed_I;
 234              		.loc 1 188 7 is_stmt 1 discriminator 3 view .LVU59
 235              		.loc 1 188 34 is_stmt 0 discriminator 3 view .LVU60
 236 010e 0CFB07F7 		mul	r7, ip, r7
 237              		.loc 1 188 22 discriminator 3 view .LVU61
 238 0112 D1E90023 		ldrd	r2, [r1]
 239 0116 12EB0708 		adds	r8, r2, r7
 240 011a 43EBE779 		adc	r9, r3, r7, asr #31
 241 011e C1E90089 		strd	r8, [r1]
 189:Src/main.c    **** 
 190:Src/main.c    ****       channel->count++;
 242              		.loc 1 190 7 is_stmt 1 discriminator 3 view .LVU62
 243              		.loc 1 190 14 is_stmt 0 discriminator 3 view .LVU63
 244 0122 0B6A     		ldr	r3, [r1, #32]
 245              		.loc 1 190 21 discriminator 3 view .LVU64
 246 0124 0133     		adds	r3, r3, #1
 247 0126 0B62     		str	r3, [r1, #32]
 248              	.LBE6:
 169:Src/main.c    ****     {
 249              		.loc 1 169 34 discriminator 3 view .LVU65
 250 0128 0130     		adds	r0, r0, #1
 251              	.LVL14:
 252              	.L10:
 169:Src/main.c    ****     {
 253              		.loc 1 169 5 discriminator 1 view .LVU66
 254 012a 0828     		cmp	r0, #8
 255 012c B4DD     		ble	.L11
 256              	.LBE5:
 125:Src/main.c    ****   {
 257              		.loc 1 125 45 discriminator 2 view .LVU67
 258 012e 0935     		adds	r5, r5, #9
 259              	.LVL15:
 260              	.L2:
 125:Src/main.c    ****   {
 261              		.loc 1 125 21 discriminator 1 view .LVU68
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 9


 262 0130 274B     		ldr	r3, .L18+56
 263 0132 1B88     		ldrh	r3, [r3]
 125:Src/main.c    ****   {
 264              		.loc 1 125 3 discriminator 1 view .LVU69
 265 0134 AB42     		cmp	r3, r5
 266 0136 24DD     		ble	.L14
 129:Src/main.c    ****     signed_V_Hz = sample_V_Hz - MID_ADC_READING;
 267              		.loc 1 129 5 is_stmt 1 view .LVU70
 129:Src/main.c    ****     signed_V_Hz = sample_V_Hz - MID_ADC_READING;
 268              		.loc 1 129 40 is_stmt 0 view .LVU71
 269 0138 7419     		adds	r4, r6, r5
 129:Src/main.c    ****     signed_V_Hz = sample_V_Hz - MID_ADC_READING;
 270              		.loc 1 129 32 view .LVU72
 271 013a 1F4B     		ldr	r3, .L18+32
 272 013c 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 273 0140 9BB2     		uxth	r3, r3
 129:Src/main.c    ****     signed_V_Hz = sample_V_Hz - MID_ADC_READING;
 274              		.loc 1 129 17 view .LVU73
 275 0142 244A     		ldr	r2, .L18+60
 276 0144 1380     		strh	r3, [r2]	@ movhi
 130:Src/main.c    **** 
 277              		.loc 1 130 5 is_stmt 1 view .LVU74
 130:Src/main.c    **** 
 278              		.loc 1 130 31 is_stmt 0 view .LVU75
 279 0146 A3F50063 		sub	r3, r3, #2048
 280 014a 1BB2     		sxth	r3, r3
 130:Src/main.c    **** 
 281              		.loc 1 130 17 view .LVU76
 282 014c 224A     		ldr	r2, .L18+64
 283 014e 1380     		strh	r3, [r2]	@ movhi
 132:Src/main.c    ****     {
 284              		.loc 1 132 5 is_stmt 1 view .LVU77
 132:Src/main.c    ****     {
 285              		.loc 1 132 8 is_stmt 0 view .LVU78
 286 0150 002B     		cmp	r3, #0
 287 0152 05DD     		ble	.L3
 132:Src/main.c    ****     {
 288              		.loc 1 132 42 discriminator 1 view .LVU79
 289 0154 124A     		ldr	r2, .L18+8
 290 0156 B2F90020 		ldrsh	r2, [r2]
 132:Src/main.c    ****     {
 291              		.loc 1 132 25 discriminator 1 view .LVU80
 292 015a 002A     		cmp	r2, #0
 293 015c FFF65DAF 		blt	.L15
 294              	.L3:
 139:Src/main.c    ****     }
 295              		.loc 1 139 7 is_stmt 1 view .LVU81
 139:Src/main.c    ****     }
 296              		.loc 1 139 21 is_stmt 0 view .LVU82
 297 0160 0F4A     		ldr	r2, .L18+8
 298 0162 1380     		strh	r3, [r2]	@ movhi
 299              	.L4:
 143:Src/main.c    ****     {
 300              		.loc 1 143 5 is_stmt 1 view .LVU83
 143:Src/main.c    ****     {
 301              		.loc 1 143 19 is_stmt 0 view .LVU84
 302 0164 0F4B     		ldr	r3, .L18+12
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 10


 303 0166 B3F90020 		ldrsh	r2, [r3]
 304 016a 1C4B     		ldr	r3, .L18+68
 305 016c 1B68     		ldr	r3, [r3]
 143:Src/main.c    ****     {
 306              		.loc 1 143 8 view .LVU85
 307 016e 9A42     		cmp	r2, r3
 308 0170 3FF45AAF 		beq	.L16
 309              	.L5:
 149:Src/main.c    ****     {
 310              		.loc 1 149 5 is_stmt 1 view .LVU86
 149:Src/main.c    ****     {
 311              		.loc 1 149 9 is_stmt 0 view .LVU87
 312 0174 0C4B     		ldr	r3, .L18+16
 313 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149:Src/main.c    ****     {
 314              		.loc 1 149 8 view .LVU88
 315 0178 002B     		cmp	r3, #0
 316 017a 7FF45CAF 		bne	.L17
 317              	.L6:
 318              	.LBB7:
 155:Src/main.c    ****       {
 319              		.loc 1 155 16 discriminator 1 view .LVU89
 320 017e 0020     		movs	r0, #0
 321 0180 D3E7     		b	.L10
 322              	.L14:
 323              	.LBE7:
 324              	.LBE2:
 191:Src/main.c    ****     }
 192:Src/main.c    ****   }
 193:Src/main.c    ****   CLEAR_TO_GO = true;
 325              		.loc 1 193 3 is_stmt 1 view .LVU90
 326              		.loc 1 193 15 is_stmt 0 view .LVU91
 327 0182 064B     		ldr	r3, .L18+4
 328 0184 0122     		movs	r2, #1
 329 0186 1A70     		strb	r2, [r3]
 194:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, GPIO_PIN_RESET);
 330              		.loc 1 194 3 is_stmt 1 view .LVU92
 331 0188 0022     		movs	r2, #0
 332 018a 4FF48061 		mov	r1, #1024
 333 018e 0248     		ldr	r0, .L18
 334 0190 FFF7FEFF 		bl	HAL_GPIO_WritePin
 335              	.LVL16:
 195:Src/main.c    **** }
 336              		.loc 1 195 1 is_stmt 0 view .LVU93
 337 0194 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 338              	.LVL17:
 339              	.L19:
 340              		.loc 1 195 1 view .LVU94
 341              		.align	2
 342              	.L18:
 343 0198 000C0048 		.word	1207962624
 344 019c 00000000 		.word	.LANCHOR0
 345 01a0 00000000 		.word	previous_V_Hz
 346 01a4 00000000 		.word	cycles_Hz
 347 01a8 00000000 		.word	.LANCHOR2
 348 01ac 00000000 		.word	.LANCHOR3
 349 01b0 00000000 		.word	.LANCHOR4
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 11


 350 01b4 00000000 		.word	.LANCHOR5
 351 01b8 00000000 		.word	adc1_dma_buff
 352 01bc 00000000 		.word	sample_V
 353 01c0 00000000 		.word	signed_V
 354 01c4 00000000 		.word	adc3_dma_buff
 355 01c8 00000000 		.word	sample_I
 356 01cc 00000000 		.word	signed_I
 357 01d0 00000000 		.word	adc_buff_half_size
 358 01d4 00000000 		.word	sample_V_Hz
 359 01d8 00000000 		.word	signed_V_Hz
 360 01dc 00000000 		.word	.LANCHOR1
 361              		.cfi_endproc
 362              	.LFE126:
 364              		.section	.text._Error_Handler,"ax",%progbits
 365              		.align	1
 366              		.global	_Error_Handler
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	_Error_Handler:
 373              	.LVL18:
 374              	.LFB129:
 196:Src/main.c    **** 
 197:Src/main.c    **** /* USER CODE END 0 */
 198:Src/main.c    **** 
 199:Src/main.c    **** /**
 200:Src/main.c    ****   * @brief  The application entry point.
 201:Src/main.c    ****   *
 202:Src/main.c    ****   * @retval None
 203:Src/main.c    ****   */
 204:Src/main.c    **** int main(void)
 205:Src/main.c    **** {
 206:Src/main.c    ****   /* USER CODE BEGIN 1 */
 207:Src/main.c    ****   float V_RATIO = VCAL * VOLTS_PER_DIV;
 208:Src/main.c    ****   float I_RATIO = ICAL * VOLTS_PER_DIV;
 209:Src/main.c    ****   /* USER CODE END 1 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 212:Src/main.c    **** 
 213:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 214:Src/main.c    ****   HAL_Init();
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE BEGIN Init */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END Init */
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* Configure the system clock */
 221:Src/main.c    ****   SystemClock_Config();
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE END SysInit */
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* Initialize all configured peripherals */
 228:Src/main.c    ****   MX_GPIO_Init();
 229:Src/main.c    ****   MX_DMA_Init();
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 12


 230:Src/main.c    ****   MX_USART2_UART_Init();
 231:Src/main.c    ****   MX_OPAMP4_Init();
 232:Src/main.c    ****   MX_ADC3_Init();
 233:Src/main.c    ****   MX_TIM8_Init();
 234:Src/main.c    ****   MX_ADC1_Init();
 235:Src/main.c    ****   MX_USART1_UART_Init();
 236:Src/main.c    ****   /* USER CODE BEGIN 2 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   debug_printf("start, conn. VT\r\n");
 239:Src/main.c    ****   sprintf(log_buffer, "%d\r\n", adc_buff_half_size);
 240:Src/main.c    **** 
 241:Src/main.c    ****   HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 242:Src/main.c    ****   HAL_ADCEx_Calibration_Start(&hadc3, ADC_SINGLE_ENDED);
 243:Src/main.c    **** 
 244:Src/main.c    ****   HAL_OPAMP_Start(&hopamp4);
 245:Src/main.c    **** 
 246:Src/main.c    ****   HAL_Delay(2);
 247:Src/main.c    **** 
 248:Src/main.c    ****   start_ADCs();
 249:Src/main.c    **** 
 250:Src/main.c    ****   /* USER CODE END 2 */
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* Infinite loop */
 253:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 254:Src/main.c    **** 
 255:Src/main.c    ****   while (1)
 256:Src/main.c    ****   {
 257:Src/main.c    ****     if (conv_cplt_flag)
 258:Src/main.c    ****     {
 259:Src/main.c    ****       conv_cplt_flag = false;
 260:Src/main.c    ****       process_frame(0);
 261:Src/main.c    ****     }
 262:Src/main.c    ****     if (conv_hfcplt_flag)
 263:Src/main.c    ****     {
 264:Src/main.c    ****       conv_hfcplt_flag = false;
 265:Src/main.c    ****       process_frame(adc_buff_half_size);
 266:Src/main.c    ****     }
 267:Src/main.c    **** 
 268:Src/main.c    ****     if (readings_ready && CLEAR_TO_GO)
 269:Src/main.c    ****     {
 270:Src/main.c    ****       HAL_GPIO_WritePin(GPIOD, GPIO_PIN_9, GPIO_PIN_SET);
 271:Src/main.c    ****       readings_ready = false;
 272:Src/main.c    ****       //process_ds18b20s();
 273:Src/main.c    **** 
 274:Src/main.c    ****       for (int ch = 0; ch < CTn; ch++)
 275:Src/main.c    ****       {
 276:Src/main.c    ****         channel_t *chn = &channels_ready[ch];
 277:Src/main.c    **** 
 278:Src/main.c    ****         float Vmean = (float)chn->sum_V / (float)chn->count;
 279:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 280:Src/main.c    **** 
 281:Src/main.c    ****         float f32sum_V_sq_avg = (float)chn->sum_V_sq / (float)chn->count;
 282:Src/main.c    ****         f32sum_V_sq_avg -= (Vmean * Vmean); // offset removal
 283:Src/main.c    **** 
 284:Src/main.c    ****         float f32sum_I_sq_avg = (float)chn->sum_I_sq / (float)chn->count;
 285:Src/main.c    ****         f32sum_I_sq_avg -= (Imean * Imean); // offset removal
 286:Src/main.c    **** 
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 13


 287:Src/main.c    ****         if (f32sum_V_sq_avg < 0) // if offset removal cause a negative number,
 288:Src/main.c    ****           f32sum_V_sq_avg = 0;   // make it 0 to avoid a nan at sqrt.
 289:Src/main.c    ****         if (f32sum_I_sq_avg < 0)
 290:Src/main.c    ****           f32sum_I_sq_avg = 0;
 291:Src/main.c    **** 
 292:Src/main.c    ****         float Vrms = V_RATIO * sqrtf(f32sum_V_sq_avg);
 293:Src/main.c    ****         float Irms = I_RATIO * sqrtf(f32sum_I_sq_avg);
 294:Src/main.c    **** 
 295:Src/main.c    ****         float f32_sum_P_avg = (float)chn->sum_P / (float)chn->count;
 296:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 297:Src/main.c    ****         float realPower = V_RATIO * I_RATIO * mean_P;
 298:Src/main.c    **** 
 299:Src/main.c    ****         float apparentPower = Vrms * Irms;
 300:Src/main.c    **** 
 301:Src/main.c    ****         float powerFactor;
 302:Src/main.c    ****         // calculate PF, preventing dividing by zero error.
 303:Src/main.c    ****         if (apparentPower != 0)
 304:Src/main.c    ****         {
 305:Src/main.c    ****           powerFactor = realPower / apparentPower;
 306:Src/main.c    ****         }
 307:Src/main.c    ****         else
 308:Src/main.c    ****           powerFactor = 0;
 309:Src/main.c    **** 
 310:Src/main.c    ****         int _ch = ch + 1;
 311:Src/main.c    ****         sprintf(log_buffer, "V%d:%.2f,I%d:%.3f,RP%d:%.1f,AP%d:%.1f,PF%d:%.3f,C%d:%ld,", _ch, Vrms, 
 312:Src/main.c    ****         rPi_printf(log_buffer);
 313:Src/main.c    ****         debug_printf(log_buffer);
 314:Src/main.c    **** 
 315:Src/main.c    ****         uint32_t current_millis = HAL_GetTick();
 316:Src/main.c    ****         sprintf(log_buffer, "millis:%ld\r\n", current_millis);
 317:Src/main.c    ****         debug_printf(log_buffer);
 318:Src/main.c    ****       }
 319:Src/main.c    ****       uint32_t current_millis = HAL_GetTick();
 320:Src/main.c    ****       sprintf(log_buffer, "millis:%ld,", current_millis);
 321:Src/main.c    ****       rPi_printf(log_buffer);
 322:Src/main.c    ****       sprintf(log_buffer, "PC:%ld,", pulseCount);
 323:Src/main.c    ****       rPi_printf(log_buffer);
 324:Src/main.c    **** 
 325:Src/main.c    ****       uint32_t Hz_t2 = HAL_GetTick();
 326:Src/main.c    ****       uint32_t Hz_td = (Hz_t2 - Hz_t1);
 327:Src/main.c    ****       //sprintf(log_buffer, "Hz_td:%ld\r\n", Hz_td);
 328:Src/main.c    ****       //debug_printf(log_buffer);
 329:Src/main.c    **** 
 330:Src/main.c    ****       Hz_array[Hz_array_counter] = Hz_td;
 331:Src/main.c    ****       Hz_array_counter++;
 332:Src/main.c    ****       //if (Hz_array_counter
 333:Src/main.c    ****       //sprintf(log_buffer, "Hz_array_counter:%d\r\n", Hz_array_counter);
 334:Src/main.c    ****       //debug_printf(log_buffer);
 335:Src/main.c    ****       Hz_t1 = Hz_t2;
 336:Src/main.c    ****       if (Hz_array_counter >= Hz_ARRAY_SIZE)
 337:Src/main.c    ****       {
 338:Src/main.c    ****         Hz_value_ready = true;
 339:Src/main.c    ****         Hz_array_counter = 0;
 340:Src/main.c    ****       }
 341:Src/main.c    ****       for (int i = 0; i < Hz_ARRAY_SIZE; i++)
 342:Src/main.c    ****       {
 343:Src/main.c    ****         //sprintf(log_buffer, "Hz_ARRAY:%ld :%d\r\n", Hz_array[i], i);
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 14


 344:Src/main.c    ****         //debug_printf(log_buffer);
 345:Src/main.c    ****         Hz_sum += Hz_array[i];
 346:Src/main.c    ****       }
 347:Src/main.c    ****       //}
 348:Src/main.c    ****       float Hz_value = 1000.0/((float)Hz_sum / (cycles*Hz_ARRAY_SIZE));
 349:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 350:Src/main.c    ****       rPi_printf(log_buffer);
 351:Src/main.c    ****       Hz_sum = 0;
 352:Src/main.c    **** 
 353:Src/main.c    ****       HAL_GPIO_WritePin(GPIOD, GPIO_PIN_9, GPIO_PIN_RESET);
 354:Src/main.c    ****     }
 355:Src/main.c    ****   /* USER CODE END WHILE */
 356:Src/main.c    **** 
 357:Src/main.c    ****   /* USER CODE BEGIN 3 */
 358:Src/main.c    ****   }
 359:Src/main.c    ****   /* USER CODE END 3 */
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /**
 364:Src/main.c    ****   * @brief System Clock Configuration
 365:Src/main.c    ****   * @retval None
 366:Src/main.c    ****   */
 367:Src/main.c    **** void SystemClock_Config(void)
 368:Src/main.c    **** {
 369:Src/main.c    **** 
 370:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 371:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 372:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 373:Src/main.c    **** 
 374:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 375:Src/main.c    ****     */
 376:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 377:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 378:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 379:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 380:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 381:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 382:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 383:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 384:Src/main.c    ****   {
 385:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 386:Src/main.c    ****   }
 387:Src/main.c    **** 
 388:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 389:Src/main.c    ****     */
 390:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 391:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 392:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 393:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 394:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 395:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 396:Src/main.c    **** 
 397:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 398:Src/main.c    ****   {
 399:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 400:Src/main.c    ****   }
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 15


 401:Src/main.c    **** 
 402:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 403:Src/main.c    ****                               |RCC_PERIPHCLK_TIM8;
 404:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_SYSCLK;
 405:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_SYSCLK;
 406:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 407:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 408:Src/main.c    ****   {
 409:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 410:Src/main.c    ****   }
 411:Src/main.c    **** 
 412:Src/main.c    ****     /**Configure the Systick interrupt time 
 413:Src/main.c    ****     */
 414:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 415:Src/main.c    **** 
 416:Src/main.c    ****     /**Configure the Systick 
 417:Src/main.c    ****     */
 418:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 421:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 422:Src/main.c    **** }
 423:Src/main.c    **** 
 424:Src/main.c    **** /* USER CODE BEGIN 4 */
 425:Src/main.c    **** 
 426:Src/main.c    **** /* USER CODE END 4 */
 427:Src/main.c    **** 
 428:Src/main.c    **** /**
 429:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 430:Src/main.c    ****   * @param  file: The file name as string.
 431:Src/main.c    ****   * @param  line: The line in file as a number.
 432:Src/main.c    ****   * @retval None
 433:Src/main.c    ****   */
 434:Src/main.c    **** void _Error_Handler(char *file, int line)
 435:Src/main.c    **** {
 375              		.loc 1 435 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ Volatile: function does not return.
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		.loc 1 435 1 is_stmt 0 view .LVU96
 381 0000 08B5     		push	{r3, lr}
 382              	.LCFI1:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 386 0002 0646     		mov	r6, r0
 387 0004 0D46     		mov	r5, r1
 388              	.LVL19:
 389              	.L21:
 436:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 437:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 438:Src/main.c    ****   while (1)
 390              		.loc 1 438 3 is_stmt 1 discriminator 1 view .LVU97
 439:Src/main.c    ****   {
 440:Src/main.c    ****     sprintf(log_buffer, "sys_error:%s,line:%d", file, line);
 391              		.loc 1 440 5 discriminator 1 view .LVU98
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 16


 392 0006 054C     		ldr	r4, .L23
 393 0008 2B46     		mov	r3, r5
 394 000a 3246     		mov	r2, r6
 395 000c 0449     		ldr	r1, .L23+4
 396 000e 2046     		mov	r0, r4
 397 0010 FFF7FEFF 		bl	sprintf
 398              	.LVL20:
 441:Src/main.c    ****     debug_printf(log_buffer);
 399              		.loc 1 441 5 discriminator 1 view .LVU99
 400 0014 2046     		mov	r0, r4
 401 0016 FFF7FEFF 		bl	debug_printf
 402              	.LVL21:
 403 001a F4E7     		b	.L21
 404              	.L24:
 405              		.align	2
 406              	.L23:
 407 001c 00000000 		.word	log_buffer
 408 0020 00000000 		.word	.LC0
 409              		.cfi_endproc
 410              	.LFE129:
 412              		.section	.text.SystemClock_Config,"ax",%progbits
 413              		.align	1
 414              		.global	SystemClock_Config
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	SystemClock_Config:
 421              	.LFB128:
 368:Src/main.c    **** 
 422              		.loc 1 368 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 152
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426 0000 00B5     		push	{lr}
 427              	.LCFI2:
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 14, -4
 430 0002 A7B0     		sub	sp, sp, #156
 431              	.LCFI3:
 432              		.cfi_def_cfa_offset 160
 370:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 433              		.loc 1 370 3 view .LVU101
 371:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 434              		.loc 1 371 3 view .LVU102
 372:Src/main.c    **** 
 435              		.loc 1 372 3 view .LVU103
 376:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 436              		.loc 1 376 3 view .LVU104
 376:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 437              		.loc 1 376 36 is_stmt 0 view .LVU105
 438 0004 0223     		movs	r3, #2
 439 0006 1C93     		str	r3, [sp, #112]
 377:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 440              		.loc 1 377 3 is_stmt 1 view .LVU106
 377:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 441              		.loc 1 377 30 is_stmt 0 view .LVU107
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 17


 442 0008 0122     		movs	r2, #1
 443 000a 1F92     		str	r2, [sp, #124]
 378:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 444              		.loc 1 378 3 is_stmt 1 view .LVU108
 378:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 445              		.loc 1 378 41 is_stmt 0 view .LVU109
 446 000c 1022     		movs	r2, #16
 447 000e 2092     		str	r2, [sp, #128]
 379:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 448              		.loc 1 379 3 is_stmt 1 view .LVU110
 379:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 449              		.loc 1 379 34 is_stmt 0 view .LVU111
 450 0010 2293     		str	r3, [sp, #136]
 380:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 451              		.loc 1 380 3 is_stmt 1 view .LVU112
 380:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 452              		.loc 1 380 35 is_stmt 0 view .LVU113
 453 0012 4FF40043 		mov	r3, #32768
 454 0016 2393     		str	r3, [sp, #140]
 381:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 455              		.loc 1 381 3 is_stmt 1 view .LVU114
 381:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 456              		.loc 1 381 32 is_stmt 0 view .LVU115
 457 0018 4FF4E013 		mov	r3, #1835008
 458 001c 2493     		str	r3, [sp, #144]
 382:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 459              		.loc 1 382 3 is_stmt 1 view .LVU116
 382:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 460              		.loc 1 382 32 is_stmt 0 view .LVU117
 461 001e 0023     		movs	r3, #0
 462 0020 2593     		str	r3, [sp, #148]
 383:Src/main.c    ****   {
 463              		.loc 1 383 3 is_stmt 1 view .LVU118
 383:Src/main.c    ****   {
 464              		.loc 1 383 7 is_stmt 0 view .LVU119
 465 0022 1CA8     		add	r0, sp, #112
 466 0024 FFF7FEFF 		bl	HAL_RCC_OscConfig
 467              	.LVL22:
 383:Src/main.c    ****   {
 468              		.loc 1 383 6 view .LVU120
 469 0028 78BB     		cbnz	r0, .L30
 390:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 470              		.loc 1 390 3 is_stmt 1 view .LVU121
 390:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 471              		.loc 1 390 31 is_stmt 0 view .LVU122
 472 002a 0F23     		movs	r3, #15
 473 002c 1793     		str	r3, [sp, #92]
 392:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 474              		.loc 1 392 3 is_stmt 1 view .LVU123
 392:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 475              		.loc 1 392 34 is_stmt 0 view .LVU124
 476 002e 0221     		movs	r1, #2
 477 0030 1891     		str	r1, [sp, #96]
 393:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 478              		.loc 1 393 3 is_stmt 1 view .LVU125
 393:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 479              		.loc 1 393 35 is_stmt 0 view .LVU126
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 18


 480 0032 0023     		movs	r3, #0
 481 0034 1993     		str	r3, [sp, #100]
 394:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 482              		.loc 1 394 3 is_stmt 1 view .LVU127
 394:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 483              		.loc 1 394 36 is_stmt 0 view .LVU128
 484 0036 4FF48062 		mov	r2, #1024
 485 003a 1A92     		str	r2, [sp, #104]
 395:Src/main.c    **** 
 486              		.loc 1 395 3 is_stmt 1 view .LVU129
 395:Src/main.c    **** 
 487              		.loc 1 395 36 is_stmt 0 view .LVU130
 488 003c 1B93     		str	r3, [sp, #108]
 397:Src/main.c    ****   {
 489              		.loc 1 397 3 is_stmt 1 view .LVU131
 397:Src/main.c    ****   {
 490              		.loc 1 397 7 is_stmt 0 view .LVU132
 491 003e 17A8     		add	r0, sp, #92
 492 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 493              	.LVL23:
 397:Src/main.c    ****   {
 494              		.loc 1 397 6 view .LVU133
 495 0044 30BB     		cbnz	r0, .L31
 402:Src/main.c    ****                               |RCC_PERIPHCLK_TIM8;
 496              		.loc 1 402 3 is_stmt 1 view .LVU134
 402:Src/main.c    ****                               |RCC_PERIPHCLK_TIM8;
 497              		.loc 1 402 38 is_stmt 0 view .LVU135
 498 0046 42F20303 		movw	r3, #8195
 499 004a 0193     		str	r3, [sp, #4]
 404:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_SYSCLK;
 500              		.loc 1 404 3 is_stmt 1 view .LVU136
 404:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_SYSCLK;
 501              		.loc 1 404 38 is_stmt 0 view .LVU137
 502 004c 0123     		movs	r3, #1
 503 004e 0393     		str	r3, [sp, #12]
 405:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 504              		.loc 1 405 3 is_stmt 1 view .LVU138
 405:Src/main.c    ****   PeriphClkInit.Tim8ClockSelection = RCC_TIM8CLK_HCLK;
 505              		.loc 1 405 38 is_stmt 0 view .LVU139
 506 0050 4FF48033 		mov	r3, #65536
 507 0054 0493     		str	r3, [sp, #16]
 406:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 508              		.loc 1 406 3 is_stmt 1 view .LVU140
 406:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 509              		.loc 1 406 36 is_stmt 0 view .LVU141
 510 0056 0023     		movs	r3, #0
 511 0058 1193     		str	r3, [sp, #68]
 407:Src/main.c    ****   {
 512              		.loc 1 407 3 is_stmt 1 view .LVU142
 407:Src/main.c    ****   {
 513              		.loc 1 407 7 is_stmt 0 view .LVU143
 514 005a 01A8     		add	r0, sp, #4
 515 005c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 516              	.LVL24:
 407:Src/main.c    ****   {
 517              		.loc 1 407 6 view .LVU144
 518 0060 E8B9     		cbnz	r0, .L32
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 19


 414:Src/main.c    **** 
 519              		.loc 1 414 3 is_stmt 1 view .LVU145
 414:Src/main.c    **** 
 520              		.loc 1 414 22 is_stmt 0 view .LVU146
 521 0062 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 522              	.LVL25:
 414:Src/main.c    **** 
 523              		.loc 1 414 3 view .LVU147
 524 0066 104B     		ldr	r3, .L33
 525 0068 A3FB0030 		umull	r3, r0, r3, r0
 526 006c 8009     		lsrs	r0, r0, #6
 527 006e FFF7FEFF 		bl	HAL_SYSTICK_Config
 528              	.LVL26:
 418:Src/main.c    **** 
 529              		.loc 1 418 3 is_stmt 1 view .LVU148
 530 0072 0420     		movs	r0, #4
 531 0074 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 532              	.LVL27:
 421:Src/main.c    **** }
 533              		.loc 1 421 3 view .LVU149
 534 0078 0022     		movs	r2, #0
 535 007a 1146     		mov	r1, r2
 536 007c 4FF0FF30 		mov	r0, #-1
 537 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 538              	.LVL28:
 422:Src/main.c    **** 
 539              		.loc 1 422 1 is_stmt 0 view .LVU150
 540 0084 27B0     		add	sp, sp, #156
 541              	.LCFI4:
 542              		.cfi_remember_state
 543              		.cfi_def_cfa_offset 4
 544              		@ sp needed
 545 0086 5DF804FB 		ldr	pc, [sp], #4
 546              	.L30:
 547              	.LCFI5:
 548              		.cfi_restore_state
 385:Src/main.c    ****   }
 549              		.loc 1 385 5 is_stmt 1 view .LVU151
 550 008a 40F28111 		movw	r1, #385
 551 008e 0748     		ldr	r0, .L33+4
 552 0090 FFF7FEFF 		bl	_Error_Handler
 553              	.LVL29:
 554              	.L31:
 399:Src/main.c    ****   }
 555              		.loc 1 399 5 view .LVU152
 556 0094 40F28F11 		movw	r1, #399
 557 0098 0448     		ldr	r0, .L33+4
 558 009a FFF7FEFF 		bl	_Error_Handler
 559              	.LVL30:
 560              	.L32:
 409:Src/main.c    ****   }
 561              		.loc 1 409 5 view .LVU153
 562 009e 40F29911 		movw	r1, #409
 563 00a2 0248     		ldr	r0, .L33+4
 564 00a4 FFF7FEFF 		bl	_Error_Handler
 565              	.LVL31:
 566              	.L34:
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 20


 567              		.align	2
 568              	.L33:
 569 00a8 D34D6210 		.word	274877907
 570 00ac 00000000 		.word	.LC1
 571              		.cfi_endproc
 572              	.LFE128:
 574              		.global	__aeabi_ul2f
 575              		.global	__aeabi_l2f
 576              		.global	__aeabi_f2d
 577              		.section	.text.main,"ax",%progbits
 578              		.align	1
 579              		.global	main
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv4-sp-d16
 585              	main:
 586              	.LFB127:
 205:Src/main.c    ****   /* USER CODE BEGIN 1 */
 587              		.loc 1 205 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 70B5     		push	{r4, r5, r6, lr}
 592              	.LCFI6:
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 4, -16
 595              		.cfi_offset 5, -12
 596              		.cfi_offset 6, -8
 597              		.cfi_offset 14, -4
 598 0002 2DED088B 		vpush.64	{d8, d9, d10, d11}
 599              	.LCFI7:
 600              		.cfi_def_cfa_offset 48
 601              		.cfi_offset 80, -48
 602              		.cfi_offset 81, -44
 603              		.cfi_offset 82, -40
 604              		.cfi_offset 83, -36
 605              		.cfi_offset 84, -32
 606              		.cfi_offset 85, -28
 607              		.cfi_offset 86, -24
 608              		.cfi_offset 87, -20
 609 0006 94B0     		sub	sp, sp, #80
 610              	.LCFI8:
 611              		.cfi_def_cfa_offset 128
 207:Src/main.c    ****   float I_RATIO = ICAL * VOLTS_PER_DIV;
 612              		.loc 1 207 3 view .LVU155
 207:Src/main.c    ****   float I_RATIO = ICAL * VOLTS_PER_DIV;
 613              		.loc 1 207 24 is_stmt 0 view .LVU156
 614 0008 B84B     		ldr	r3, .L57
 615 000a D3ED00AA 		vldr.32	s21, [r3]
 207:Src/main.c    ****   float I_RATIO = ICAL * VOLTS_PER_DIV;
 616              		.loc 1 207 9 view .LVU157
 617 000e DFEDB87A 		vldr.32	s15, .L57+4
 618 0012 6AEEA7AA 		vmul.f32	s21, s21, s15
 619              	.LVL32:
 208:Src/main.c    ****   /* USER CODE END 1 */
 620              		.loc 1 208 3 is_stmt 1 view .LVU158
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 21


 208:Src/main.c    ****   /* USER CODE END 1 */
 621              		.loc 1 208 24 is_stmt 0 view .LVU159
 622 0016 B74B     		ldr	r3, .L57+8
 623 0018 93ED00AA 		vldr.32	s20, [r3]
 208:Src/main.c    ****   /* USER CODE END 1 */
 624              		.loc 1 208 9 view .LVU160
 625 001c 2AEE27AA 		vmul.f32	s20, s20, s15
 626              	.LVL33:
 214:Src/main.c    **** 
 627              		.loc 1 214 3 is_stmt 1 view .LVU161
 628 0020 FFF7FEFF 		bl	HAL_Init
 629              	.LVL34:
 221:Src/main.c    **** 
 630              		.loc 1 221 3 view .LVU162
 631 0024 FFF7FEFF 		bl	SystemClock_Config
 632              	.LVL35:
 228:Src/main.c    ****   MX_DMA_Init();
 633              		.loc 1 228 3 view .LVU163
 634 0028 FFF7FEFF 		bl	MX_GPIO_Init
 635              	.LVL36:
 229:Src/main.c    ****   MX_USART2_UART_Init();
 636              		.loc 1 229 3 view .LVU164
 637 002c FFF7FEFF 		bl	MX_DMA_Init
 638              	.LVL37:
 230:Src/main.c    ****   MX_OPAMP4_Init();
 639              		.loc 1 230 3 view .LVU165
 640 0030 FFF7FEFF 		bl	MX_USART2_UART_Init
 641              	.LVL38:
 231:Src/main.c    ****   MX_ADC3_Init();
 642              		.loc 1 231 3 view .LVU166
 643 0034 FFF7FEFF 		bl	MX_OPAMP4_Init
 644              	.LVL39:
 232:Src/main.c    ****   MX_TIM8_Init();
 645              		.loc 1 232 3 view .LVU167
 646 0038 FFF7FEFF 		bl	MX_ADC3_Init
 647              	.LVL40:
 233:Src/main.c    ****   MX_ADC1_Init();
 648              		.loc 1 233 3 view .LVU168
 649 003c FFF7FEFF 		bl	MX_TIM8_Init
 650              	.LVL41:
 234:Src/main.c    ****   MX_USART1_UART_Init();
 651              		.loc 1 234 3 view .LVU169
 652 0040 FFF7FEFF 		bl	MX_ADC1_Init
 653              	.LVL42:
 235:Src/main.c    ****   /* USER CODE BEGIN 2 */
 654              		.loc 1 235 3 view .LVU170
 655 0044 FFF7FEFF 		bl	MX_USART1_UART_Init
 656              	.LVL43:
 238:Src/main.c    ****   sprintf(log_buffer, "%d\r\n", adc_buff_half_size);
 657              		.loc 1 238 3 view .LVU171
 658 0048 AB48     		ldr	r0, .L57+12
 659 004a FFF7FEFF 		bl	debug_printf
 660              	.LVL44:
 239:Src/main.c    **** 
 661              		.loc 1 239 3 view .LVU172
 662 004e AB4B     		ldr	r3, .L57+16
 663 0050 1E88     		ldrh	r6, [r3]
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 22


 664 0052 3246     		mov	r2, r6
 665 0054 AA49     		ldr	r1, .L57+20
 666 0056 AB48     		ldr	r0, .L57+24
 667 0058 FFF7FEFF 		bl	sprintf
 668              	.LVL45:
 241:Src/main.c    ****   HAL_ADCEx_Calibration_Start(&hadc3, ADC_SINGLE_ENDED);
 669              		.loc 1 241 3 view .LVU173
 670 005c 0021     		movs	r1, #0
 671 005e AA48     		ldr	r0, .L57+28
 672 0060 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 673              	.LVL46:
 242:Src/main.c    **** 
 674              		.loc 1 242 3 view .LVU174
 675 0064 0021     		movs	r1, #0
 676 0066 A948     		ldr	r0, .L57+32
 677 0068 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 678              	.LVL47:
 244:Src/main.c    **** 
 679              		.loc 1 244 3 view .LVU175
 680 006c A848     		ldr	r0, .L57+36
 681 006e FFF7FEFF 		bl	HAL_OPAMP_Start
 682              	.LVL48:
 246:Src/main.c    **** 
 683              		.loc 1 246 3 view .LVU176
 684 0072 0220     		movs	r0, #2
 685 0074 FFF7FEFF 		bl	HAL_Delay
 686              	.LVL49:
 248:Src/main.c    **** 
 687              		.loc 1 248 3 view .LVU177
 688 0078 FFF7FEFF 		bl	start_ADCs
 689              	.LVL50:
 690 007c 19E1     		b	.L36
 691              	.L55:
 259:Src/main.c    ****       process_frame(0);
 692              		.loc 1 259 7 view .LVU178
 259:Src/main.c    ****       process_frame(0);
 693              		.loc 1 259 22 is_stmt 0 view .LVU179
 694 007e 0020     		movs	r0, #0
 695 0080 A44B     		ldr	r3, .L57+40
 696 0082 1870     		strb	r0, [r3]
 260:Src/main.c    ****     }
 697              		.loc 1 260 7 is_stmt 1 view .LVU180
 698 0084 FFF7FEFF 		bl	process_frame
 699              	.LVL51:
 700 0088 18E1     		b	.L37
 701              	.L56:
 264:Src/main.c    ****       process_frame(adc_buff_half_size);
 702              		.loc 1 264 7 view .LVU181
 264:Src/main.c    ****       process_frame(adc_buff_half_size);
 703              		.loc 1 264 24 is_stmt 0 view .LVU182
 704 008a A34B     		ldr	r3, .L57+44
 705 008c 0022     		movs	r2, #0
 706 008e 1A70     		strb	r2, [r3]
 265:Src/main.c    ****     }
 707              		.loc 1 265 7 is_stmt 1 view .LVU183
 708 0090 3046     		mov	r0, r6
 709 0092 FFF7FEFF 		bl	process_frame
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 23


 710              	.LVL52:
 711 0096 16E1     		b	.L38
 712              	.LVL53:
 713              	.L53:
 714              	.LBB8:
 715              	.LBB9:
 716              	.LBB10:
 288:Src/main.c    ****         if (f32sum_I_sq_avg < 0)
 717              		.loc 1 288 27 is_stmt 0 view .LVU184
 718 0098 9FEDA09A 		vldr.32	s18, .L57+48
 719              	.LVL54:
 288:Src/main.c    ****         if (f32sum_I_sq_avg < 0)
 720              		.loc 1 288 27 view .LVU185
 721 009c 73E0     		b	.L41
 722              	.LVL55:
 723              	.L54:
 290:Src/main.c    **** 
 724              		.loc 1 290 27 view .LVU186
 725 009e 9FED9F8A 		vldr.32	s16, .L57+48
 726              	.LVL56:
 290:Src/main.c    **** 
 727              		.loc 1 290 27 view .LVU187
 728 00a2 75E0     		b	.L42
 729              	.LVL57:
 730              	.L50:
 308:Src/main.c    **** 
 731              		.loc 1 308 23 view .LVU188
 732 00a4 DFED9D7A 		vldr.32	s15, .L57+48
 733              	.LVL58:
 734              	.L43:
 310:Src/main.c    ****         sprintf(log_buffer, "V%d:%.2f,I%d:%.3f,RP%d:%.1f,AP%d:%.1f,PF%d:%.3f,C%d:%ld,", _ch, Vrms, 
 735              		.loc 1 310 9 is_stmt 1 discriminator 2 view .LVU189
 310:Src/main.c    ****         sprintf(log_buffer, "V%d:%.2f,I%d:%.3f,RP%d:%.1f,AP%d:%.1f,PF%d:%.3f,C%d:%ld,", _ch, Vrms, 
 736              		.loc 1 310 13 is_stmt 0 discriminator 2 view .LVU190
 737 00a8 0134     		adds	r4, r4, #1
 738              	.LVL59:
 311:Src/main.c    ****         rPi_printf(log_buffer);
 739              		.loc 1 311 9 is_stmt 1 discriminator 2 view .LVU191
 740 00aa 964D     		ldr	r5, .L57+24
 741 00ac 1393     		str	r3, [sp, #76]
 742 00ae 1294     		str	r4, [sp, #72]
 743 00b0 17EE900A 		vmov	r0, s15
 744              	.LVL60:
 311:Src/main.c    ****         rPi_printf(log_buffer);
 745              		.loc 1 311 9 is_stmt 0 discriminator 2 view .LVU192
 746 00b4 FFF7FEFF 		bl	__aeabi_f2d
 747              	.LVL61:
 311:Src/main.c    ****         rPi_printf(log_buffer);
 748              		.loc 1 311 9 discriminator 2 view .LVU193
 749 00b8 CDE91001 		strd	r0, [sp, #64]
 750 00bc 0E94     		str	r4, [sp, #56]
 751 00be 18EE100A 		vmov	r0, s16
 752 00c2 FFF7FEFF 		bl	__aeabi_f2d
 753              	.LVL62:
 754 00c6 CDE90C01 		strd	r0, [sp, #48]
 755 00ca 0A94     		str	r4, [sp, #40]
 756 00cc 18EE900A 		vmov	r0, s17
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 24


 757 00d0 FFF7FEFF 		bl	__aeabi_f2d
 758              	.LVL63:
 759 00d4 CDE90801 		strd	r0, [sp, #32]
 760 00d8 0694     		str	r4, [sp, #24]
 761 00da 1BEE100A 		vmov	r0, s22
 762 00de FFF7FEFF 		bl	__aeabi_f2d
 763              	.LVL64:
 764 00e2 CDE90401 		strd	r0, [sp, #16]
 765 00e6 0294     		str	r4, [sp, #8]
 766 00e8 19EE100A 		vmov	r0, s18
 767 00ec FFF7FEFF 		bl	__aeabi_f2d
 768              	.LVL65:
 769 00f0 CDE90001 		strd	r0, [sp]
 770 00f4 2246     		mov	r2, r4
 771 00f6 8A49     		ldr	r1, .L57+52
 772 00f8 2846     		mov	r0, r5
 773 00fa FFF7FEFF 		bl	sprintf
 774              	.LVL66:
 312:Src/main.c    ****         debug_printf(log_buffer);
 775              		.loc 1 312 9 is_stmt 1 discriminator 2 view .LVU194
 776 00fe 2846     		mov	r0, r5
 777 0100 FFF7FEFF 		bl	rPi_printf
 778              	.LVL67:
 313:Src/main.c    **** 
 779              		.loc 1 313 9 discriminator 2 view .LVU195
 780 0104 2846     		mov	r0, r5
 781 0106 FFF7FEFF 		bl	debug_printf
 782              	.LVL68:
 315:Src/main.c    ****         sprintf(log_buffer, "millis:%ld\r\n", current_millis);
 783              		.loc 1 315 9 discriminator 2 view .LVU196
 315:Src/main.c    ****         sprintf(log_buffer, "millis:%ld\r\n", current_millis);
 784              		.loc 1 315 35 is_stmt 0 discriminator 2 view .LVU197
 785 010a FFF7FEFF 		bl	HAL_GetTick
 786              	.LVL69:
 316:Src/main.c    ****         debug_printf(log_buffer);
 787              		.loc 1 316 9 is_stmt 1 discriminator 2 view .LVU198
 788 010e 0246     		mov	r2, r0
 789 0110 8449     		ldr	r1, .L57+56
 790 0112 2846     		mov	r0, r5
 791              	.LVL70:
 316:Src/main.c    ****         debug_printf(log_buffer);
 792              		.loc 1 316 9 is_stmt 0 discriminator 2 view .LVU199
 793 0114 FFF7FEFF 		bl	sprintf
 794              	.LVL71:
 317:Src/main.c    ****       }
 795              		.loc 1 317 9 is_stmt 1 discriminator 2 view .LVU200
 796 0118 2846     		mov	r0, r5
 797 011a FFF7FEFF 		bl	debug_printf
 798              	.LVL72:
 799              	.L40:
 317:Src/main.c    ****       }
 800              		.loc 1 317 9 is_stmt 0 discriminator 2 view .LVU201
 801              	.LBE10:
 274:Src/main.c    ****       {
 802              		.loc 1 274 7 discriminator 1 view .LVU202
 803 011e 082C     		cmp	r4, #8
 804 0120 67DC     		bgt	.L52
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 25


 805              	.LBB11:
 276:Src/main.c    **** 
 806              		.loc 1 276 9 is_stmt 1 view .LVU203
 807              	.LVL73:
 278:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 808              		.loc 1 278 9 view .LVU204
 278:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 809              		.loc 1 278 33 is_stmt 0 view .LVU205
 810 0122 A300     		lsls	r3, r4, #2
 811 0124 2344     		add	r3, r3, r4
 812 0126 DA00     		lsls	r2, r3, #3
 813 0128 7F4D     		ldr	r5, .L57+60
 814 012a 1544     		add	r5, r5, r2
 278:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 815              		.loc 1 278 23 view .LVU206
 816 012c D5ED067A 		vldr.32	s15, [r5, #24]	@ int
 817 0130 F8EEE77A 		vcvt.f32.s32	s15, s15
 278:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 818              		.loc 1 278 43 view .LVU207
 819 0134 95ED087A 		vldr.32	s14, [r5, #32]	@ int
 820 0138 B8EE478A 		vcvt.f32.u32	s16, s14
 278:Src/main.c    ****         float Imean = (float)chn->sum_I / (float)chn->count;
 821              		.loc 1 278 15 view .LVU208
 822 013c C7EE888A 		vdiv.f32	s17, s15, s16
 823              	.LVL74:
 279:Src/main.c    **** 
 824              		.loc 1 279 9 is_stmt 1 view .LVU209
 279:Src/main.c    **** 
 825              		.loc 1 279 23 is_stmt 0 view .LVU210
 826 0140 D5ED077A 		vldr.32	s15, [r5, #28]	@ int
 827 0144 F8EEE77A 		vcvt.f32.s32	s15, s15
 279:Src/main.c    **** 
 828              		.loc 1 279 15 view .LVU211
 829 0148 C7EE889A 		vdiv.f32	s19, s15, s16
 830              	.LVL75:
 281:Src/main.c    ****         f32sum_V_sq_avg -= (Vmean * Vmean); // offset removal
 831              		.loc 1 281 9 is_stmt 1 view .LVU212
 281:Src/main.c    ****         f32sum_V_sq_avg -= (Vmean * Vmean); // offset removal
 832              		.loc 1 281 33 is_stmt 0 view .LVU213
 833 014c D5E90201 		ldrd	r0, [r5, #8]
 834 0150 FFF7FEFF 		bl	__aeabi_ul2f
 835              	.LVL76:
 281:Src/main.c    ****         f32sum_V_sq_avg -= (Vmean * Vmean); // offset removal
 836              		.loc 1 281 15 view .LVU214
 837 0154 07EE900A 		vmov	s15, r0
 838 0158 87EE889A 		vdiv.f32	s18, s15, s16
 839              	.LVL77:
 282:Src/main.c    **** 
 840              		.loc 1 282 9 is_stmt 1 view .LVU215
 282:Src/main.c    **** 
 841              		.loc 1 282 35 is_stmt 0 view .LVU216
 842 015c 68EEA87A 		vmul.f32	s15, s17, s17
 282:Src/main.c    **** 
 843              		.loc 1 282 25 view .LVU217
 844 0160 39EE679A 		vsub.f32	s18, s18, s15
 845              	.LVL78:
 284:Src/main.c    ****         f32sum_I_sq_avg -= (Imean * Imean); // offset removal
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 26


 846              		.loc 1 284 9 is_stmt 1 view .LVU218
 284:Src/main.c    ****         f32sum_I_sq_avg -= (Imean * Imean); // offset removal
 847              		.loc 1 284 33 is_stmt 0 view .LVU219
 848 0164 D5E90401 		ldrd	r0, [r5, #16]
 849 0168 FFF7FEFF 		bl	__aeabi_ul2f
 850              	.LVL79:
 284:Src/main.c    ****         f32sum_I_sq_avg -= (Imean * Imean); // offset removal
 851              		.loc 1 284 15 view .LVU220
 852 016c 07EE900A 		vmov	s15, r0
 853 0170 C7EE887A 		vdiv.f32	s15, s15, s16
 854              	.LVL80:
 285:Src/main.c    **** 
 855              		.loc 1 285 9 is_stmt 1 view .LVU221
 285:Src/main.c    **** 
 856              		.loc 1 285 35 is_stmt 0 view .LVU222
 857 0174 29EEA98A 		vmul.f32	s16, s19, s19
 285:Src/main.c    **** 
 858              		.loc 1 285 25 view .LVU223
 859 0178 37EEC88A 		vsub.f32	s16, s15, s16
 860              	.LVL81:
 287:Src/main.c    ****           f32sum_V_sq_avg = 0;   // make it 0 to avoid a nan at sqrt.
 861              		.loc 1 287 9 is_stmt 1 view .LVU224
 287:Src/main.c    ****           f32sum_V_sq_avg = 0;   // make it 0 to avoid a nan at sqrt.
 862              		.loc 1 287 12 is_stmt 0 view .LVU225
 863 017c B5EEC09A 		vcmpe.f32	s18, #0
 864 0180 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 865 0184 88D4     		bmi	.L53
 866              	.LVL82:
 867              	.L41:
 289:Src/main.c    ****           f32sum_I_sq_avg = 0;
 868              		.loc 1 289 9 is_stmt 1 view .LVU226
 289:Src/main.c    ****           f32sum_I_sq_avg = 0;
 869              		.loc 1 289 12 is_stmt 0 view .LVU227
 870 0186 B5EEC08A 		vcmpe.f32	s16, #0
 871 018a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 872 018e 86D4     		bmi	.L54
 873              	.LVL83:
 874              	.L42:
 292:Src/main.c    ****         float Irms = I_RATIO * sqrtf(f32sum_I_sq_avg);
 875              		.loc 1 292 9 is_stmt 1 view .LVU228
 292:Src/main.c    ****         float Irms = I_RATIO * sqrtf(f32sum_I_sq_avg);
 876              		.loc 1 292 32 is_stmt 0 view .LVU229
 877 0190 B0EE490A 		vmov.f32	s0, s18
 878 0194 FFF7FEFF 		bl	sqrtf
 879              	.LVL84:
 292:Src/main.c    ****         float Irms = I_RATIO * sqrtf(f32sum_I_sq_avg);
 880              		.loc 1 292 15 view .LVU230
 881 0198 20EE2A9A 		vmul.f32	s18, s0, s21
 882              	.LVL85:
 293:Src/main.c    **** 
 883              		.loc 1 293 9 is_stmt 1 view .LVU231
 293:Src/main.c    **** 
 884              		.loc 1 293 32 is_stmt 0 view .LVU232
 885 019c B0EE480A 		vmov.f32	s0, s16
 886 01a0 FFF7FEFF 		bl	sqrtf
 887              	.LVL86:
 293:Src/main.c    **** 
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 27


 888              		.loc 1 293 15 view .LVU233
 889 01a4 20EE0ABA 		vmul.f32	s22, s0, s20
 890              	.LVL87:
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 891              		.loc 1 295 9 is_stmt 1 view .LVU234
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 892              		.loc 1 295 41 is_stmt 0 view .LVU235
 893 01a8 A300     		lsls	r3, r4, #2
 894 01aa 2344     		add	r3, r3, r4
 895 01ac DA00     		lsls	r2, r3, #3
 896 01ae 5E4D     		ldr	r5, .L57+60
 897 01b0 1544     		add	r5, r5, r2
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 898              		.loc 1 295 31 view .LVU236
 899 01b2 D5E90001 		ldrd	r0, [r5]
 900 01b6 FFF7FEFF 		bl	__aeabi_l2f
 901              	.LVL88:
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 902              		.loc 1 295 61 view .LVU237
 903 01ba 2B6A     		ldr	r3, [r5, #32]
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 904              		.loc 1 295 51 view .LVU238
 905 01bc 07EE903A 		vmov	s15, r3	@ int
 906 01c0 B8EE677A 		vcvt.f32.u32	s14, s15
 295:Src/main.c    ****         float mean_P = f32_sum_P_avg - (Vmean * Imean); // offset removal
 907              		.loc 1 295 15 view .LVU239
 908 01c4 07EE900A 		vmov	s15, r0
 909 01c8 C7EE877A 		vdiv.f32	s15, s15, s14
 910              	.LVL89:
 296:Src/main.c    ****         float realPower = V_RATIO * I_RATIO * mean_P;
 911              		.loc 1 296 9 is_stmt 1 view .LVU240
 296:Src/main.c    ****         float realPower = V_RATIO * I_RATIO * mean_P;
 912              		.loc 1 296 47 is_stmt 0 view .LVU241
 913 01cc 68EEA98A 		vmul.f32	s17, s17, s19
 914              	.LVL90:
 296:Src/main.c    ****         float realPower = V_RATIO * I_RATIO * mean_P;
 915              		.loc 1 296 15 view .LVU242
 916 01d0 77EEE87A 		vsub.f32	s15, s15, s17
 917              	.LVL91:
 297:Src/main.c    **** 
 918              		.loc 1 297 9 is_stmt 1 view .LVU243
 297:Src/main.c    **** 
 919              		.loc 1 297 35 is_stmt 0 view .LVU244
 920 01d4 6AEE8A8A 		vmul.f32	s17, s21, s20
 297:Src/main.c    **** 
 921              		.loc 1 297 15 view .LVU245
 922 01d8 68EEA78A 		vmul.f32	s17, s17, s15
 923              	.LVL92:
 299:Src/main.c    **** 
 924              		.loc 1 299 9 is_stmt 1 view .LVU246
 299:Src/main.c    **** 
 925              		.loc 1 299 15 is_stmt 0 view .LVU247
 926 01dc 29EE0B8A 		vmul.f32	s16, s18, s22
 927              	.LVL93:
 301:Src/main.c    ****         // calculate PF, preventing dividing by zero error.
 928              		.loc 1 301 9 is_stmt 1 view .LVU248
 303:Src/main.c    ****         {
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 28


 929              		.loc 1 303 9 view .LVU249
 303:Src/main.c    ****         {
 930              		.loc 1 303 12 is_stmt 0 view .LVU250
 931 01e0 B5EE408A 		vcmp.f32	s16, #0
 932 01e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 933 01e8 3FF45CAF 		beq	.L50
 305:Src/main.c    ****         }
 934              		.loc 1 305 11 is_stmt 1 view .LVU251
 305:Src/main.c    ****         }
 935              		.loc 1 305 23 is_stmt 0 view .LVU252
 936 01ec C8EE887A 		vdiv.f32	s15, s17, s16
 937              	.LVL94:
 305:Src/main.c    ****         }
 938              		.loc 1 305 23 view .LVU253
 939 01f0 5AE7     		b	.L43
 940              	.LVL95:
 941              	.L52:
 305:Src/main.c    ****         }
 942              		.loc 1 305 23 view .LVU254
 943              	.LBE11:
 944              	.LBE9:
 319:Src/main.c    ****       sprintf(log_buffer, "millis:%ld,", current_millis);
 945              		.loc 1 319 7 is_stmt 1 view .LVU255
 319:Src/main.c    ****       sprintf(log_buffer, "millis:%ld,", current_millis);
 946              		.loc 1 319 33 is_stmt 0 view .LVU256
 947 01f2 FFF7FEFF 		bl	HAL_GetTick
 948              	.LVL96:
 320:Src/main.c    ****       rPi_printf(log_buffer);
 949              		.loc 1 320 7 is_stmt 1 view .LVU257
 950 01f6 434C     		ldr	r4, .L57+24
 951              	.LVL97:
 320:Src/main.c    ****       rPi_printf(log_buffer);
 952              		.loc 1 320 7 is_stmt 0 view .LVU258
 953 01f8 0246     		mov	r2, r0
 954 01fa 4C49     		ldr	r1, .L57+64
 955 01fc 2046     		mov	r0, r4
 956              	.LVL98:
 320:Src/main.c    ****       rPi_printf(log_buffer);
 957              		.loc 1 320 7 view .LVU259
 958 01fe FFF7FEFF 		bl	sprintf
 959              	.LVL99:
 321:Src/main.c    ****       sprintf(log_buffer, "PC:%ld,", pulseCount);
 960              		.loc 1 321 7 is_stmt 1 view .LVU260
 961 0202 2046     		mov	r0, r4
 962 0204 FFF7FEFF 		bl	rPi_printf
 963              	.LVL100:
 322:Src/main.c    ****       rPi_printf(log_buffer);
 964              		.loc 1 322 7 view .LVU261
 965 0208 494B     		ldr	r3, .L57+68
 966 020a 1A68     		ldr	r2, [r3]
 967 020c 4949     		ldr	r1, .L57+72
 968 020e 2046     		mov	r0, r4
 969 0210 FFF7FEFF 		bl	sprintf
 970              	.LVL101:
 323:Src/main.c    **** 
 971              		.loc 1 323 7 view .LVU262
 972 0214 2046     		mov	r0, r4
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 29


 973 0216 FFF7FEFF 		bl	rPi_printf
 974              	.LVL102:
 325:Src/main.c    ****       uint32_t Hz_td = (Hz_t2 - Hz_t1);
 975              		.loc 1 325 7 view .LVU263
 325:Src/main.c    ****       uint32_t Hz_td = (Hz_t2 - Hz_t1);
 976              		.loc 1 325 24 is_stmt 0 view .LVU264
 977 021a FFF7FEFF 		bl	HAL_GetTick
 978              	.LVL103:
 326:Src/main.c    ****       //sprintf(log_buffer, "Hz_td:%ld\r\n", Hz_td);
 979              		.loc 1 326 7 is_stmt 1 view .LVU265
 326:Src/main.c    ****       //sprintf(log_buffer, "Hz_td:%ld\r\n", Hz_td);
 980              		.loc 1 326 31 is_stmt 0 view .LVU266
 981 021e 4649     		ldr	r1, .L57+76
 982 0220 0B68     		ldr	r3, [r1]
 326:Src/main.c    ****       //sprintf(log_buffer, "Hz_td:%ld\r\n", Hz_td);
 983              		.loc 1 326 16 view .LVU267
 984 0222 C21A     		subs	r2, r0, r3
 985              	.LVL104:
 330:Src/main.c    ****       Hz_array_counter++;
 986              		.loc 1 330 7 is_stmt 1 view .LVU268
 330:Src/main.c    ****       Hz_array_counter++;
 987              		.loc 1 330 15 is_stmt 0 view .LVU269
 988 0224 454C     		ldr	r4, .L57+80
 989 0226 2368     		ldr	r3, [r4]
 330:Src/main.c    ****       Hz_array_counter++;
 990              		.loc 1 330 34 view .LVU270
 991 0228 454D     		ldr	r5, .L57+84
 992 022a 45F82320 		str	r2, [r5, r3, lsl #2]
 331:Src/main.c    ****       //if (Hz_array_counter
 993              		.loc 1 331 7 is_stmt 1 view .LVU271
 331:Src/main.c    ****       //if (Hz_array_counter
 994              		.loc 1 331 23 is_stmt 0 view .LVU272
 995 022e 0133     		adds	r3, r3, #1
 996 0230 2360     		str	r3, [r4]
 335:Src/main.c    ****       if (Hz_array_counter >= Hz_ARRAY_SIZE)
 997              		.loc 1 335 7 is_stmt 1 view .LVU273
 335:Src/main.c    ****       if (Hz_array_counter >= Hz_ARRAY_SIZE)
 998              		.loc 1 335 13 is_stmt 0 view .LVU274
 999 0232 0860     		str	r0, [r1]
 336:Src/main.c    ****       {
 1000              		.loc 1 336 7 is_stmt 1 view .LVU275
 336:Src/main.c    ****       {
 1001              		.loc 1 336 10 is_stmt 0 view .LVU276
 1002 0234 132B     		cmp	r3, #19
 1003 0236 04DD     		ble	.L45
 338:Src/main.c    ****         Hz_array_counter = 0;
 1004              		.loc 1 338 9 is_stmt 1 view .LVU277
 338:Src/main.c    ****         Hz_array_counter = 0;
 1005              		.loc 1 338 24 is_stmt 0 view .LVU278
 1006 0238 424B     		ldr	r3, .L57+88
 1007 023a 0122     		movs	r2, #1
 1008              	.LVL105:
 338:Src/main.c    ****         Hz_array_counter = 0;
 1009              		.loc 1 338 24 view .LVU279
 1010 023c 1A70     		strb	r2, [r3]
 339:Src/main.c    ****       }
 1011              		.loc 1 339 9 is_stmt 1 view .LVU280
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 30


 339:Src/main.c    ****       }
 1012              		.loc 1 339 26 is_stmt 0 view .LVU281
 1013 023e 0022     		movs	r2, #0
 1014 0240 2260     		str	r2, [r4]
 1015              	.LVL106:
 1016              	.L45:
 1017              	.LBB12:
 274:Src/main.c    ****       {
 1018              		.loc 1 274 16 discriminator 1 view .LVU282
 1019 0242 0023     		movs	r3, #0
 1020 0244 07E0     		b	.L46
 1021              	.LVL107:
 1022              	.L47:
 274:Src/main.c    ****       {
 1023              		.loc 1 274 16 discriminator 1 view .LVU283
 1024              	.LBE12:
 1025              	.LBB13:
 345:Src/main.c    ****       }
 1026              		.loc 1 345 9 is_stmt 1 discriminator 3 view .LVU284
 345:Src/main.c    ****       }
 1027              		.loc 1 345 27 is_stmt 0 discriminator 3 view .LVU285
 1028 0246 3E4A     		ldr	r2, .L57+84
 1029 0248 52F82300 		ldr	r0, [r2, r3, lsl #2]
 345:Src/main.c    ****       }
 1030              		.loc 1 345 16 discriminator 3 view .LVU286
 1031 024c 3E49     		ldr	r1, .L57+92
 1032 024e 0A68     		ldr	r2, [r1]
 1033 0250 0244     		add	r2, r2, r0
 1034 0252 0A60     		str	r2, [r1]
 341:Src/main.c    ****       {
 1035              		.loc 1 341 43 discriminator 3 view .LVU287
 1036 0254 0133     		adds	r3, r3, #1
 1037              	.LVL108:
 1038              	.L46:
 341:Src/main.c    ****       {
 1039              		.loc 1 341 7 discriminator 1 view .LVU288
 1040 0256 132B     		cmp	r3, #19
 1041 0258 F5DD     		ble	.L47
 1042              	.LBE13:
 348:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 1043              		.loc 1 348 7 is_stmt 1 view .LVU289
 348:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 1044              		.loc 1 348 32 is_stmt 0 view .LVU290
 1045 025a 3B4C     		ldr	r4, .L57+92
 1046 025c D4ED007A 		vldr.32	s15, [r4]	@ int
 1047 0260 B8EE677A 		vcvt.f32.u32	s14, s15
 348:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 1048              		.loc 1 348 55 view .LVU291
 1049 0264 394B     		ldr	r3, .L57+96
 1050              	.LVL109:
 348:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 1051              		.loc 1 348 55 view .LVU292
 1052 0266 1B68     		ldr	r3, [r3]
 1053 0268 03EB8303 		add	r3, r3, r3, lsl #2
 1054 026c 9A00     		lsls	r2, r3, #2
 348:Src/main.c    ****       sprintf(log_buffer, "Hz_sum:%.2f,Ready:%d\r\n", Hz_value, Hz_value_ready);
 1055              		.loc 1 348 46 view .LVU293
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 31


 1056 026e 07EE902A 		vmov	s15, r2	@ int
 1057 0272 F8EEE77A 		vcvt.f32.s32	s15, s15
 1058 0276 C7EE276A 		vdiv.f32	s13, s14, s15
 1059              	.LVL110:
 349:Src/main.c    ****       rPi_printf(log_buffer);
 1060              		.loc 1 349 7 is_stmt 1 view .LVU294
 1061 027a DFED357A 		vldr.32	s15, .L57+100
 1062 027e C7EEA67A 		vdiv.f32	s15, s15, s13
 1063              	.LVL111:
 349:Src/main.c    ****       rPi_printf(log_buffer);
 1064              		.loc 1 349 7 is_stmt 0 view .LVU295
 1065 0282 17EE900A 		vmov	r0, s15
 1066 0286 FFF7FEFF 		bl	__aeabi_f2d
 1067              	.LVL112:
 349:Src/main.c    ****       rPi_printf(log_buffer);
 1068              		.loc 1 349 7 view .LVU296
 1069 028a 1E4D     		ldr	r5, .L57+24
 1070 028c 2D4B     		ldr	r3, .L57+88
 1071 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 0290 0093     		str	r3, [sp]
 1073 0292 0246     		mov	r2, r0
 1074 0294 0B46     		mov	r3, r1
 1075 0296 2F49     		ldr	r1, .L57+104
 1076 0298 2846     		mov	r0, r5
 1077 029a FFF7FEFF 		bl	sprintf
 1078              	.LVL113:
 350:Src/main.c    ****       Hz_sum = 0;
 1079              		.loc 1 350 7 is_stmt 1 view .LVU297
 1080 029e 2846     		mov	r0, r5
 1081 02a0 FFF7FEFF 		bl	rPi_printf
 1082              	.LVL114:
 351:Src/main.c    **** 
 1083              		.loc 1 351 7 view .LVU298
 351:Src/main.c    **** 
 1084              		.loc 1 351 14 is_stmt 0 view .LVU299
 1085 02a4 0022     		movs	r2, #0
 1086 02a6 2260     		str	r2, [r4]
 353:Src/main.c    ****     }
 1087              		.loc 1 353 7 is_stmt 1 view .LVU300
 1088 02a8 4FF40071 		mov	r1, #512
 1089 02ac 2A48     		ldr	r0, .L57+108
 1090 02ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 1091              	.LVL115:
 1092              	.L36:
 353:Src/main.c    ****     }
 1093              		.loc 1 353 7 is_stmt 0 view .LVU301
 1094              	.LBE8:
 255:Src/main.c    ****   {
 1095              		.loc 1 255 3 is_stmt 1 view .LVU302
 257:Src/main.c    ****     {
 1096              		.loc 1 257 5 view .LVU303
 257:Src/main.c    ****     {
 1097              		.loc 1 257 9 is_stmt 0 view .LVU304
 1098 02b2 184B     		ldr	r3, .L57+40
 1099 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 257:Src/main.c    ****     {
 1100              		.loc 1 257 8 view .LVU305
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 32


 1101 02b6 002B     		cmp	r3, #0
 1102 02b8 7FF4E1AE 		bne	.L55
 1103              	.L37:
 262:Src/main.c    ****     {
 1104              		.loc 1 262 5 is_stmt 1 view .LVU306
 262:Src/main.c    ****     {
 1105              		.loc 1 262 9 is_stmt 0 view .LVU307
 1106 02bc 164B     		ldr	r3, .L57+44
 1107 02be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262:Src/main.c    ****     {
 1108              		.loc 1 262 8 view .LVU308
 1109 02c0 002B     		cmp	r3, #0
 1110 02c2 7FF4E2AE 		bne	.L56
 1111              	.L38:
 268:Src/main.c    ****     {
 1112              		.loc 1 268 5 is_stmt 1 view .LVU309
 268:Src/main.c    ****     {
 1113              		.loc 1 268 9 is_stmt 0 view .LVU310
 1114 02c6 254B     		ldr	r3, .L57+112
 1115 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268:Src/main.c    ****     {
 1116              		.loc 1 268 8 view .LVU311
 1117 02ca 002B     		cmp	r3, #0
 1118 02cc F1D0     		beq	.L36
 268:Src/main.c    ****     {
 1119              		.loc 1 268 24 discriminator 1 view .LVU312
 1120 02ce 244B     		ldr	r3, .L57+116
 1121 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 02d2 002B     		cmp	r3, #0
 1123 02d4 EDD0     		beq	.L36
 1124              	.LBB15:
 270:Src/main.c    ****       readings_ready = false;
 1125              		.loc 1 270 7 is_stmt 1 view .LVU313
 1126 02d6 0122     		movs	r2, #1
 1127 02d8 4FF40071 		mov	r1, #512
 1128 02dc 1E48     		ldr	r0, .L57+108
 1129 02de FFF7FEFF 		bl	HAL_GPIO_WritePin
 1130              	.LVL116:
 271:Src/main.c    ****       //process_ds18b20s();
 1131              		.loc 1 271 7 view .LVU314
 271:Src/main.c    ****       //process_ds18b20s();
 1132              		.loc 1 271 22 is_stmt 0 view .LVU315
 1133 02e2 0024     		movs	r4, #0
 1134 02e4 1D4B     		ldr	r3, .L57+112
 1135 02e6 1C70     		strb	r4, [r3]
 274:Src/main.c    ****       {
 1136              		.loc 1 274 7 is_stmt 1 view .LVU316
 1137              	.LBB14:
 274:Src/main.c    ****       {
 1138              		.loc 1 274 12 view .LVU317
 1139              	.LVL117:
 274:Src/main.c    ****       {
 1140              		.loc 1 274 7 is_stmt 0 view .LVU318
 1141 02e8 19E7     		b	.L40
 1142              	.L58:
 1143 02ea 00BF     		.align	2
 1144              	.L57:
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 33


 1145 02ec 00000000 		.word	.LANCHOR6
 1146 02f0 3333533A 		.word	978531123
 1147 02f4 00000000 		.word	.LANCHOR7
 1148 02f8 00000000 		.word	.LC2
 1149 02fc 00000000 		.word	adc_buff_half_size
 1150 0300 14000000 		.word	.LC3
 1151 0304 00000000 		.word	log_buffer
 1152 0308 00000000 		.word	hadc1
 1153 030c 00000000 		.word	hadc3
 1154 0310 00000000 		.word	hopamp4
 1155 0314 00000000 		.word	conv_cplt_flag
 1156 0318 00000000 		.word	conv_hfcplt_flag
 1157 031c 00000000 		.word	0
 1158 0320 1C000000 		.word	.LC4
 1159 0324 58000000 		.word	.LC5
 1160 0328 00000000 		.word	.LANCHOR4
 1161 032c 68000000 		.word	.LC6
 1162 0330 00000000 		.word	.LANCHOR8
 1163 0334 74000000 		.word	.LC7
 1164 0338 00000000 		.word	.LANCHOR9
 1165 033c 00000000 		.word	.LANCHOR10
 1166 0340 00000000 		.word	.LANCHOR11
 1167 0344 00000000 		.word	.LANCHOR12
 1168 0348 00000000 		.word	.LANCHOR13
 1169 034c 00000000 		.word	.LANCHOR1
 1170 0350 00007A44 		.word	1148846080
 1171 0354 7C000000 		.word	.LC8
 1172 0358 000C0048 		.word	1207962624
 1173 035c 00000000 		.word	.LANCHOR5
 1174 0360 00000000 		.word	.LANCHOR0
 1175              	.LBE14:
 1176              	.LBE15:
 1177              		.cfi_endproc
 1178              	.LFE127:
 1180              		.global	Hz_value_ready
 1181              		.global	Hz_sum
 1182              		.global	Hz_array_counter
 1183              		.global	Hz_array
 1184              		.global	Hz_t1
 1185              		.global	hz_ready
 1186              		.comm	cycles_Hz,2,2
 1187              		.comm	previous_V_Hz,2,2
 1188              		.comm	signed_V_Hz,2,2
 1189              		.comm	sample_V_Hz,2,2
 1190              		.comm	signed_I,2,2
 1191              		.comm	signed_V,2,2
 1192              		.comm	sample_I,2,2
 1193              		.comm	sample_V,2,2
 1194              		.global	pulseCount
 1195              		.global	ICAL
 1196              		.global	VCAL
 1197              		.global	VOLTS_PER_DIV
 1198              		.global	CLEAR_TO_GO
 1199              		.global	readings_ready
 1200              		.global	cycles
 1201              		.comm	log_buffer,150,4
 1202              		.comm	conv_cplt_flag,1,1
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 34


 1203              		.comm	conv_hfcplt_flag,1,1
 1204              		.comm	adc1_full_conv_overrun,2,2
 1205              		.comm	adc1_half_conv_overrun,2,2
 1206              		.comm	adc1_full_conv_complete,2,2
 1207              		.comm	adc1_half_conv_complete,2,2
 1208              		.comm	adc3_dma_buff,18000,4
 1209              		.comm	adc1_dma_buff,18000,4
 1210              		.comm	adc_buff_half_size,2,2
 1211              		.comm	adc_buff_size,2,2
 1212              		.section	.bss.Hz_array,"aw",%nobits
 1213              		.align	2
 1214              		.set	.LANCHOR11,. + 0
 1217              	Hz_array:
 1218 0000 00000000 		.space	80
 1218      00000000 
 1218      00000000 
 1218      00000000 
 1218      00000000 
 1219              		.section	.bss.Hz_array_counter,"aw",%nobits
 1220              		.align	2
 1221              		.set	.LANCHOR10,. + 0
 1224              	Hz_array_counter:
 1225 0000 00000000 		.space	4
 1226              		.section	.bss.Hz_sum,"aw",%nobits
 1227              		.align	2
 1228              		.set	.LANCHOR13,. + 0
 1231              	Hz_sum:
 1232 0000 00000000 		.space	4
 1233              		.section	.bss.Hz_t1,"aw",%nobits
 1234              		.align	2
 1235              		.set	.LANCHOR9,. + 0
 1238              	Hz_t1:
 1239 0000 00000000 		.space	4
 1240              		.section	.bss.Hz_value_ready,"aw",%nobits
 1241              		.set	.LANCHOR12,. + 0
 1244              	Hz_value_ready:
 1245 0000 00       		.space	1
 1246              		.section	.bss.channels,"aw",%nobits
 1247              		.align	3
 1248              		.set	.LANCHOR3,. + 0
 1251              	channels:
 1252 0000 00000000 		.space	360
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1252      00000000 
 1253              		.section	.bss.channels_ready,"aw",%nobits
 1254              		.align	3
 1255              		.set	.LANCHOR4,. + 0
 1258              	channels_ready:
 1259 0000 00000000 		.space	360
 1259      00000000 
 1259      00000000 
 1259      00000000 
 1259      00000000 
 1260              		.section	.bss.hz_ready,"aw",%nobits
 1261              		.set	.LANCHOR2,. + 0
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 35


 1264              	hz_ready:
 1265 0000 00       		.space	1
 1266              		.section	.bss.pulseCount,"aw",%nobits
 1267              		.align	2
 1268              		.set	.LANCHOR8,. + 0
 1271              	pulseCount:
 1272 0000 00000000 		.space	4
 1273              		.section	.bss.readings_ready,"aw",%nobits
 1274              		.set	.LANCHOR5,. + 0
 1277              	readings_ready:
 1278 0000 00       		.space	1
 1279              		.section	.data.CLEAR_TO_GO,"aw"
 1280              		.set	.LANCHOR0,. + 0
 1283              	CLEAR_TO_GO:
 1284 0000 01       		.byte	1
 1285              		.section	.data.ICAL,"aw"
 1286              		.align	2
 1287              		.set	.LANCHOR7,. + 0
 1290              	ICAL:
 1291 0000 CDCCB542 		.word	1119210701
 1292              		.section	.data.VCAL,"aw"
 1293              		.align	2
 1294              		.set	.LANCHOR6,. + 0
 1297              	VCAL:
 1298 0000 00A96C43 		.word	1131194624
 1299              		.section	.data.cycles,"aw"
 1300              		.align	2
 1301              		.set	.LANCHOR1,. + 0
 1304              	cycles:
 1305 0000 7D000000 		.word	125
 1306              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1307              		.align	2
 1308              	.LC1:
 1309 0000 5372632F 		.ascii	"Src/main.c\000"
 1309      6D61696E 
 1309      2E6300
 1310              		.section	.rodata.VOLTS_PER_DIV,"a"
 1311              		.align	2
 1314              	VOLTS_PER_DIV:
 1315 0000 3333533A 		.word	978531123
 1316              		.section	.rodata._Error_Handler.str1.4,"aMS",%progbits,1
 1317              		.align	2
 1318              	.LC0:
 1319 0000 7379735F 		.ascii	"sys_error:%s,line:%d\000"
 1319      6572726F 
 1319      723A2573 
 1319      2C6C696E 
 1319      653A2564 
 1320              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1321              		.align	2
 1322              	.LC2:
 1323 0000 73746172 		.ascii	"start, conn. VT\015\012\000"
 1323      742C2063 
 1323      6F6E6E2E 
 1323      2056540D 
 1323      0A00
 1324 0012 0000     		.space	2
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 36


 1325              	.LC3:
 1326 0014 25640D0A 		.ascii	"%d\015\012\000"
 1326      00
 1327 0019 000000   		.space	3
 1328              	.LC4:
 1329 001c 5625643A 		.ascii	"V%d:%.2f,I%d:%.3f,RP%d:%.1f,AP%d:%.1f,PF%d:%.3f,C%d"
 1329      252E3266 
 1329      2C492564 
 1329      3A252E33 
 1329      662C5250 
 1330 004f 3A256C64 		.ascii	":%ld,\000"
 1330      2C00
 1331 0055 000000   		.space	3
 1332              	.LC5:
 1333 0058 6D696C6C 		.ascii	"millis:%ld\015\012\000"
 1333      69733A25 
 1333      6C640D0A 
 1333      00
 1334 0065 000000   		.space	3
 1335              	.LC6:
 1336 0068 6D696C6C 		.ascii	"millis:%ld,\000"
 1336      69733A25 
 1336      6C642C00 
 1337              	.LC7:
 1338 0074 50433A25 		.ascii	"PC:%ld,\000"
 1338      6C642C00 
 1339              	.LC8:
 1340 007c 487A5F73 		.ascii	"Hz_sum:%.2f,Ready:%d\015\012\000"
 1340      756D3A25 
 1340      2E32662C 
 1340      52656164 
 1340      793A2564 
 1341              		.text
 1342              	.Letext0:
 1343              		.file 2 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 1344              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1345              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1346              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1347              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1348              		.file 7 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/stddef.
 1349              		.file 8 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 1350              		.file 9 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 1351              		.file 10 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 1352              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1353              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1354              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1355              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1356              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1357              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1358              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1359              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_opamp.h"
 1360              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1361              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1362              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1363              		.file 22 "Inc/adc.h"
 1364              		.file 23 "Inc/opamp.h"
 1365              		.file 24 "Inc/tim.h"
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 37


 1366              		.file 25 "Inc/usart.h"
 1367              		.file 26 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/math.h"
 1368              		.file 27 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdio.h"
 1369              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1370              		.file 29 "Inc/gpio.h"
 1371              		.file 30 "Inc/dma.h"
 1372              		.file 31 "<built-in>"
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:18     .text.process_frame:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:26     .text.process_frame:0000000000000000 process_frame
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:343    .text.process_frame:0000000000000198 $d
                            *COM*:0000000000000002 previous_V_Hz
                            *COM*:0000000000000002 cycles_Hz
                            *COM*:0000000000004650 adc1_dma_buff
                            *COM*:0000000000000002 sample_V
                            *COM*:0000000000000002 signed_V
                            *COM*:0000000000004650 adc3_dma_buff
                            *COM*:0000000000000002 sample_I
                            *COM*:0000000000000002 signed_I
                            *COM*:0000000000000002 adc_buff_half_size
                            *COM*:0000000000000002 sample_V_Hz
                            *COM*:0000000000000002 signed_V_Hz
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:365    .text._Error_Handler:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:372    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:407    .text._Error_Handler:000000000000001c $d
                            *COM*:0000000000000096 log_buffer
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:413    .text.SystemClock_Config:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:420    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:569    .text.SystemClock_Config:00000000000000a8 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:578    .text.main:0000000000000000 $t
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:585    .text.main:0000000000000000 main
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1145   .text.main:00000000000002ec $d
                            *COM*:0000000000000001 conv_cplt_flag
                            *COM*:0000000000000001 conv_hfcplt_flag
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1244   .bss.Hz_value_ready:0000000000000000 Hz_value_ready
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1231   .bss.Hz_sum:0000000000000000 Hz_sum
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1224   .bss.Hz_array_counter:0000000000000000 Hz_array_counter
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1217   .bss.Hz_array:0000000000000000 Hz_array
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1238   .bss.Hz_t1:0000000000000000 Hz_t1
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1264   .bss.hz_ready:0000000000000000 hz_ready
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1271   .bss.pulseCount:0000000000000000 pulseCount
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1290   .data.ICAL:0000000000000000 ICAL
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1297   .data.VCAL:0000000000000000 VCAL
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1314   .rodata.VOLTS_PER_DIV:0000000000000000 VOLTS_PER_DIV
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1283   .data.CLEAR_TO_GO:0000000000000000 CLEAR_TO_GO
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1277   .bss.readings_ready:0000000000000000 readings_ready
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1304   .data.cycles:0000000000000000 cycles
                            *COM*:0000000000000002 adc1_full_conv_overrun
                            *COM*:0000000000000002 adc1_half_conv_overrun
                            *COM*:0000000000000002 adc1_full_conv_complete
                            *COM*:0000000000000002 adc1_half_conv_complete
                            *COM*:0000000000000002 adc_buff_size
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1213   .bss.Hz_array:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1220   .bss.Hz_array_counter:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1227   .bss.Hz_sum:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1234   .bss.Hz_t1:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1245   .bss.Hz_value_ready:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1247   .bss.channels:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1251   .bss.channels:0000000000000000 channels
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1254   .bss.channels_ready:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1258   .bss.channels_ready:0000000000000000 channels_ready
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1265   .bss.hz_ready:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1267   .bss.pulseCount:0000000000000000 $d
ARM GAS  /var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s 			page 39


/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1278   .bss.readings_ready:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1286   .data.ICAL:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1293   .data.VCAL:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1300   .data.cycles:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1307   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1311   .rodata.VOLTS_PER_DIV:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1317   .rodata._Error_Handler.str1.4:0000000000000000 $d
/var/folders/md/lgcc8l7571l9vt9sx0g0zflw0000gn/T//ccn1xVC8.s:1321   .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
memset
sprintf
debug_printf
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_ul2f
__aeabi_l2f
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_OPAMP4_Init
MX_ADC3_Init
MX_TIM8_Init
MX_ADC1_Init
MX_USART1_UART_Init
HAL_ADCEx_Calibration_Start
HAL_OPAMP_Start
HAL_Delay
start_ADCs
rPi_printf
HAL_GetTick
sqrtf
hadc1
hadc3
hopamp4
